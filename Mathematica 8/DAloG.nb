(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    229586,       4419]
NotebookOptionsPosition[    226419,       4317]
NotebookOutlinePosition[    226795,       4334]
CellTagsIndexPosition[    226752,       4331]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"path", " ", "=", " ", 
   RowBox[{"SystemDialogInput", "[", "\"\<FileOpen\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.569776579220193*^9, 3.569776580946434*^9}, {
   3.5697768967385807`*^9, 3.569776903250059*^9}, 3.569777053113473*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"image", " ", "=", " ", 
   RowBox[{"Import", "[", "path", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569776579220193*^9, 3.569776580946434*^9}, {
   3.5697768967385807`*^9, 3.569776903250059*^9}, 3.569777053113473*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getImageData", "[", "image_", "]"}], " ", ":=", " ", 
   RowBox[{"ImageData", "[", 
    RowBox[{"image", ",", "\"\<Byte\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569954143161304*^9, 3.569954160516678*^9}, {
  3.569956620984666*^9, 3.56995662268985*^9}, {3.5699620659579563`*^9, 
  3.569962066972682*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"imageFromData", "[", "data_", "]"}], ":=", 
   RowBox[{"Image", "[", 
    RowBox[{"data", ",", "\"\<Byte\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569962068587915*^9, 3.5699620960521793`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getRGB", "[", "imageData_", "]"}], " ", ":=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"imageData", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "3", "}"}], ",", " ", 
       RowBox[{"{", "1", "}"}], ",", " ", 
       RowBox[{"{", "2", "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569954172665206*^9, 3.569954189525277*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"combineColor", "[", "r_", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"r", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5699620229519672`*^9, 3.569962056279478*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getTransformants", "[", "layer_", "]"}], " ", ":=", " ", 
   RowBox[{"Partition", "[", 
    RowBox[{"layer", ",", " ", 
     RowBox[{"{", 
      RowBox[{"8", ",", "8"}], "}"}], ",", "8", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5699542005985394`*^9, 3.569954228267592*^9}, {
  3.5699561059345922`*^9, 3.5699561068692627`*^9}, {3.569961415300301*^9, 
  3.5699614162824793`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mergeTransformants", "[", "layer_", "]"}], " ", ":=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{"layer", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569961417282752*^9, 3.56996148044905*^9}, {
  3.569961520925096*^9, 3.569961528681322*^9}, {3.569961787812261*^9, 
  3.569961789691675*^9}, {3.569962371810246*^9, 3.569962372369109*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"normalize", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", " ", 
       RowBox[{"result", " ", "=", " ", "t"}]}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", "row_", "]"}], " ", ":=", " ", 
        RowBox[{"row", " ", "/;", 
         RowBox[{
          RowBox[{
           RowBox[{"First", "[", "row", "]"}], " ", "\[Equal]", 
           RowBox[{"-", "1"}]}], "\[Or]", 
          RowBox[{
           RowBox[{"Last", "[", "row", "]"}], " ", "!=", 
           RowBox[{"-", "1"}]}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", " ", "[", "row_", "]"}], ":=", " ", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"g", ",", " ", "r"}], "}"}], ",", " ", 
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"g", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"result_", ",", "last_"}], "}"}], ",", "item_"}], 
              "]"}], " ", ":=", " ", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Append", "[", 
                 RowBox[{"result", ",", "item"}], "]"}], ",", "item"}], "}"}],
               " ", "/;", " ", 
              RowBox[{"item", " ", "\[NotEqual]", " ", 
               RowBox[{"-", "1"}]}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"g", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"result_", ",", "last_"}], "}"}], ",", " ", "item_"}],
               "]"}], ":=", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Append", "[", 
                RowBox[{"result", ",", "last"}], "]"}], ",", "last"}], 
              "}"}]}], ";", "\[IndentingNewLine]", " ", 
            RowBox[{
             RowBox[{"Fold", "[", 
              RowBox[{"g", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"-", "1"}]}], "}"}], ",", "row"}], "]"}], " ", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", ")"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"f", " ", "/@", " ", "result"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"result", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "2", "}"}], ",", 
            RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"f", " ", "/@", " ", "result"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"result", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "2", "}"}], ",", " ", 
            RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}], 
      "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569951915438587*^9, 3.5699519167873898`*^9}, {
   3.569952127804668*^9, 3.5699521966633873`*^9}, {3.569952252147891*^9, 
   3.5699523026672583`*^9}, {3.56995233832399*^9, 3.569952365410447*^9}, {
   3.5699524008061647`*^9, 3.5699524154269123`*^9}, {3.56995249633495*^9, 
   3.569952551196596*^9}, {3.569952592061433*^9, 3.569952659390031*^9}, 
   3.569952726005046*^9, {3.569952773589889*^9, 3.569952917172494*^9}, {
   3.5699529498575373`*^9, 3.5699530080233088`*^9}, {3.569953065456861*^9, 
   3.56995309192769*^9}, {3.5699532381988287`*^9, 3.569953239602421*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"restructure", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"FourierDCT", "[", "t", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569953438641622*^9, 3.569953439546445*^9}, {
  3.569953747100647*^9, 3.569953835341618*^9}, {3.569953869661892*^9, 
  3.569953904243284*^9}, {3.56996103594886*^9, 3.5699610369145412`*^9}, {
  3.570261223036124*^9, 3.570261224865569*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"reverseDCT", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"FourierDCT", "[", 
    RowBox[{"t", ",", "3"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569961038603322*^9, 3.5699610549360323`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quant", " ", "=", " ", 
   RowBox[{"(", GridBox[{
      {"3", "5", "7", "9", "11", "13", "15", "17"},
      {"5", "7", "9", "11", "13", "15", "17", "19"},
      {"7", "9", "11", "13", "15", "17", "19", "21"},
      {"9", "11", "13", "15", "17", "19", "21", "23"},
      {"11", "13", "15", "17", "19", "21", "23", "25"},
      {"13", "15", "17", "19", "21", "23", "25", "27"},
      {"15", "17", "19", "21", "23", "25", "27", "29"},
      {"17", "19", "21", "23", "25", "27", "29", "31"}
     }], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.571163499292368*^9, 3.571163528841443*^9}, {
  3.5711635829055433`*^9, 3.5711637085745277`*^9}, {3.571163904693143*^9, 
  3.5711639050611973`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"quantize", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Map", " ", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "/", " ", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], " ", "&"}], ",", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", "Quant"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", 
         RowBox[{"{", "3", "}"}], ",", 
         RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5711633485965*^9, 3.5711633620830812`*^9}, {
   3.571163430224935*^9, 3.57116349796686*^9}, {3.571163714850692*^9, 
   3.5711637585143003`*^9}, {3.571163811090947*^9, 3.571163813177745*^9}, {
   3.571163849636364*^9, 3.571163849764329*^9}, 3.57116390760868*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dequantize", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "*", " ", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], " ", "&"}], ",", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", "Quant"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2", "}"}], ",", " ", 
         RowBox[{"{", "3", "}"}], ",", " ", 
         RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.571163909789914*^9, 3.571163971646008*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rounded", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "@", 
       RowBox[{"Round", "@", "#"}]}], "&"}], ",", "t", ",", " ", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569953438641622*^9, 3.569953439546445*^9}, {
   3.569953747100647*^9, 3.569953835341618*^9}, {3.569953869661892*^9, 
   3.5699538820600967`*^9}, 3.569953982017502*^9, {3.569955198729237*^9, 
   3.569955201080264*^9}, {3.569956267111884*^9, 3.569956290400119*^9}, {
   3.569956356562086*^9, 3.569956376863276*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"signs", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#", ">", "0"}], ",", "1", ",", "0"}], "]"}], "&"}], ",", "t",
      ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569953438641622*^9, 3.569953439546445*^9}, {
  3.569953747100647*^9, 3.569953835341618*^9}, {3.569953869661892*^9, 
  3.5699538820600967`*^9}, {3.569953982017502*^9, 3.569954048501808*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"applySigns", "[", 
    RowBox[{"numbers_", ",", "signs_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", ",", " ", "f"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", " ", "=", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"numbers", ",", " ", "signs"}], "}"}], "~", "Flatten", "~", 
         
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "2", "}"}], ",", 
           RowBox[{"{", "3", "}"}], ",", " ", 
           RowBox[{"{", "1", "}"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"{", 
          RowBox[{"n_", ",", "1"}], "}"}], "]"}], " ", ":=", " ", "n"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"{", 
          RowBox[{"n_", ",", "0"}], "}"}], "]"}], " ", ":=", 
        RowBox[{"-", "n"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"f", ",", "result", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "result"}], "\[IndentingNewLine]", ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569960411135007*^9, 3.5699604625253143`*^9}, {
  3.569960636829064*^9, 3.569960713515699*^9}, {3.5699607452416077`*^9, 
  3.5699608292348013`*^9}, {3.569960865776285*^9, 3.5699609360351133`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bits", "[", "number_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"lastbit", "[", "x_", "]"}], ":=", " ", 
      RowBox[{
       RowBox[{"\[LeftCeiling]", 
        RowBox[{"x", "/", "2"}], "\[RightCeiling]"}], "-", 
       RowBox[{"\[LeftFloor]", 
        RowBox[{"x", "/", "2"}], "\[RightFloor]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"collectBits", "[", 
       RowBox[{"x_", ",", "bits_"}], "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"collectBits", "[", 
        RowBox[{
         RowBox[{"\[LeftFloor]", 
          RowBox[{"x", "/", "2"}], "\[RightFloor]"}], ",", 
         RowBox[{"Append", "[", 
          RowBox[{"bits", ",", 
           RowBox[{"lastbit", "[", "x", "]"}]}], "]"}]}], "]"}], "/;", 
       RowBox[{"x", ">", "0"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"collectBits", "[", 
       RowBox[{"x_", ",", "bits_"}], "]"}], " ", ":=", " ", 
      RowBox[{"bits", " ", "/;", " ", 
       RowBox[{"x", " ", "\[Equal]", " ", "0"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"collectBits", "[", 
      RowBox[{"number", ",", 
       RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.569958222400949*^9, 3.569958282448319*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fromBits", "[", "b_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", " ", "result"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"number_", ",", "bit_"}], "]"}], " ", ":=", " ", 
        RowBox[{
         RowBox[{"number", "*", "2"}], " ", "+", " ", "bit"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Fold", "[", 
         RowBox[{"f", ",", "0", ",", 
          RowBox[{"Reverse", " ", "@", " ", "b"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}], 
      "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569960316706427*^9, 3.569960380396755*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bitcube", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", " ", "=", " ", "t"}], "}"}], ",", " ", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", " ", "=", " ", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{"bits", ",", "result", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], " ", "//", " ", "PadRight"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"result", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}], 
      "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5699582093290854`*^9, 3.569958217010107*^9}, {
  3.569958298811247*^9, 3.569958394559031*^9}, {3.569958543806539*^9, 
  3.569958547797279*^9}, {3.56995860746146*^9, 3.569958611716218*^9}, {
  3.569958706612442*^9, 3.5699587197256193`*^9}, {3.5699587544074993`*^9, 
  3.5699587706346807`*^9}, {3.569958803567896*^9, 3.5699588055743628`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"foldCube", "[", "sequences_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"planes", ",", " ", "cube", ",", " ", "result"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"planes", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Partition", "[", 
            RowBox[{"#", ",", 
             SqrtBox[
              RowBox[{"Length", "[", "#", "]"}]]}], "]"}], ")"}], "&"}], "/@",
          " ", "sequences"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cube", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"planes", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "2", "}"}], ",", 
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"fromBits", ",", "cube", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "result"}], "\[IndentingNewLine]", ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569959815444153*^9, 3.5699598640709543`*^9}, {
  3.569960037137368*^9, 3.5699600420392103`*^9}, {3.569960084099671*^9, 
  3.5699601408101187`*^9}, {3.569960217194652*^9, 3.569960310107308*^9}, {
  3.569960394050384*^9, 3.569960399321801*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"compressBits", "[", "bits_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f", ",", "result"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fs_", ",", "cs_", ",", " ", "pe_"}], "}"}], ",", "ce_"}], 
         "]"}], " ", ":=", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fs", ",", 
           RowBox[{"cs", " ", "+", " ", "1"}], ",", " ", "ce"}], "}"}], " ", "/;", 
         RowBox[{"ce", " ", "\[Equal]", "pe"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fs_", ",", "cs_", ",", "pe_"}], "}"}], ",", "ce_"}], 
         "]"}], " ", ":=", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Append", "[", 
            RowBox[{"fs", ",", "cs"}], "]"}], ",", "1", ",", "ce"}], "}"}], "/;",
          " ", 
         RowBox[{"ce", "\[NotEqual]", "pe"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Fold", "[", 
         RowBox[{"f", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "1", ",", "0"}], "}"}], ",", "bits"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], " ", ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "result"}], 
      "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.56995881067035*^9, 3.569958906319659*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"decompressBits", "[", "s_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "flat", "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"flat", "[", 
         RowBox[{"n_", ",", 
          RowBox[{"{", "i_", "}"}]}], "]"}], " ", ":=", " ", 
        RowBox[{
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{"1", "&"}], ",", "n"}], "]"}], " ", "/;", " ", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"i", ",", "2"}], "]"}], "\[Equal]", "0"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"flat", "[", 
         RowBox[{"n_", ",", 
          RowBox[{"{", "i_", "}"}]}], "]"}], " ", ":=", " ", 
        RowBox[{
         RowBox[{"Array", "[", 
          RowBox[{
           RowBox[{"0", "&"}], ",", "n"}], "]"}], " ", "/;", " ", 
         RowBox[{
          RowBox[{"Mod", "[", 
           RowBox[{"i", ",", "2"}], "]"}], "\[Equal]", "1"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"MapIndexed", "[", 
          RowBox[{"flat", ",", "s"}], "]"}], " ", "//", " ", "Flatten"}], " ",
         "//", " ", "Rest"}]}], "\[IndentingNewLine]", ")"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.569959702892845*^9, 3.569959768945787*^9}, 
   3.569962477966496*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"compressTransformant", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"result", " ", "=", " ", "t"}], ",", " ", "signsMatrix"}], 
      "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"normalize", "[", "result", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"restructure", "[", "result", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"quantize", "[", "result", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"signsMatrix", " ", "=", " ", 
        RowBox[{"signs", "[", "result", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"rounded", "[", "result", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"bitcube", "[", "result", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"compressBits", " ", "/@", " ", "result"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"result", ",", "signsMatrix"}], "}"}]}], 
      "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569954997037359*^9, 3.569955180631694*^9}, {
  3.5699552278479977`*^9, 3.5699553030474777`*^9}, {3.569955475883746*^9, 
  3.569955484153819*^9}, {3.5699555174782877`*^9, 3.569955533978396*^9}, {
  3.569956216730494*^9, 3.5699562266785088`*^9}, {3.5699581508924303`*^9, 
  3.569958152299108*^9}, {3.569958199313759*^9, 3.569958205223439*^9}, {
  3.569958433988206*^9, 3.569958437631364*^9}, {3.569958933000325*^9, 
  3.5699589463150043`*^9}, {3.569959005880402*^9, 3.569959013277605*^9}, {
  3.569959273921927*^9, 3.569959274089138*^9}, {3.571164044199421*^9, 
  3.571164055228764*^9}, {3.5712140043397007`*^9, 3.571214052650014*^9}, {
  3.57121415658365*^9, 3.571214156925479*^9}, {3.5712146309997683`*^9, 
  3.57121464202547*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"decompressTransformant", "[", 
    RowBox[{"{", 
     RowBox[{"r_", ",", "s_"}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", " ", "=", " ", "r"}], "}"}], ",", " ", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", "=", 
        RowBox[{"decompressBits", " ", "/@", " ", "result"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"foldCube", "[", "result", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"applySigns", "[", 
         RowBox[{"result", ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", "=", " ", 
        RowBox[{"dequantize", "[", "result", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"reverseDCT", "[", "result", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Map", "[", 
         RowBox[{"Round", ",", "result", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "result"}], "\[IndentingNewLine]", ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5699594657876177`*^9, 3.5699596031812763`*^9}, {
   3.569959663999213*^9, 3.569959693628224*^9}, {3.569961243649276*^9, 
   3.569961285408643*^9}, {3.571164061424411*^9, 3.571164078247684*^9}, {
   3.571214171700253*^9, 3.5712141758964663`*^9}, 3.571214381421956*^9, {
   3.571214619828753*^9, 3.571214627911643*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"compress", "[", "image_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"result", " ", "=", "image"}], ",", 
       RowBox[{"dimensions", " ", "=", " ", 
        RowBox[{"ImageDimensions", "[", "image", "]"}]}]}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"getImageData", "[", "result", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"getRGB", "[", "result", "]"}]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"getTransformants", " ", "/@", " ", "result"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"compressTransformant", ",", "result", ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"dimensions", ",", "result"}], "}"}]}], "\[IndentingNewLine]",
       ")"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5697766106209993`*^9, 3.569776639678393*^9}, {
   3.569776699238575*^9, 3.56977670103586*^9}, {3.569776785056836*^9, 
   3.569776786056754*^9}, {3.569776892688807*^9, 3.5697769199985123`*^9}, {
   3.569777102676035*^9, 3.569777104027302*^9}, {3.569777148190547*^9, 
   3.56977716149798*^9}, {3.569777257014852*^9, 3.569777381629394*^9}, {
   3.569777431503338*^9, 3.5697774402534246`*^9}, {3.5697835556738577`*^9, 
   3.569783604321636*^9}, {3.5697845218737183`*^9, 3.5697845612775517`*^9}, {
   3.569784601241941*^9, 3.5697846931934967`*^9}, {3.569786106289003*^9, 
   3.56978614232412*^9}, {3.569789241815585*^9, 3.569789247567582*^9}, {
   3.569789297250489*^9, 3.569789389616067*^9}, {3.569789435452567*^9, 
   3.5697895673746233`*^9}, {3.5697896366595507`*^9, 3.569789656924408*^9}, {
   3.5697897735855*^9, 3.56978977921941*^9}, {3.569949829462646*^9, 
   3.569949926822034*^9}, {3.569950004132173*^9, 3.5699500617437353`*^9}, {
   3.569950107930195*^9, 3.569950181539209*^9}, {3.569950217155385*^9, 
   3.5699502219034224`*^9}, 3.569950262980341*^9, {3.5699503238878593`*^9, 
   3.569950496590577*^9}, {3.569950557504675*^9, 3.569950568493188*^9}, {
   3.569950613255189*^9, 3.56995063540923*^9}, {3.569950667798882*^9, 
   3.5699507064349318`*^9}, {3.5699509190107317`*^9, 3.569950966196794*^9}, 
   3.569951010124881*^9, {3.5699510561265593`*^9, 3.569951057473689*^9}, {
   3.569951109255438*^9, 3.569951552125853*^9}, {3.569951687030362*^9, 
   3.5699517488520527`*^9}, 3.569951798135043*^9, 3.569951910215541*^9, {
   3.569953401947422*^9, 3.5699534261545153`*^9}, {3.5699541846190557`*^9, 
   3.5699541856370373`*^9}, {3.569954866018598*^9, 3.569954995434675*^9}, {
   3.569955539238119*^9, 3.56995557726896*^9}, {3.5699556125386877`*^9, 
   3.569955681075945*^9}, {3.569955785173018*^9, 3.56995578723461*^9}, 
   3.5699558788349333`*^9, {3.569955970933056*^9, 3.569955973355077*^9}, {
   3.569956051246867*^9, 3.569956093618023*^9}, {3.5699561917883997`*^9, 
   3.569956193316231*^9}, {3.569956496791914*^9, 3.569956506662722*^9}, 
   3.569956586737975*^9, {3.5699566997239122`*^9, 3.5699567141836042`*^9}, {
   3.5699567996574793`*^9, 3.56995682952988*^9}, {3.569956873592408*^9, 
   3.569956907676362*^9}, {3.569957876324033*^9, 3.5699578771032867`*^9}, {
   3.569957949179174*^9, 3.569958059400159*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"export", "[", "result_", "]"}], " ", ":=", " ", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"exportPath", " ", "=", " ", 
      RowBox[{"SystemDialogInput", "[", "\"\<FileSave\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{"exportPath", ",", "result", ",", "\"\<WDX\>\""}], "]"}], ";"}],
     "\[IndentingNewLine]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569776662384433*^9, 3.5697766842787533`*^9}, {
  3.5697767355068007`*^9, 3.569776743245925*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"decompress", "[", 
    RowBox[{"{", 
     RowBox[{"dimensions_", ",", "r_"}], "}"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", " ", "=", "r"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"decompressTransformant", ",", " ", "result", ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"mergeTransformants", " ", "/@", " ", "result"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"combineColor", "[", "result", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"imageFromData", "[", "result", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"ImageCrop", "[", 
         RowBox[{"result", ",", "dimensions", ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", " ", "Bottom"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "result"}], "\[IndentingNewLine]", ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569776746184491*^9, 3.569776772550455*^9}, {
   3.569959170332354*^9, 3.5699592011498137`*^9}, {3.5699593121527433`*^9, 
   3.569959445967946*^9}, {3.569961940504778*^9, 3.5699619517575827`*^9}, {
   3.569961997715007*^9, 3.5699620103594*^9}, {3.5699621215702667`*^9, 
   3.569962150596621*^9}, {3.569963207850071*^9, 3.569963358510096*^9}, 
   3.569965854266136*^9, {3.5712145987436438`*^9, 3.5712146070025*^9}, {
   3.571215481681641*^9, 3.5712155297626743`*^9}, 3.571215682352532*^9, {
   3.571215752266518*^9, 3.5712157694723253`*^9}, 3.5712158323438396`*^9, 
   3.571216103808283*^9, {3.571216136504446*^9, 3.571216160468528*^9}, {
   3.571216204417604*^9, 3.571216204849474*^9}, {3.5712167705571632`*^9, 
   3.571216794232345*^9}, {3.571216868354188*^9, 3.571216869071763*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"statsFromTransformant", "[", "s_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"g", ",", "f", ",", " ", "result"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"zeros_", ",", "ones_", ",", "1"}], "}"}], ",", "item_"}], 
         "]"}], ":=", " ", 
        RowBox[{"{", 
         RowBox[{"zeros", ",", 
          RowBox[{"Append", "[", 
           RowBox[{"ones", ",", "item"}], "]"}], ",", "0"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"zeros_", ",", "ones_", ",", "0"}], "}"}], ",", "item_"}], 
         "]"}], ":=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Append", "[", 
           RowBox[{"zeros", ",", "item"}], "]"}], ",", "ones", ",", "1"}], 
         "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "[", "seq_", "]"}], ":=", 
        RowBox[{
         RowBox[{"Fold", "[", 
          RowBox[{"g", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{"{", "}"}], ",", "1"}], "}"}], ",", 
           RowBox[{"Rest", "@", "s"}]}], "]"}], " ", "/;", " ", 
         RowBox[{
          RowBox[{"First", "[", "s", "]"}], " ", "\[Equal]", "1"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "[", "seq_", "]"}], ":=", 
        RowBox[{"Fold", "[", 
         RowBox[{"g", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"First", "[", "s", "]"}], "-", "1"}], "}"}], ",", 
            RowBox[{"{", "}"}], ",", "1"}], "}"}], ",", 
          RowBox[{"Rest", "@", "s"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"f", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#1", ",", "#2"}], "}"}], "&"}], " ", "@@", " ", 
         "result"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "result"}], "\[IndentingNewLine]", ")"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5699676786494493`*^9, 3.5699678575151577`*^9}, {
   3.5699678999185123`*^9, 3.5699679021068153`*^9}, 3.569967944385673*^9, {
   3.569968026028893*^9, 3.5699680485109367`*^9}, {3.569968154478653*^9, 
   3.569968156395481*^9}, {3.5699681905756063`*^9, 3.5699681962288227`*^9}, {
   3.569995662011867*^9, 3.569995670001248*^9}, {3.5699964972808743`*^9, 
   3.569996498623073*^9}, {3.569996660291828*^9, 3.569996662082526*^9}, {
   3.569996699533288*^9, 3.569996747306725*^9}, {3.569997076166552*^9, 
   3.569997090304563*^9}, {3.56999714318642*^9, 3.5699971533924847`*^9}, {
   3.571215276280203*^9, 3.571215287178212*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"statsFromTransformant", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "2"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.569967912060577*^9, 3.5699679371367702`*^9}, {
  3.5699956849695063`*^9, 3.569995686480855*^9}, {3.5699968088284483`*^9, 
  3.569996813233796*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5699679471329327`*^9, 3.56996805166313*^9, 3.569968161123537*^9, {
   3.569995673112759*^9, 3.5699956879056892`*^9}, 3.569996815160486*^9, 
   3.569996949542906*^9, 3.56999715742943*^9, 3.571160879932694*^9, 
   3.57116441650697*^9, 3.571165690668942*^9, 3.571214751701394*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"collectStats", "[", 
    RowBox[{"{", 
     RowBox[{"_", ",", "r_"}], "}"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"result", " ", "=", " ", "r"}], "}"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"result", " ", "=", " ", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"result", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "4", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]}], "]"}], " ",
          "//", " ", "First"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"result", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"statsFromTransformant", " ", "/@", " ", "result"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"result", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "2", "}"}], ",", 
            RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "result"}], "\[IndentingNewLine]", ")"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569776746184491*^9, 3.569776772550455*^9}, {
   3.569959170332354*^9, 3.5699592011498137`*^9}, {3.5699593121527433`*^9, 
   3.569959445967946*^9}, {3.569961940504778*^9, 3.5699619517575827`*^9}, {
   3.569961997715007*^9, 3.5699620103594*^9}, {3.5699621215702667`*^9, 
   3.569962150596621*^9}, {3.569963207850071*^9, 3.569963358510096*^9}, 
   3.569965854266136*^9, {3.569966055147965*^9, 3.56996635488205*^9}, {
   3.56996643905599*^9, 3.569966495973753*^9}, {3.5699665872556267`*^9, 
   3.569966588495687*^9}, {3.5699666621568537`*^9, 3.569966708672861*^9}, {
   3.569966758312058*^9, 3.569966790624844*^9}, 3.5699668482114697`*^9, 
   3.5699669012941523`*^9, {3.5699669467371807`*^9, 3.569966978072781*^9}, {
   3.56996702975439*^9, 3.569967089128408*^9}, {3.56996716014539*^9, 
   3.5699673168471746`*^9}, {3.569967358595746*^9, 3.5699674038017397`*^9}, {
   3.56996746951472*^9, 3.569967470043602*^9}, {3.569995231982728*^9, 
   3.569995337459156*^9}, {3.569995415044818*^9, 3.569995429339114*^9}, 
   3.5699958500085382`*^9, {3.56999614436235*^9, 3.569996156062693*^9}, {
   3.56999629330352*^9, 3.5699963049453287`*^9}, {3.569996374485585*^9, 
   3.569996386321085*^9}, {3.569996443120947*^9, 3.569996479297427*^9}, {
   3.569996624801111*^9, 3.569996625184395*^9}, {3.5699967942238894`*^9, 
   3.5699968036217527`*^9}, {3.569997203590748*^9, 3.569997239733243*^9}, {
   3.5700193048969717`*^9, 3.5700193259391937`*^9}, {3.570019497325037*^9, 
   3.57001949827607*^9}, {3.570019606034728*^9, 3.570019608486773*^9}, {
   3.570019759922101*^9, 3.570019772811678*^9}, {3.5700198393400583`*^9, 
   3.570019852632214*^9}, {3.570019967182537*^9, 3.570019970918448*^9}, {
   3.571217096115809*^9, 3.57121710694625*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"c", " ", "=", " ", 
     RowBox[{"image", " ", "//", " ", "compress"}]}], ";"}], " ", "//", " ", 
   "RuntimeTools`Profile"}], ";"}]], "Input",
 CellChangeTimes->{{3.569966533504798*^9, 3.56996654649561*^9}, 
   3.569966636903372*^9, {3.571165256583993*^9, 3.5711652577569942`*^9}, 
   3.5711653171382*^9}],

Cell[CellGroupData[{

Cell[BoxData["c"], "Input",
 CellChangeTimes->{3.571216097932651*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{278., {2., 8.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"100", ",", "100"}], "}"}], ",", 
           RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{49., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 134, 23404038515762555158, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{52., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 134, 23404038515762555158, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{82., {2., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 134, 23404038515762555158, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{74., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[134]]], "Output",
 CellChangeTimes->{3.571216098441165*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"decompress", "[", "c", "]"}]], "Input",
 CellChangeTimes->{{3.571215649496632*^9, 3.57121566430396*^9}, {
  3.571215697652103*^9, 3.5712157045509*^9}, {3.5712160736478767`*^9, 
  3.571216075606395*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
V9kLax3G9/WhOsuXq0IH0oyq/Pkz7Rgr9N7Wmn3qchUdjdQaTTQeSDAYSTKc
zTIj1jns1ztCza57dS5k15W5SkYbcIVociR4G5ekuQ+2pm9MNPyjFQ6FwqDQ
Kyj0JAqzRJ4KEVvQ5ubO8ubk/FbxPCxpGVG2iVpAYCA4aheDJZIX0vsb03vT
LfjWNESq06a3OtFDCXJTgZxU923V8LYaBBddor8ZKcKakBO6mxsN5Sfs58Xh
c8LgOf7reb6rhX6LFUFjRZ5DJW6TtT6zdd5TpW6zJZ5r1UEb3V5b3Z5bXe4b
bU6LNdbjBUY9KRptsUqVnkJ9yXqrDf6Ijjh0Rwq2K2usKDTdU89Dmd5D7Z2H
JoeXtnCIkWqag111aHRXWsFAbuVoYfl0WdFyTfZmQ+J8qWdTmFKqFWu20pNi
nTdNNrwdXrLVrhJZljx51jy17mJrmfrIfNPdSluo3hVT6TyWbFriIhOjzxVt
LhRlK5QdoNKWZv8/tVpGocfIkyB5IwNf3l9e3B6db+2eD+9edBldjVveHIZv
k5cKEBZ7QMSgdjcnCVO1iOaYlSTTOXdxpLvErpc85KWKd1HdslPccFCEe6uj
wvSw2b6k3HCoMBEqTSaWR8FL/Fby3RaynLsy7TtzHXtLPEaq/CbKA6YLApcK
IrdKk0cqDYbLdQaLVbsypeuj+PM9PiVaMEbov0gzZemM1oU1xaLacjYrM9fL
cgZT4rKc7ZIsRQq8NRuSnLrzwvoL4ocL06bLC5fqqicr8nuyEloSgwazw2FN
mdiOzKk87ypfzUoLpnpb9g4PkSY38WRdNmc+WoevNwJEHmfqsrS5iq4mGxLK
HIh1Hugaj4V8u8FE4zyLbyGa9L6qz+L1WbaQU+R1AQaOw8B3EAjENmoCjllA
YjGwbQiOJU6vt9X0WZZ2SfXMuy6gelbQO/soCLWxB9sgb6XHtuaKpiu9hiO0
xj3Fpx24d6OVUT7fN9z5Nv2/T3rzTIXyLyWKrWT5I4sjSNXxpOpYXGUEvCxo
Id9jJN22LdutI8+zOcuttzioOzeoNd5vNDNhPj97NFOtIJi/Ml6iM1FyIk0h
UOW2o+ilIPn7LaFqKwWuUHf2Wkl8b3LQfFXOVlPDVm3ndlUarq0Q01WK6CpF
9VfCu0s2W/MQ7QULdambbbkdyV7l/j8m80LWKuKmswKXiyI6PQQqrDgyDNmi
dVjsxR7JMRwVvAPE7gIHtstNTuKoQjtkse1WoQ2s3Gmt1GG+wHo5WbvLUyBZ
8Z4P93EYchqJIGc5Fg0nIhCobeTMNnoZgSFLQUDgtie3KssGDLI7BJumLGcR
dZvYbdQmaXMVt7G2ur7RPjka01RoUBbCU+7FOOT3BZYkC4+XgceLb6UILqR+
WcrnXCrmQo4mbfdGr9b7L5V5rJV5rpV6TGXZdEXrD5YEjlZGtGX71af41cYF
VIX4V/r4p/+wbY817Mi0bk3/gWwJWi2wm043bw1QXEz9sZBht5hqv5Ti1uFv
1RnhgmrOJ3XXw6ur1qtLF0qyB1LCehK9x/MCpor9RgvdxotdO5Osp4rISwiv
7nj7zij7znCHZn+bBh/rvmSZumDBBKv31hJ3JN8e5X8MlN+c+8nztMJeYiRC
ZzZWezhQZiRUcTbVaKHg52K5w37ZD3SmxqAHe7nefThyFknWCI5BbZOQcCwc
sQJDbsJQGwjECpwwNg5PKxpWT27jKR/RGttK28QPbsIwm7CtDdjI7GJ+U6tt
cgJfsPvDYPvz9SFvhxJ5N4qUEOWKC/mc08Xv5uveTVTTLw4FbI2Gw3pD5spd
BpLMeiKN+qLNBmIsGuJ+TlRETlQlj1VkTVWWzJSVD6Vm59u5jWaEoLvLt1ry
EXXpw1H204mOvQH605GmDR7yLV6Knf6ahT8lC51kx7Md5ou8h1JcOhNichws
A5VF4vVEOsKMRjMsGiKV8rwEKryFWsMU5vJs+mPN43X5ghW4o9XEfMS4U90+
VEYL1idLZ/gLB1ryhFl9z/fSaI0wnclymE4y7feT7nYRGAuUnozVHEs1mMi3
gIosoEorfKr8uOt7FHIeiYD92v1t7yK3d+DbiC04cgMxv7TduowtG4EHl49p
pbaLFPSrdK16zeIyl1YnVjZ6ZpfzW/ucEjKFHF0emBkcN9cEsa53ioIZFqrk
1+sUutPfd2Q/76941F1+Y7LBdrHFZbbSoTVKO9NSKFLza6gaZ5jGt1B93lwP
7bJgm+bEoKG8lIXy/I2qovHUGFhpNqK6aKkgvdTebDLebzUraDHFpczie3eo
dlewaqu/QpLRpwhthmJ3nmJ37kRz5mq/HxnWijG6fMUOMhOpltNZFs0h8iXu
Ar1Rkm1B3+eyjNsClSw+X9eiP/fj0yOpOydVOUCMLX1vkdp4o+14c8BCZ8JS
a9RUuftctv1AuHqDPU+LLUe/p3C3t2ibv8RAnNpGtBZUbLWfozXr/QWDmkci
1+Bw8jZ/D7m1i4ARN2G4FfKOdD1pBBbUv+FQP2lS2KNdOKBZt2DQhbCa6M0c
H4pq77FOLRGwD7qjZUGpqgU0VICV0dkQZ9qRavHpWtHaxFf1GffbSi731NDU
Z6jkh4iEmTG7yD5y+P7QXuSpOfcDzY/XXMWZbUWYzPnfBGiLlnibdcW5zOf5
z2V5DAc5LScFj4d7RigIltrpDkbZz6Q6l9hKbRZ49ofrFNvyBso+jtF42R0q
2hclWu7yqdpNqsZDpsFfqS/OYDzNrCdcvd1fbjRKoy9MutFTcCZFdyxeO0mH
OVX/U6nd9yAZepVvINiatiZNoKtce6Lda3MkZbEluCPFYCHVvC9QrsqKrdyU
qdLsXYEufakJU7eXwLC/EjbPgpBvMBssgP+l1QJse3N7axe1uYfchDY2SYtb
XfULzs3zhm1z2i3TVrVjjmWjRqUz0hUrAhO1diPNpg11UjG5r+2iT5sEAROf
I6Zu541/XPJ0v99eJdJdwVWb9by19F5tIXVXHXV2nFSyv4C/MZOV0E0DlrNm
Hy/ZfLnjwPnAgv2pJsN1FYYroZo8PXGW8/lOi7nWg1FqPR7qmwl29VZSoTIf
HIXoKt3Vy1yUMq3EeiNN2kLUanwkYnXeJmjR9wSKTiXIDUSKNrjx5Zh/iNdj
KHL81hulNhihOhSstBSvV+sgVG3HPxSqPJesMxGnspFnAC8x6Q8Xtf1xOCro
TmEGS12JxFiHLWI8erXJpyNGcyFBbyZKZSTg+6DXt077TyVaT3KV7tQYvGzz
11nMtFvPtZ6IUd9BzaGQM1vbq7AtImpjH7UBrW/szW00Vowblg2LVo6INM78
aF7wq561KJrizZuim6pVnGiSbasTyCx6HZZ/ObjsdGDpde+8Z36xLyLimGor
JCpz2BqL6TpqHiVFgIz4o8lhItVp6k2J2qk/uG0/3zB4dsr+3e1QvjfqT84Y
M11z4H2Y91NwKsNkq9xqPd+gL0R4I1N3NVYpQ/mhr8TNIHW6gQSj1hDtQhfZ
pmC9kXSL2UKbYiehUNnnWdpvK63Yq+04JlOkim3fRKrcLrT8MBmrvpRsPBdj
uJ5sOeirORqk1eUh2eTI0+vPNxTK0+TOWGJF62AHwoIv5We+a62VXhyxw82G
brS69yXqzMRprCSqb8TKbkaIrvjz9lq8qVC7W652pzHMajDVZTTDaSjZhoie
RSEnN7eXYVs7v7Rah9bXD2bXayqGNAu6vxb0fa6ZMW5ZC6pbsiqa/JozTDta
zz3axNtezVVYyJhWeiu96VJSE21oOX1x6+fcMt6qMvmcBNbGkrct5c+cLYGd
KbW+woUQO+ayEMkSF9EY5Y8B/PSRIizp8nxW767EyDNnG38psfva4M0zGi+x
VaixlC67kCGGyJJYiReI1rgaon0vSudlR6jKRObP7jDLwXiLgTjjDEOeCFGG
GkP+ITeFER8VWJXiVKpQXzDneJjoVJhip6t0p7vaUpLzasxPeKp9h6NonjZd
mzNrtxdztc3dJpf7vk4UiSG3KnPZB1qU1yZtMXM+Gx1OI7mGZPstxilOe3ON
276dsWUas2LsNH3RZvayNdGhN92lP8N5JNttc3sfAdtBbxI31hCr8Dk0NAbb
LRuYsSvp025eUG1ZEymf/lQ2yda8yN88zV/WydaUI9dXZTDQ+KOtVqcojy88
8n5A2PmEjFsVTU8Hup/2lF1tT7s2nv+yO+pOgtIht/fAUfFwgMa5ZOPHpU6c
bWFa/XEO7f52ldZGgSIKHny8HoIfQ2Q/JOmwlf7kHI2UwJZqz8bbHDSEdAWq
q9Cd0mO9bvHtZpmz1HSqy5ib5LSzJCpSvUThZtQnsOIniEszaLf80uPycS5G
ps1LbDnDrspWZjTKutxVtSnSvDvYCFbgmK77qcyWoydafr7UYCBbN8eDvSGC
eTyDbyFTGFmuRWqygNpMoQbjlWiV2VDJtXC5mWDpLrsvoz4CxcavO+0/N1iy
jAUqTYQoLMWpI7LNMXDE9toybG1rcxOzCoOto1bm1jo6+qJy241b5gwHYKot
C8LF/ew5HcwZLa+T6p83FAm1Vcp0Nqj0dWoO9KvWNX3LKaLPKnpR0ck8MvZp
pufDSBnTeOHH0STGKos7cUIXnMSoXcWOBSteTTFizLbkSTMVSjMSyzGVLrPR
ipD97M7zOFbuXbOz7FyCESzfDF1usphuOJNsEK74VvAakHlM85PzQZWt1Hyc
JSrXvM+Rr9P6c4kKbcQnkPX9Srv5l2E7wXZrhgYb5nLbL5sljjOp1tslAf1R
1r2x9llG/DlGbMESj2eSNHCNTsMZikk/3yfbMmY63C9yejEU8w1doQ2120AD
jntV+sM+gsvR8huR8mStuu05Rrz5Cw3p+lw4Bzz5e/3ke3ylB4PlpuN0SJhx
OKx3CzEDx2G3sSQYhrS4udI7UZdca1UxYNwxr1o/KpBcTR+QfTWw6GJMw43W
Vs6qatacvDcl5Ww9g1IDE3KNXfwVjRx1XTz9A7yTXfz9pTzdmZwDqVyltnTO
n6lD5O8EyF6NULubavg6VuW1Oy+tCw9tkNSraDUG289nTV9TRn5/0ueuuJX+
cyPbfD5NazRFqytCw1+JWY35yufLQJHhaoa52FqeE6HSvtuNv0DrZY0xY77s
7WjeMxX6TBOeYjsZ8l2uLHWu7CtFZosFNnNZ9u0BhiW2SlGK73yEboRKPFjL
1sU22DSGclt/Pxlt/ijX8Zmz6PEiG4blbFlkmc5e/Q9YtvJ0mMhyjNxqmPRU
oHivI8ewN1+u3rNBD575CJm+MLWuIIXOIIW+CI2NlbLV9bIVWMfS2vjy8uw2
Ym0ZOd45mxdTpZvcIJbVxprW+Cw474Jb8qHAgiNpbZequuny6h/GZF+Jz6Wt
aOFo7BEtquFJyWPJyfiQnfC6MPZNfviH8hju/kKF8mAek2/HHb5edBG4HCB3
K1rlUYz0wxCBW0EC18Mkbvp+v+jKcyrk+/Vai6/LsXqoHOvtbPP1TMOpdJuJ
dNdKX51kW9HP9wDjJaDIejPM+HOdk/BspMpIoESvl2Ch9vNIyYsV9u/bvL4S
86SG/FjGY4ThFebblQ5zWdYdgVqJWhw+3+8nqD1tcuVfylSdzVbpSRR0lj+f
Yv+80JFBnREk6j2bS5WcTpCYjpXu8+WeiRCcDBKZ9ReeDBAdcuOeDBQqMHw+
4s2zEis/GGvSG2XYG2U0GGcxMJAwNZMxNVPQ2ZbcVBM8MBjZOemR0SYd3/gh
svZuWO3JyIajYdVUgYUgrOBQQtnJ6Jqzqc03kmtvJ5Q+Si37GJPB6uT1xND8
srX+JUut0w76F91NbsW4vekpUx1v0C+I4IqTfJemwZqowRgoet2P92zE94uh
Ymfc+Q/5CFD5ClEnqNyqd2QfCZUcD5MfD1aaDtMcjrfoj7Op9tPL91LhfX6C
7jz4TEsl/+G4MSvNWLQipsKiJ0gsWOyyK//RfDvGYgemNreHo6Esu1X6UJfn
XrP3WoFto4+Mj+QDN8Grda5fUKUWm0Vag4ni43kywQb3sz3ehipd134Dim3Y
ZpKkOr25erz4a62Yaq3o+z04p3z4ZkPFpwOE1hPkGuw/zIYIL8fJ9Uc79ce4
jaUEzOfFjMwWzK8Xzq/ltPe45ZeL5zVwpLe/9q88ldJ1NLYVhDeD6HaQ2HU4
vuFwcPYht0jgU3oytul2RPkd+7DLhrZXlbWuiIgc/8YFxLipVMVPGaucM1I8
Zq1xKi3wzWij/NqwFjLNmVDoOROjl6FL7/v9VIgsTaD8CXshECR2yFsIBEuf
zjOna/PhGyDvwgI1poJNhrPMe1Itst2UbWS/PD0F7h8FMu9u2ks9FX4KovWe
tQR/K7T5GCR+LVnrcbM/X6Xj5wSNo6PhbJgCdWyx+USc1kCURq4VR4jS4xKb
zxNx0sgSs+kUmWLnD9lOjMYCxyPMnzpxn/ASvlbvxlNt9yFT41m3K1+PG2eh
/tNuV/bZAIHFSKmZICF0ltpoqCA8RWE5VmYoPmA0OWIxPwtZV7WFHFjfroNh
CucQPpXDX2PqL4TXHYlsBEkdIL4NhNWCgDIQXk0ZW3vUP5vKMgh4l1wLr3ns
FH9DQovi4xfw9jV49xywvAAC7w/rydyyN6C10aWxVAdOxofTo+4NdXEhK0yg
DndCLTlG+GN0bgaqnA1RuxqsfDNO+3aEyu1ELbpKe75uf/keP+UOT/VOT72q
ANXaEPUoc0HeZ9euAHADALmPt00F7n9/ftjwEwV5Ps0wYUhRf9ETIDKVotbo
IRyjSDMW9q3Pl6c3UDzL/FOJo0Cs5psqO96pePXZeNnBYIneQIEMM0ZP+aui
z4Gt5FVH9pORcvdzjOkTlO8nyj7uc+ZbjJBqsvvS6cwyG8A/FSzc68wGS5Vf
TJTaydeajxIfS3EZS/GeyY5YLUvBrc8tT9TANvLRB+FtSzwhZZTBhSC/9Wx0
I4iuO+2Tc9Y6gsIhFgQVUgQUHrOJP+qaczuk7JVD5MPvSiffvTv8+iH165uU
jNeB0CsKc2laP4tnYS53Ql0vOlke8nCnyC+hbc9mXWlQxrSZDyaLh+teN+YA
BszgJ+t5I45TPzivegi9ipBmCRSm//HugvIjKrkHhyVvHtWiO6FCd+z1UcBx
5zLfsytqn2k/3wDfb58weUfd7MlV68QVq/Cw2ZO7N0a6ykOg041jv8piLFxy
JE453pg5WpfZ7MOpTI0PXd6i3V48DXZfp6LlOgMlE4wYFRiozPkuW7097CNw
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
yq/mO8znuQwm2zZbf2r8+anemiVX/X4w96EoXlBndHvS78NMEGuv88suxxdt
DnTNdowlxs9zdB60uX6azAjZqMnEd1Xg2kqHlj61TzNUtj4uan4WlHLJ0vOQ
Z8rJkNwzvoXnbWKBpjPQdwambkfE1QGvFIWu5QU79w+GP+5Iyp+lf0/xlAno
WD+Kz+cPTeY0+HlDSBp8YAOsH4Ch+n1upjMvLx9luEpx9yHQ0AaxMZyFWZJe
Nozy3DSSH4+y3QGs14Dp1zOhss9GwzXWsi3rXUXKfnCmyL8METleZEyHKrHa
LLXfqHKbzrcdSf2BqQ/C1Xpul9mv5pn3BEqR373VR36lwhtaLA2w07lz8fB5
SnCeGtw6A/heXZBkoDFhPW/39cxomOJOsfVEsEyLi0C1s3Cpk3itr2qjxfsm
20/dHtyt9h/yVa/lKZxpt340G8zS5/yi2Yq2yepeo/WTLtcPXe7s9Xbvydsf
dF8Eri8S0xO51RneM32hcfRybs31hNKHrpHXzRzPu4Q99Ah+6pn+2MjvqKo9
0HSgVDYHfNKA5SvlezbALXtbVP0il8Tps3fB6bvA0utL7+yP5kHN3kWD3Dph
E9u7yqo0eekiZupPPz6i4HpJefvCKbFvwM/5fUe1SVWWtKvxdVO5k+IspzQ+
n9B5Ty1zC0TJPB+PUp9NUN3OUJ/044n8fsyDA2zl6E2k6Gw3+MyWuuS7ScwW
OoxEqS3lmEI9gd2hcms5ltWuEp2xxmUhWsFOFg+uHXt5+yj94zOPbx4Re39b
h/uuh/gDP9Gro6FS2DzDjSSV1WSNwXCFMkfBUmfRTnv2AW++pQSF5TipLluG
cs3L1QbXmqzvzYV87HZ8Uqp3MU3xVJPt6800JXyJIdRiB21HH8z6oYdclvud
5hp56wuep+Re8ss/aZEKjGKBXTyFZ8Jh54ijFnZAVYbSQOmMIPeJW/cpHr45
dP8dBcfnQ7yfwNsnlIz0NMwf7scnhLYPpFcPJzXNRpSOGlXMankXfAwvFgiK
5331DNygOX37EMWzG8DV/Fp9GdPsEJejEZXad+Cnz6T16YTgXcB5/oj4bZCi
+2ohRb3fX3I0SL/ZiMGHlSZVlg6q8l1K+7FWYDGXazSSZjSU+mM8zXI53wka
TV4osBzN1GmLkRnL0k7VEjB4dytE9ZsB+0PBx1QsNw5/Izv5wwUDliNVTtxk
a3W5SSzFaWLy9YcDJYqNuMrMPhcbs3Z7iEwFSY+4C7aYs1QbMg+4i5Q7fgrV
p080Ye8Jkx2P114v8YWm06Fev+UCwdlsPlil5H6Xykg1b1vFxzzyJJhCbR0H
HDOoXDOOWoYA059HVFSAKB9QkzvOy3/o9gvwgrxC4D/x8Bnlx/dHnj0B71iB
gvqL2trIkdGswany0tmQ0nn7gil9/9IvSXUS8bniHF8pr58D908AiW+3Apwf
F6Q/GeliKUp87GRM6ahyNdKYXfPDBfF7R3XfUCRq05Zav41Xelhiwj/qrZSp
9N6CgSrfgHk4QmUqWWcm07gnWo/QH7LTF75c6bbdFDBbZI9o8FnKs17Jtio1
lTZ6c8OM9aHs49PiT6h5aE9LvaJWeHlU+RWVn/itNleOAW/uRpv3Az784yFy
1RY8w4HyQwGyGyn6mEwjWJzapJdw0w/WVtuvReZsHvI3M23Zq3z4++JVsC0B
W41+xKbowWjmOo8HZU43qt3vDFcqDdcr1pRwBkZccgylDMm/7Jt5SdMRmJsc
VVME8hJH9XUuS8nTMLAdYuQ4+ubreT7hJ9KyT5k/Hf3EB344M9Q2uzS1+rV0
J5dPVnZsZtdM2+Z3CrVMKNZ0yVg7XPnCCUIclXrbffta9doa+KuKmcoy3lho
Ucp/pnBRojfmvq738Zrdt2tFP1k7AsSSNF/4CNKWWAh0B6h5i1wPkLzeH65S
4/q9N1xlMEZvo9QC2+A+lKDfHq45nGS6WejS6iKTo8qSrv1Vj/GcxP3D364d
4r9H/fYstcjT07w3gMgNYM1Gk6x0u+kn/UQg/5CveLe7yFiQxFCA9ICv+Gy4
4lK4/Hq43GqodK8TZ4sNe5jYNYfvR+pD+fO8ODuS5Ul9HqU+/BWOcsV2DPnW
j0scnla6v97u8Fxpc+ks1UyIYgqMuJWQ+yQk8Z7ej0PaKmRHAU3540Zal3W1
LskqXOISOv3sLRAUvS4gfJnlM6WIzLGA6M+do64D89G9Cxl1gzE1vb5BiWKh
KV/K2lUbR3Rrhr/HV7yZ6POfW/AqyOWvreaKCLlXkPrGxviCzJfj2t/OmAtd
sxF8bsf3LFaTvdFbrtlboMKOw0rwcm2gdL4jh5/8/fYQjXxr/jp3oZEYFbIr
NlKMej1l6+1ER8N0+wM0w8VeWrw+ZcV6Q52ORuzeYWHa47y0xx5SAOUPt3Q+
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
JkHLRaTh8IMuvw4/3uUwsXHnL+hwsa6fzH3+wlNRqnPJprl2bCMJyjnWrDmG
b1MVnrXZCS8EapHyvSYSjVrCVD21GLRF7rM/P3f/NCX/u9saIvdSnL9URapN
VznjRrwhaWpI9DBOkAIuQrUlfxxmeAZmd37L/cK4LsB73phTBRjNUyTdWyPM
h4bvUHYcBWWHzmUBqlhwyIfypCYlzUdw6CEAD0+CE0coXrw6K6H80sCK0dj8
xg+Dc76WN1M973eESfZEy9b5CffEapW5yfZEmlQ5S+RbfCmylqi2k2p0kiix
4Cy156p24y62elv9k7Hc6NVkiPBkhHCnJ2u/H8cIeSfoLDDkLDEfqtbjJd9s
J27FcsGZ55o37/kA8cv+gjTOrw5bPT+i95yyyl0UmorFjkUgxiKxs3HYmcSO
YrOscNHWQu2WNPlGX+65AMFevZfDXrpd7soJqsw5hpxNTvJNTopjMaYjCcaw
AqcC+29Z9lzaLMcl6QF5enVTe9mepL/Zl4+fqtmZroUNFJJ4AIELYLgAip8K
LXkcpXYSrn98y5h6N/QmlMO863QFsrgG6dwZfg06LoEKAJpPUedRgRAAbAFQ
A1RfweHHFIevHj0KAKA6Dq7Tgo+fjkqKUBkrHw2xuVMczrpVYDYUKdsbKjGf
od8ZIN/qJdfq+esv8jVO4h1eCgMBqo2u3+vcBZp8Betcv/b6CbqyUZYYvO52
4+50+9Lvzz0Ywt8bLDgUJb2QbjAcqzUUqBSvRO8veMP98ykv/suZmgzhgtft
mGlU74EEDVZ4rR80kb47mTzX6IJfzd7dyOmpsGxMU+9NVe/4f3o776go7r0P
j72XxF5ioknUJCYx9liDDbH33mLFjgUECyoioKBSFEEQpChFQbrS28Iu7LLs
Ltt7nbpltlN33iHlvjf3mvvXfd9znsOBhXMWnvl8y/DHbx5uFQZtUt/ekHzC
Lf/61rfeHu+uuFfe2MIM2quMPaNJutBR9UCcfjbjptudnZ9f3DCq9skZUfk9
S0uiiZ1rF7x3ikrIj13uPbvW9CHWDSa2jyQOjCOOjyU8P20/NdhwsR8R9Jnl
eC9izwDX2hGSz3q2DOlH7dGveOCg1H4Dgnv0vNwDODWw564R/WcN6zusNzBm
XL/+A4EB/YHPxwLzp/Xa6dYnwm9KY94eyt3VKUenFvn8TLnnXuHvVnBlKT30
IC3kiPD5MXro3uo728pur2+O2S9+dYwWvrX+wZa6QHfqPY/Ci3PTjk4p8vmR
+siNFr2GGrtOnnXGVhtiKwioDdget3t6ysFv7m8aE75zYuTWCcGrx1ydOyjE
fWLm+RWCFF+Cl+biJUtr7xP63E5lamPambx766WJZxyZ1+u9Vl2e0zdyx/TM
c7+k/vpTzvGZjdeWs265S8J2IOnnJMlHRemn48/PL4jYY65LIGxVLnUhISt1
8vIsrCx7S07Xir6dy/t1rhzk8viE2DKa2D3atffTjr1DiEujiduTO04O6tox
0Lp0mHB8b86wAQ2DBj4BgEd9gDuD+1wb2/fOrJF3PKYdXT19yeyJP0wb/MX4
gRNHAZM+Bcb2HfTD6J53T09S1HtW+M1OOzKlPmB17a0VnEebhNF7bfkBrHBP
8NVZ5qP9Fbe3lN5Zz4nbL0s/0vBkKzV8R82DtdXBa0pvLa24vYgVtUaatL0l
flPd41WypAOsmIPsR79qX/vXBu3L8vrZe2WPiEOjIjZ/eXPRUJ9ZPW4s6BGy
+tOSG5tsZVEE/aWhMgiuuNfBf9EhTOS+uUKPPc57frrs+kb/OUDgooEvtk+N
2Tgh4+AXVVd+Kjg1jXJtiSRyOyVgher12Xd+7py3vvK8cIc0F6GnE5JCnJqk
K3+G1cSb5gPoLEDzA6D8EVDNBbSLe4FuvcGVvczufeEN/SXLAcEcoHEyUDYU
KB/Yo3hg78x5wOv5PZ/N7hk4G7i1atjNPdNO7/xh84qp837s9cM3/b//Bvh2
CjBxQO/vhwFBh8ZD5afr/b99dWBE3qlvM3/9uvbGEnqwu/LlsZIbq4Uxh3mx
x3gJp6hRuysfupeGLi1/vEKSfTzPb0Xdo+2StOOKt4dbkjY2xa5mxa5jx27m
P9nGjNzdcH8XN/7sh4BNuT5L/Fb1u79lWKj75/4Lhkes/ezpxkk35g24v3JS
bcA+5/v7nTUR7Q0x7bwUQpVNSDNEOTffh+ysiTiUd3pOuPuocPfR0RtG55ya
WuY9I+3wuDLvWbLwDfX+S0r9lpbc3lD65KCxJlFFjVdXJ4vf3GElXeWk+Knz
7xs3jILch8t/GSxaNkiyfJjCY6Rm42jd5jHyVb1Z7r15m4eIto/m75oiPTAb
OroM9Vwtvj+LefO7wtOTYg+NCTnyxZ1zs25cWOJ9etmVqwtOnpl75OjUo/vH
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
    "], {{0, 100}, {100, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{100, 100},
  PlotRange->{{0, 100}, {0, 100}}]], "Output",
 CellChangeTimes->{{3.571215650261156*^9, 3.571215708424292*^9}, {
   3.571215777354064*^9, 3.571215781269382*^9}, 3.571216079938727*^9, 
   3.571216110818276*^9, 3.5712161715047197`*^9, 3.5712162128155193`*^9, 
   3.57121680760402*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"stat", " ", "=", " ", 
   RowBox[{"collectStats", "[", "c", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.569966553682364*^9, 3.569966557924644*^9}, {
   3.5699666001509743`*^9, 3.569966604141534*^9}, 3.569967004029262*^9, {
   3.56996710272847*^9, 3.569967107663219*^9}, {3.5699674340416117`*^9, 
   3.5699674351774282`*^9}, {3.569996778800436*^9, 3.569996783742301*^9}, 
   3.5699971948838167`*^9, {3.570019259165512*^9, 3.570019283444615*^9}, {
   3.5702142308469973`*^9, 3.5702142342117157`*^9}, {3.570258924913804*^9, 
   3.570258926818322*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"zeros", " ", "=", " ", 
   RowBox[{"stat", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ones", " ", "=", " ", 
   RowBox[{"stat", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5702142446697197`*^9, 3.5702142595954638`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"zeros", " ", "//", " ", "Length"}]], "Input",
 CellChangeTimes->{{3.571164970820759*^9, 3.5711649789272413`*^9}}],

Cell[BoxData["4677"], "Output",
 CellChangeTimes->{3.571164979444889*^9, 3.571165700336076*^9, 
  3.571214761889573*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ones", " ", "//", " ", "Length"}]], "Input",
 CellChangeTimes->{{3.57116498251749*^9, 3.571164987043449*^9}}],

Cell[BoxData["4677"], "Output",
 CellChangeTimes->{3.5711649879516706`*^9, 3.571165700393753*^9, 
  3.571214761963416*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["zeros"], "Input",
 CellChangeTimes->{{3.571164991895322*^9, 3.571164992648861*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{278., {2., 8.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"15", ",", "47"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "55"}], "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16", ",", "47"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "55"}], "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "54"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"15", ",", "47"}], "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"15", ",", "47"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "55"}], "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8", ",", "55"}], "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8", ",", "54"}], "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "55"}], "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "55"}], "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"\[LeftSkeleton]", "4533", "\[RightSkeleton]"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "6", ",", "7", ",", "47"}], "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"14", ",", "47"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "55"}], "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16", ",", "47"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8", ",", "55"}], "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "7", ",", "47"}], "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8", ",", "7", ",", "6", ",", "39"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "7", ",", "47"}], "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "5", ",", "6", ",", "6", ",", "7", ",", "31"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"15", ",", "47"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "55"}], "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "7", ",", "47"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "62"}], "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "63", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "64", "}"}], ",", 
           RowBox[{"{", "63", "}"}]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{49., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 103, 23404038515762555158, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{52., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 103, 23404038515762555158, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{82., {2., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 103, 23404038515762555158, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{74., {1., 8.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[103]]], "Output",
 CellChangeTimes->{3.57116499327302*^9, 3.571165700491138*^9, 
  3.571214762060835*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Histogram", "[", "ones", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", "zeros", "]"}]}], "Input",
 CellChangeTimes->{{3.570214267427663*^9, 3.57021428477006*^9}, {
   3.5702143208856773`*^9, 3.570214362747316*^9}, {3.570214621653326*^9, 
   3.570214650973111*^9}, {3.570214682787516*^9, 3.570214688724296*^9}, {
   3.570214744619308*^9, 3.570214760517873*^9}, {3.570214813515892*^9, 
   3.570214898706526*^9}, 3.5702149600235653`*^9, {3.5702150682458057`*^9, 
   3.5702151280853043`*^9}, {3.570215273755691*^9, 3.570215286838798*^9}, {
   3.570215342625217*^9, 3.5702154295340652`*^9}, {3.570215497941285*^9, 
   3.5702155033874807`*^9}, {3.5702155974458437`*^9, 3.570215601587268*^9}, {
   3.570215643890799*^9, 3.570215670346178*^9}, {3.570215718068234*^9, 
   3.570215772024825*^9}, {3.5702158302399607`*^9, 3.5702158512889442`*^9}, {
   3.570261190635047*^9, 3.5702611911554403`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.570214269722851*^9, 3.570214286050569*^9}, {
   3.570214324176867*^9, 3.570214363438468*^9}, {3.570214627781083*^9, 
   3.570214651676259*^9}, 3.57021468983786*^9, {3.570214752342312*^9, 
   3.570214761122198*^9}, 3.57021481808908*^9, {3.5702148777046013`*^9, 
   3.570214899598701*^9}, {3.570214966521064*^9, 3.5702149775536957`*^9}, {
   3.570215079487574*^9, 3.5702151174445457`*^9}, 3.570215287724468*^9, 
   3.570215376065804*^9, 3.570215431484284*^9, 3.5702155041203814`*^9, 
   3.5702156027196608`*^9, {3.5702156447048187`*^9, 3.570215671480783*^9}, 
   3.570215722642256*^9, {3.5702157529228287`*^9, 3.5702157725986423`*^9}, {
   3.570215838372761*^9, 3.5702158517877207`*^9}, 3.57026119190247*^9, 
   3.5711646254434423`*^9, 3.571164953316537*^9, 3.5711657139695807`*^9, 
   3.5712147734392347`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.570214269722851*^9, 3.570214286050569*^9}, {
   3.570214324176867*^9, 3.570214363438468*^9}, {3.570214627781083*^9, 
   3.570214651676259*^9}, 3.57021468983786*^9, {3.570214752342312*^9, 
   3.570214761122198*^9}, 3.57021481808908*^9, {3.5702148777046013`*^9, 
   3.570214899598701*^9}, {3.570214966521064*^9, 3.5702149775536957`*^9}, {
   3.570215079487574*^9, 3.5702151174445457`*^9}, 3.570215287724468*^9, 
   3.570215376065804*^9, 3.570215431484284*^9, 3.5702155041203814`*^9, 
   3.5702156027196608`*^9, {3.5702156447048187`*^9, 3.570215671480783*^9}, 
   3.570215722642256*^9, {3.5702157529228287`*^9, 3.5702157725986423`*^9}, {
   3.570215838372761*^9, 3.5702158517877207`*^9}, 3.57026119190247*^9, 
   3.5711646254434423`*^9, 3.571164953316537*^9, 3.5711657139695807`*^9, 
   3.571214777598324*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.570214353647849*^9, 3.5702143548451967`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"restoredImage", " ", "=", " ", 
  RowBox[{
   RowBox[{"image", " ", "//", " ", "compress"}], " ", "//", " ", 
   "decompress"}]}]], "Input",
 CellChangeTimes->{{3.5699619221054287`*^9, 3.569961928012725*^9}, {
   3.5699626208786383`*^9, 3.569962646564762*^9}, 3.571214836954836*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJykmQVUHdnWrXeAJMSIuxN3gYQYBBKCBCe4u7sFCe7u7h7c3d3d3f1w3JF6
h3T3vX3/m37jvfFXJoyqOlX7UF/NNffaIzeV9IXVqAAAxrSUX8KK39mMjBQt
vtFQDj5ZmKgqUVN2VP782dvfJu/8Vrvbu78VDtrCQ1sEaIsIbZGgrS1oa/uX
dndJvxW0S/gHkX9pC9rd3tkbmDLEnnb+1O4OtLUDkXYgwg6E24Gwv4T7dUja
+4hywa8rCdA/6fffursN/VY7W/+gv29bu7/VP41JhHYoIkE75F8jUb5k59fD
/Xrq3+ifGf4JivLQ/8Bqewci70DEHQj/ixLu1w7x18ntf7EiQf+k7d/qf8Nq
72l+J8rT/1Z/+OvXn7q3Qf/SHrPf6Pej/0ly+1+s/sC1vfsX+r0zf7Ai/eJD
+CXir8M90//JiuKwf3pJEPm3oryD32rvrf9W/wtW0Pb/n3b+YYP+jXznX7j2
+P/5x+/+xY/8S6Rf+rX/x407f125S/4HEX+v/wWr/98apLzI3+qfrt/e+b3+
DedvxPYAbv/F6t+4/lWg238D9cflELSL/weRfqu/l8L/Q1n8B6st0vZv9U+Z
D5Ghv+uPhKaE1/bW7/Vn9P+X/qy4v3D9BXfrL0P+lVy/eapf2rv/15X/xOof
Auh/w4pEIP9WZOLWb/VHblJe0c6vrKTMheQ/RP4Hbf9efxkF+hurrT3u239x
+KPkd/9L/46CP+4n/4N2f6v/Hu/PUf8fWBFxxN+KRCD9Vn8WPXF3m7hLJu6S
iLvEXyKRfy/y9u/1d1b/BkXR1t8889+4/iMz/2Pi/C/9Pm//kdU/DfO3DYPC
/lZYNO4P4TB4ivBYwh/CIfEYDAmJ34YTthA4IopAwm1RuggIRSShSSQsmYQn
k0hbpC3y1g6FCGmbhEFt4/C7xJ1d4l5PRnEgpW2iPCiODJH2zLlNKeytX0bb
w0UpfgLlLez54o95cpsyDHmLRKIU/K9t51ddk/caO8qdO7tkyrxI2vueP0UJ
ia3d/9tsswv9e6O8pW3KLeQtIolMJpG3yJQhd/9gR9mhHFJO7v5tQyMxvxUK
gf5Tf5z5iyEKhUVg8Jt44gaBCMPj4QQcmkzA7pDhWDQCg0Lu/drEIWAEOIwE
g5Fhm2QYfAeBhNBYCIvbxuJJeMpz71JwYYgQHr+zd0giELeJpB3iNpkAEXB7
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
0Rxif+pmW+RiQ9Bsnf9opcdYhftosdN4vt1ikROiwgNV6raZZ09qCYf6U6DR
LPxwBnI8G7tYiFnM25xMhfXFzTUENSZZZvnq1f4MgI33Qmg0GYYmoPE7qG0I
v9eN/cUKgULBUGg0Ck1EUUoNs0QmjBKwS5QkQSJ2kQgIgyITKCdxvQgKTywB
Q5np4XDc6gJ2shfdUogqiEKF2uK8jQj2CjgrcYKt1I67xm7gd3K4HZRst5vq
sJ3qTEz0wCWF4POytlrboIkpaHEBMTY009s81VM121Mw35Ey2xQ+Ux+wXu6x
Ue232RgJ7/yJGCxETFQhZhvgC80rC03whbqd9RporZA8FUMe8d/qccLUGc/n
O87mO03nu07luU/leo3l+Axk+3Rl+vblBnakeTTEWNWF6XfEGIz9NJn8aTAS
r76ea4socUNW+8ObwpB9iYSpTPxUGnIoFtkVvlTt3ZX8vTRApyzsR29R0lp/
B2F2BrG6DGGJv9YLFHvgf7FC7VkLTREShYGjMOsYxDwaAaN8ikQRkSgCisIR
uYxBTlCuw2IwBBSSvLFKXpggDrXgqtIwqf5IH0uUnTbSUAqpJ0awUN51N9sJ
csaHe0NpgVCG31aqFz7aDR3ijYmPJlYW7wy2YiZbhhsym4oje2vjppripioD
p0s8lyt9kY1R6JZEXHcWcaiUPFlDnq0jLdQSF2sQC6Wo+Vzi4k/SXDhmxAXR
Yz5dptAQyVoSLFIeKtUYqzWU5bBcGbXZlLPaXDrXWD5XlTtRnNyV4lsbalYd
qNkSrtYVo9IdozAUKTcapzb903i52BnVHE7uS9ruTSS1RyEbgnBNwaga//EM
2wp/rVxvnfZ0X1hn0dLEAAmxDlHmaUq+/ckKTZn5KLMDCr1KAUXBtUlpdhAE
NIqyGNzAYRfRmGUEemOT0pwjERTfkVCbu+sL0OzQbnctuSCeEOWG9zAlWGvi
9GVwurJbFtqQuw0U4k2KpICKgbKittJC8NE+qCAvZFQwpiCF0FaIGMjrKQ2s
yXTsKfeZqguYKHaZzndYr/BEtsVhu1KIA7nbY6W7U+W706Xb0wXkqRz4YMxG
f8jmkB9i2B097Ijo/9GdLx3r9FSFE5iInQ40fl8eojdZFA1rqlpr7Zxv7oG3
9mA6u+AtVTPFMT0ptq3RGk3hkvUhgp3efD1+IiMRynPp5mvFbhvl3rBST3ix
+0axA77GA2r2R5Y5twSrpFjyZzrJNsVYNpWmTQ80IFfHkKuTf7H6ZS0KKPQs
CrNM6TQ3ERAcuYNEwdGYITS2FYkbgOM2NnE7m5TZkLJ4Rm1CazPQVPduWxEp
IxgXYLntoQvZq0PflXZMlHesdCE3SyjIZTfSazszdic7biczhpQcionxh8f7
b+aEw6viUG1Jo8XenbkOI9Ues/WeE6V2U0U2q9VumN5o/EA8aSRle+zn1kgK
fiAO1RW22RY4mmc6WfZjqdkV1u2NGwoijIYOlFpEu3CZiZy2lqX31mFOtleq
DfcYzsldrO1ab5ucKe+GNQ/ie3pQ7aWLFSF9qYYVfnzptoxluq+rTT92uIgM
R2gOJxj1xesPJRpMZ5iSaux3ah2gRpftGmeK60pcJKL0OYM12OO9jIpS3fqb
f66N1f3FCodCYVDoJRR6HIVZoEyFiA1ofZ24uD4+u1E4C0tcRJSso+YQGAiO
2sJgSZRGemdtcnuyCd+cikhxXPdSI7krQq7KkKPKjo0q3kad4KxD8jMlh1sR
skK2sqOg3PidnFh8Vig8y281x2c533e+LHCkwGOgyHW82nu6xmui2HW6yGOl
MnCt03Oj02Ojw22txXG+ymo0z7ArWb0lRrHcQ7AnSXe5zg/RFotuS8Z2ZIwU
hPz00HVXeuGu+sZdg91TSyjYUCXV3rYyJKojNa8vu3w4v3SypGCxKnO9LmG2
2KMhVDHFkiVT8UGh9qsGa542T5lKF/EMC+4cK+5qN9GVdD1krslWuQ1U64Ip
dxpJMilylo7W44wyE4y0Ecz0V25JtftPVoso9AhlEqQsZOCLO4vzm8OzzZ2z
YZ3zzsPLsYvrg/BNSqsAYbG7JAxqa32cMFGNaIxeSjSZcRNDuolvecpBnip4
Z5UNW4U1ewW4lxoqVBeb6UPODoPyE6DiJFJpJLzIdynXdS7DqSPdrj3bobvI
fajCd6zUfzIvYCEvYqM4aahcf7BUu79QpSNdqjaSL9f9Y4I5Y7jek1QT5vYo
HVhDDKola708fbUkqz85NsPJNtFCOM9Loy7RsTMntDcvbjA/dbI0f6Gmcrws
tysjvikhsD8zDNaQjm1Ln8jxqvDRKDdnqrVha3MXbnAVS9JhdeKlt/9yxV/4
froOc4uLyHKSAaHEnlTjjq5yn8u17U8wyjH/GqzxwkflUZwe8wZygtIXYOA4
DJyIQCA2UWNwzBwSi4FtQnAsaXK1parHorhDsmvWZQ7VtYQm7qAg1No2bI2y
lB7ZmCmYLPccDNcc9RCbtOfailJCeX9bc+Nd9/s27sU9EcK3kCC6lOGHLAwn
V8aRK2Nw5eHwksC5XPehnzYtma5tOR6NGa7dhYGd2YHNcb7D6fGzuZnD6ap5
QXzlceLtCRJjqfIBytcdRM4Fyt1uClFdynOBOjNXiuK6kwJnK7I2Guo2qts3
K1JxLfmYjmJERzGqtxzeWbTenINozZurSVlvyW5L8iz1+z6eE7xSFjuZEbBY
EN7uzl9myZ5mwBqlzWwnek+W4aDADSB6E9iznm9wFEPl2yILbTbyrWGljivF
9rN5VotJWh0e/EkKt7y5DsOQk0gEJcuxaDgJgUBtIqc20YsIDAUFAYHbHN8o
L+nTz2wTaJiwmEbUrGM3Uevk9WXc2sry6lrr+HB0Q75+STB3qSfjgO9nWKIM
PE4aHie2kSwwl/J5IZdjoZATOZy42R21XOu3UOK+UuKxUuw+kWHdEaXXXxQw
XB7ekulbm+xbHetfEexX7u3387tNa4xBW7pV88/vyKbA5TzbyZ9mzf4K8ynf
59Js51PsFpJd2/ws28OdUY255M5aeGXFamXxXFFmX3JoV4LXaI7/RKHvcL7r
aKFLe6LVRAGlhfDsjLNrj7RrD7Nv9LOu87bqSZKuCRKIt3xnJX5D4vVBvvtA
6dWpH9wPy+zEh8K1p2O0BgOkh0IUplMM5/J+zJfa75R8R6er97uzlerehiOn
kRRGcAxqk4yEY+GIJRhyHYZaQyCW4ISRUXhqwaBaUgt36ZDmyEbqOr5/HYZZ
h22swYam53Mbmm2S4nmD3O4G2Z2uDX49kMCzVqCIKFWYy+WYLHwzW/NmrPLF
/ID/xnAYrDt4ptS5L9G0K8KwJ8q0L9q8LvbHWFnEWEXSSFnGRHnRVEnpQEpm
rq3rcFowurN0oykXUfNzMNJuMsGh219vMsKkzl2uyVOh3U8j/4dEvqPMaKb9
bIHXQLJze3x0lr1FgJJwnK5wW6jhcJp5XYRijid/mZdgc6j8TI51b4xZnA5v
kDxXlKqotyhXiuv78iiB2iSpND+hAAvuUMtvuZ7qzeEmUxn2k4kmvb5Snc78
IwFS4zEaIyn6Y7nmUIE5VG6JT5EbdXmHQs4iEbC91d/mFnKTCN9EbMCRa4jZ
hc3mRWzJEDyodEQzpVU4r1e5Y9lzGpe+sDy2tNY1vZjb3OMYny7o4HzHVP+w
mQaIcblREMQwVyG3WiPf+fNdW+bj3rJ7naVXxuts5pucp8vtmyO10i0EIzS+
hKhyhKp/DdHjyXbXKgmybkwIHMhJnivNXasoGE2JhhVnIioLFvJ+FtuZjsf5
LmcEzic7l5h/6wzR6ghSafaTTzT8GK7FUOjGXejGlWD2ttL3e5qVQrQOb6G9
9FiKxWSGeWOwXJEbf3ekREvgt5kMo5YARfNPlzVfnPr+8Z7kjaMq7CDa5kV3
gepovc1oo/9ce/xCc+REqdtMpl1fmFqdHXeTDXuvh1Cnl0iLn3hfrOpalCZU
aLmTpTnt9RmDmkUiV+BwyjJ/G7mxhYCR1mG4JcqKdDVxCBbYu2ZfO26c36WV
36dRM6ffgbAc604fHYhs7bJKKeK3C7yhaU6tognUlYGl4clgJ/qhSrHJapHq
hGe1abdbis53VdHVpinnBguHmr51lrln/+2unfBDM647Gh8uuYi9tRFmMuN7
5a8lUuRl2hHrPJvjN5PhPhjouJgYNBrmES4vUGyr0x9pN5XiVGQjuZ7n0Rum
XWjDEyBzP1r9aWeISE+kSKnzx0pXySp36To/xZ5Y/dFU064wtVY/2eFI9Z5Q
qXoPgalknZE4rUTttyl6H4ttvwVKv1D+CoKs6KtS+TtKtcZaPdeHkuebgtqS
9edSzHoCZCssWUtNmMpN3+TpvCg2Zur05B/0U8TmmBNy9aeD+PF7rOZgm+ub
G1uo9W3kOrS2Tp7f6Kidc2qcNWiZ0WqatKwecSgZNiyekipb4h+rth1qNKmr
kYzOfmkbddw4EBh7HzBxPW30/ZyH2+3WCuHOMs7qjMfNxbeq82k7amgzYyWT
/Pj9jJgsBa/qM580/XDO+vMNe4475mwPNRguKzNcCNHg7oq1mM11nM+26o9U
7XJXW4+3rbWUDJF+7yD4vNxNrcRZMd1StDvCuCVYtcpbPEb7dbzmi64AkYl4
2b4IkTpX3iyz93G6DAUOX7sjVfvDVQaCFBfidKvtBStt+QZClGaStMdilddy
9OFFxr1hIjbf90cG3shPY64pEh9ps0GMRi03eLdFa8zF605FKg/5f+v3/Npu
97FI80G24o0q/actftrz6bar2VZj0WpE1AwKObWxuQzbIKHWdlBr0Ora9sxa
fdmoQcmgSPmQcP3U98Y538pp84IJnpyJ5xPVCmMNMi01/OkFL0NzzweVHA8o
vuyV88g35kl4LFN1mXh5Fmt94fO2qnuJ4SAt7mBSqHBlqlpDglbKdy6bT1f0
Hx2ze3M9hPeV2oMTRkyX7Hnu5vwQmEgz3ii1XM3V7wkWWkvXWY5RTFO66yN+
NVDteV+8YXOwVr6zTEOQ7tBP8+l860JHwRCZxxlar8st2Spt2ceTJQttXkUo
X8+3eD8eo7aQZDQTbbCaZNHvozEcqNnhLtHgwN3txzsQwt3gxlhkSW9vC0KD
zuWmv2mulpofssVNh6w1u/UkaE/Fqi8lqK3FyKyHiyz58XSbvypTvVmqeqM+
1LI/xXk4zXEgyZqEnkYhx9c3F2EbxD1Wq9Dq6u70alXZgEZe55e8nk9VU0ZN
K4E1C5YF41+yBumHa7mGG3haKznz8xlTi6/9bDiX2EAfUvqisPlTdglPRYlc
VjxLfdHrptJHThbA1oRWT/5MsO3bkmCJImeRaKUP/nwvIoSZf8rxWr65EC33
NtPoc5Htlzov7uE48Y189YWfMnNpoogM8aU4/ij1i8FatyK1n7aFKI+l/+gM
teiPM++LNUoz4A4XYagy4BtwlR/yVoZVKEykCPYEcYyGikyEKrS7SLW7qS4k
Oi1H/4Cn2LU5iORoPW9xYun0fFtpfbPB+baPI1VC8LXybLa+JqWVcRvMjPda
m+NQtgHFfvOxCpNenKM2r6dsmEYsGdtNnrSYPm1OsO/+6dyb5jSU6bq+uYOA
EdHrpLUVxDJ8Bg2NwLZK+qZsi3q0GudUmlaESyc/loyzNs7zNU7ylbSzNmTJ
9lTo99V/b6nWLsjhDYu47R96Oj7tWlnDw77Oh10lF1tTL43mPu2MvBGvuM/1
HXBQ2O+vfirJ6H6xI0dLqGZvrH2rn225lWGAsLw7L4+7wIdgmfeJ2qzFPziG
I8SxxVrTcda7dcEdAWrKz4/pslw2/3q1xElyMsV5xFVi0kkCFaFWJH818iNY
8hXApeq3Wnzucv4wEy3d4im6mGZbYSM9HGlV6qLSEGHWGWQIy3P4qfOxxIa9
K0putli/L1Mny52tLvztaBrvXLoQslST3GAOtZhAdUZLUcrTIRIrYbJTQVId
tp+HvfkLjV62232qs2AeCVAcC5ZfiFVDZJph4IjNlUXYysb6OmYZBltFLc2s
tLX1RGa3GjXNGPTBVJrmhAp72bLa3qY1vUysfVxXINhSLt1ep9zTrtHXq1LT
8DWr4EVGwZOy9rdDIx+nut4PlTCN5n8YTmSsML8RK3jGUZTWRfRQkMLFZEPG
TAvuVBPBVEPRLBOpEmvNcJlPbtz3Y2TfNDrJzMQbwnJN0aXG8z8NppL0wxRe
C1wC0vfpfnDcqbCRnI21QGWb9Tjwtlt9KlKmD/8IMr5daDX7PGgr0GrFUGf9
ttTm83qRw1SK1WaRf2+kVXeMXYYhX5Yha5D4/alEdVy942CaQuKPd0k2jOn2
twscnwxEf0WXaUGt1lCfw3aF3qC3wGKU3FqEHIVVpx37kBdfvsHzHmeOPg++
bl+5Lh+p/iDZyVhtMmYUDuveQEzBcdhNLBmGIc+vL3WP1SRVW5b1GbXNqtQO
8ydVvvDPvBhQcDa67kpzM0dFJUtWzquiUtaufsm+Mdn6Dr6yevaaDu7ePp7x
Dr7eYu7OdI6+FM5im+dOn2iD5W74y1wMV72ZYvAyRvmlGw+9Mzd9oOSzKFUG
m08nTV5SR3x70OOmsPHzx1qm2Wyq5nCyZke4up/iW9W3Fz6dBwoMF9PMRFdy
HAnldp2ufHmaT6uMGHNlrkfxnCjTYxrzECWmyXW4MNe4sC0VmM7nWc9k2LX6
GxTZKEYqvPEWvBIifmclUwdbZ10fwmX17WiU2b1sh0dOIocLrBkWM2WQJdrb
td9hmUqTocKL0bLLoVITAWLdDuyDXrzZuo/63blnw6V7QlU7AuXbA+V7wtXX
lkqWV0uWYG0LK6OLi9ObiJVF5Gj7dE50hU5SnWhGC0tq/aOgnDOuSfsC8g6k
tpyr6HyeU3s3OvNCXDZ9WRN7fZdIQRV3cg5zVtr7zPiX+TGvcsPel0Zz9ebL
lwZxG389bP/lrDP/eX/Za1HK96Kl7gbzXwvkvxwqftXn21kX7mPB3y5Xm39Z
jNFFZVltZpqtphtM/LQe++lS7qOdZCPy6RZgPAcUWK6GGn2qcRSajlAeChDv
9hTI13ocIXG2zO5di+cXUo7kgC/zaLQQvMxss9x+JsOqLUAzQZPd+9vteNWH
DS58C+kq05nKXQkCTnKnk+0e5zswqDGCBN1HMykSk/HikzFSPT5cU+EC44HC
035C4/4iA65c4wGCeQaPh7y4l2Lk+mOMuyMNuiMN+2PN+/riJ6bSJqby2luS
GqqC+voj2sfd01qk4urfR1TfDK0+GlF3MLSSJiAfhObtiy85GlV1MqXxSlL1
9fjieyklH6LTWBw9HxiYnbfSO2ehedxe76yb8bVo11ddJSqjdXp54ZyxEm9S
1VkS1BkDRC778pwM/3Y2RPSEG98+b34aH0HaeOVrtQ5sQyESo6Fyo0GKk6Ea
g3HmvbHWlb66uZ7KPI+PPD8NPtHTyL0/bMRCNxKlgCkz7woUDRI978J3MNeW
sdCeqcX17nAI81aFHtThsd3otZJnU+8t7S1xx1XgYo3LZ1Sx+XqBZn+C2GiO
dJD+7Uz31yGKl7VegUJr1qlEyXYvzi5PvmpLpmrLF73uHBPevNMhYpP+gqvx
snV276eDhRZjZXujHHujXUeS/Wdzooem82ZX82dXslq7XHNLxXLq2H+2vvQr
P5bccTCmGYQ1gqhWkNCxP65uf1DmPtcI4F18NKbhenjpDbvQ8wY2F5U0LwgL
H/7KCUS5aFTEjhkpnzJUOGSlfiw14NVwvdzKoCYy1YmQ7zEVrZum88Ln27Fg
GboAuSN2giBQdJ+XIAiSOp5j9rzFm7ePsgoLUJ8IMh7MMOtKMc90VbKW+fzw
GLh9EEi/uWon+VDoIYjSfdQU9DXf+kOg2KUkzfuNfrzlDp/i1Q8Oh7Fi8tSw
hWZjsZp9kerZluzBiveLrD+NxUohi0wnk6ULnd5nOjIa8R8ON3voyHXEU+hS
rSt3pe37dPVHnS68Xa4c+XoPO13Ypv355yMkpwIF0RmqwyEC8GT5xRjpgTj/
4aTw+dwMZE3FBrJvdbMGhsmfQXiXD36Jrj0TVnMgoh4ktoG4FhBaDfxLQFgl
dUz1Qb9MGotA4FV0KazqvmPcFXFNqg+fweuX4M1jwPwE8L/bryt9zU6f3lqH
zkINOBrt/xl5a6CDE1lmDLW5EaopMcIXrX01QPlksOrFIKWrsVrXw5WvJ2g+
L7fj7fST6/JVavNQa/fQrfBXqQ5WizQT4Hl06QIAVwCQ/XDdhP/2t8f7DT5S
UebTNGOGZLUnXf7CE8mq9e5C0Qp0I6Ffe3y4uwPEMsw+Fjnwx2i8qrDlmYhT
m46T6Q8S7w7gTzNl9JC7KPIY2EhcdGA7GiF7O8voRbzS7QSZ+z1OvPPhkg22
n9udmKf9+SaChLqdWGEpcvMJksRczdlIsZFk55Fkr6nM8OWSZNzqzOJYFWwt
F70b1rLAHVxCHZQPcptPRtWDqJrj3lknrcKp7GNAYD6Vf/4h67iDLlnXg0ue
2Ufc/aZ49M2b/S/v0r68Ss14GQg+ozKTovc1fxTqfCPE5ayjxT53N6rcIvrW
TJalOiVMi1l/kliYzmUjdqD/FvxgOW3Ifuw7x0V3wWfhUswBQi++vzmjdI9G
9s5+iasHNZ8fUX5+6OVBwH7jPO+jC6qf6D9dAd+uHzF+Q9vowVntyBkjf7fR
g6s7WqrCnb/dlX2nwnwkTGIoVinO6G2UzlvT98fS1d93eIl0enLX2X6ZiJJt
D5CIN2SUZ6Ax4z1v+Xq/N/+pYMmzmdov68y/DroKzIdJdLoKtti/nfDhplRi
pdGT2QihhUTJrQLtiRDB/gSNziittgi9tkjD1eUNGHpsA14wB3cqaWMNTz+b
0XSrtOdZ37jkz2JRY5eH0sYHdNxOeKScDc2jDsoGagF0ltHX3WJeuPq81dO4
zf4MvD4NuK+dFH68303lUYDJk2RvBl+bE27WJ80MQHTEwekGppbMd525HClu
1w2FaMQZADf9PgWmq8qM15UYb8o8vcR+GnCcAgKXaT4cA2+OA4ETwE/oZYHF
t0xzybZIt7pAx9ks/wZvZVd5xnBlhjjJWyMeQgU6DJt55lNp+t3RSm3un+pd
BYpM+QOkPyg+Oyr/EERovu0OVu0NVmlxE+lwE+z2Fm7yEqz0EslxFY40Y7f5
fMaF/Wwg76UYiVvFJu8mIqRX4mUH3di6HD8MeX6aCuIe8vk8FsQzGS7Y6/t5
JISrOUqoNfhrcxBPfeQ35NI0Dju0sJTWOqqXXv82tfJFaT9fVr3gIMxtcOVn
S3+cu78w9zdqcU3gnU6T0HxMzQE4hp8Mjnvg7vFUU5Ge/eXhVxcBy+X9yu8u
eKkx2srcdFK/Zq12zFDhmPhXYGdKVZx/sbr0cXnOG13Z/cx3gOBzKqFHJ3jp
6fhv3hB98EDk3h3W4wc/nwDid2jlX9IZcN7sd9MZ89cf8Ndp9tKZzgxaLU3A
1CXCSnxH47+3uElkqDwLFThv/Z6q2IJtJlF7PlmnxlUqVPmdLsMJibuHZJ6c
seR4nGklPRxtPhJu2OQo0WDN3+YkXGHDl2bKEW/CHWPKl6zOlKjwLEbsVjD/
+WjJazU/Pgz7cvc5fehzYRn34xgP4GhzYBry41xOkh4K5G5ze1/m/L7e81Nb
AE9bqBB6ZgyP6hsaDk6v/hJedDa75XbVxOeYwtc9m279qylDM7lxiTqSsmc1
zGjDCs6FVtCk19/OrX8Sk0pvaHSQgw0wPaRie3RYkPEIJ6VG+J5qfL4l8/4M
zxPw6jJ4chZofrviG0KTX3I2P/+ujCh4cBFwPj0i9Pz8x0u0ny9f5LlJ/+XC
FWa6Y6K3zjt+e1fkqjyd7zHrrTrnrz3qoz0S+r0vwmo0xWUwzmY132cz9cdk
sNqgt0Sy0qMwqdvZBu/nY7XmI1QzrBVtxRiF6QHreSD14pK94IesH4oLac6t
rqr11hItNqJtDmJFJtxxmqxZPyTaIi3zDFiyNF8nSt/14zru9YU2Q5W+x5l5
zIut2vhBtxNTv/uHhh/PhwO4NtOVenzY8wzvVNlz94UrLWR9X822XJ/sXF8t
a203jSu445sBEmtA3vDZoELqqj7O7HrBn5WS0Tk8XrGMAcnPglKv2AQAr0xa
z6SjrqHHTK1ppKX38XPQ8n04wMsIvj6g4rwHXp8HH64A9jvg3RXa56cOcTyg
09GnCY/Yn59Lb2dx4uNL6hdXweurR15dOMJ25dz7U8ef7QPcF046CLHm2Cq3
hpl2x5gvBsjtZNuvxlqSykJmU+1nMxzGEn4sZbjPR+hNBKksxmr3eItXWnMV
GH/q85WbDFOTfnud/8VZDvoDr86Cdxf3C989YS/8aijCbDLSdDRQu9NRvNqM
q8CQPd2QM9NCpMRNNUf7Va4WY5bq43DBMx5sIEaErtH8ybD7+1qz+602T9vs
X1R/f9Dt/nEmSqTdjbXC6nm7j8liQcRuVzHUWTwzmzQx797UJpxddSsoA/im
g9hWmtA6kFx6JL70YmjBrYiypxGlDNZBV3V+0Np50lmF0Bi5UTn4n4tIfB6X
zBwXyxUdzO3v/N5C/ZEszzEJ9tMSbGe5nx14fALcoaW9vR984aSyttmfmc4Q
HvCQn+3IpQPgMhWlE9gn+fqFr5p8mrl2loViiDKru/jjMiex5Wy7jUQVqMq9
w01uPMasM0RzMM5gNNa02UNtJFRzOFh5MlIVlm7S4iKcY8CaY8bZHaZ57zg4
RwVuHTpwmWb/VWrwig7IM1wq+iE/HW+2mGDS6SJaYvixw1NqOtWiM9I430m+
2oyl+jtLhcmbZJmrHh9B4BdQrHGpy+7ZbDD7gPvrNvunVWb3aqye19u+qbFh
Ggz82h3iu1JWAPV3Qd0do8vGvbOSjZ3vKtoeRWQdtw8F/qVUUQ00IYUgpPCA
c8IB14RT7vGXZA2BsDLwDL/n7HdLTY9GTAaISFNLKR/64Xw3Ip4jJII7IOCd
s8OTQC8OVytmTYkrr6+D9zfPfX168SEjMLI4lJrOGRfFIit45uEZ8JgO3KUB
UkyXvRQ/J+rxVDhKZn3ndBe+GSL9OE6BcSRYcKvcZvGn2VqB43yu7VKBPbrK
dyPPfS7NYjrZYCJGHZH9vc9XpsZJtD5AdbMpTJrr+SkacBSAw4DqMi3155t0
Es9Pe4m8jlV9PRKmPhul0ezA1xsgt5xrP5vj3J9k02j1sf7Hx1or5my120Fc
+yJ5QI3h9XHf91OBLN1OTzscnrTYP2+0ZSwyepylfafF5eN4WvBaVTq+owzX
Ujyw8LF1kqG8+X5B46PA5HMWHvs8ko8GZ5/wyT9tHQM0nICeEzBxPSCmBngk
qXQszti6vTf4fkNC7uSLd1QPmYC21b24XL6QJA79H1cEpcB7VsDyHhio3eZi
OvH0/EGGi1Q37wJ1LRATzZGfIeFpzSjHRSfx4SDrDcByCZh8OREi82g4TH0l
06LWRbjkO0ey3NNg4cMFRs9RRZbrxXZrFa6TuTZDKd8xtYG4ao/NErvlHLOu
AEnKszd7yy2VeUHzxf622jfO7j9NDU7TgmsnAO+zMxIMdMYsp22/nBgOVSAW
Wo0FSTc581c6CRU7ilX7qNSbv2uw+djpztVs9z5X5VKO/IlWq3vTQcw9Tk8a
LekbLG/VWz3ocHnf4cZWa/uOsvxB94TjeiIwXREb7WFdk2fqh89nV12OL77r
EnHZ1OG0c+hd96CHHj/vG/oeVLEDGvbUSmaAVwowf6F+xwq4ZK6LqJ3lFD9+
8iY4fhNYeH7unv7e2K/RPa+fXSNkbHNTSYUu56ewqdrDD/eoOJ9SXz9zTPQr
8HV611ZpXJEh5WJ02UT2qBjzMfVPR7Tf0UpfA5HSj0cj1abjVTbT1MZ9uSO+
HXJnBxtZumPJ2pt13tPFzrmu4tP59kORqgtZJlBXQGeI7EqWRaWLeHuMUUmw
ZpCj+Z1Lh55eP/ji/on7Vw+IvruuzXXTXeyOr8jF4RBJbI7BWqLycpJ6f5h8
iYNAsZNIux1bnxfvQrz8Yqxkhw1Dqcb5Sv1LDVa3ZoI/dDo8KNY9m6pwrMHm
5XqqIr7IAGqyhTajdqd90QPOi72OM/U8tXmPk7PP+eYeNU8BhjHANo7KI36/
U/hBc1ugIk2tr3hCgOvItdtUd1/tu/2Giv3TPp6P4PUDasYXdG/f346LD2nt
+1k5mNgwHV48bFg2remV9yGskD8wjufZI3CF7vj1fVSPrgAXs0u1JUzTA5wO
hjSq34CvHpPmxyMCNwHH6QNi10GyzrO5ZLVeP4nhQL1GQwZvFroUmedQhc9C
6veVPPOZbMOhVMOBlO+jqRaLuY7QcNJcnsVwunZLtPRIhlaKJr/+m2vBKl/1
2e4K3KdhvrL/K8XJ78/oMx+ocOSiWKvDVXwhVgOTqzcYIF5oyFli+qnQiKXT
XXgiUGrITaDJjLnS4G2fm3Cpw8cQvRcJxmxdoTKjcVqrRT7Q5E+o23cxT2A6
kxdWLrHToTxUydNS9iGHMgkm01rFAoc0Gpe0gxbBwOTHAWVlIMILVGUP8/Dt
u/4EPKF0CHxH7j6i/vDuwKMH4A0LkFd7Ul0dMTSc0T9RWjwdXDxrlzeh51f8
ObFGPC5bjP0L9eVT4PYRIP71mr/T/byfD4Y6mAsS7jsaUTsoX4wwYtN4f0bs
1kGdV1QJWvTFVq/jFO8WGfMNeymmK74zZ6DJ1X87GK48kaQ9lW7UFaVL6A0m
9oQtlrtuNvhPF9gh6rwXcqyWMi2LTaQMX10xZbkrc/+42ANabvrjks9o5Z8e
VHpG4yt2rcWFvc+Lq976XZ8332iwbKU592CA3IC/zFqyHibdEBarOu4p1PCd
pdnmS4EZq7vc1XQbtgpvvp44ZWyT/0a9L6khqj/qbY37nRLHK5VuNwbLFQdr
FaqKOALCzzmEUAfnnvdJP6fhAMyMD6oqADnxg3ra5yXl6BhY9zGyH3z15TSv
0AMpmYdvPx78yAu+OzFUNzo3NPs2dSaVjpe3rWdWTdrktgs2jSlUdUhb2V/4
zAGCHRS7W316mnVb6vgqCplK0l6Za1LLfaJyVnxhxHVZ98Ml26+XCn6wtPmL
Jmo88RagLzLn7/RX9RK+7C9xuTdMucrlW3eYcn+07lqxObbObSBerzVMYzDR
ZD3fudlZOkuF+afWF13GU+K393+9tI/vFu3rk7TCD4/zXAHCV4AVK12S4vWG
Hy/GAvgGfMQ63YRHAsUH/KX6fMSmwxQWwuRWw2SXQ6S6HTmarNlCRS/ZfztQ
G8KX48nRliRH7nEv9uYrc5AttGXItbpfZP+w3O3lZpvHUotze7FGfCRTQPi1
+OwHwQm3dL/v01KmOApoyB021Dyvo3lORv4cp+DxR6+BgMhlfqHzzJ+ohaUP
+Ud9ah926ZuN6p5Lq+mPrur2CUwQDUn+XNKqUj+kUzX4La7s1ViP38ycZ142
X3UlZ3jwrbyUV9ZGZ6Q/H9b6esJM8JK1wGNb3kcxGmz1XrKNXvxltuyWAuer
A6RyHdh95W63BqvnWvHVuAkORStTXLGWbNjtIVNrKzIcqtPrrxEm+tT85TFL
litqz+lEb+0Xoj/MQ3/oLhVQen9N+8Nl8490ZkyHjZ+AePELs6FS06EqPR7f
NlOVhwIk25x4mm3Y603fDjh8WQmVGPPl73Ll8BKg9pA5XB3EF2f7tjSUb6ZE
20/7qpvUtVg9hnKPT7P5SuhGE2g4ca3Ouz3bIDuePybyZXTUg0CfG9bGdGqi
QJNiKqljGmKHzbTO+vk9+eF+R0AVvOUCd14AxndAWuaCj9/n0gaDnoWgxkmP
aVRsWbuTsQO7rc+buEK2+KqnKe1X3fIPpqTouAeyCovus3e6pqhAEx/+2NPp
pggbUOU5ZCNzNdroa7a1QoKeQIT6u2IH1r4oaYEXBw0F7wToMpnxni52FW8N
VKh142r35ev1Fx8PVuhyFG2yFBz0Us3W5rJhvWnCdFmZ/qjGkzMydw5L3qET
pj/04gDwkWcq+MFT48BlwXRI7SoI4DhcpHW3yZp1xF9sPkpmJVG930uw2epj
td7LAVu2jQiJ6SCBPu8vCbpXvZXOBWrcCTC6leLGmOPxMdTiQYbn+85Yzclc
A2KXEzTpS24KHU4xrQyRyQvmi/V65W9908voopvGORvJM1biZ81Ej0kxA41v
h6JCnkemvbONvC5jDp5xAUbWA2ws10QFHqtqPvSNZA+Mf2jpe/yr7IFDF8CF
u4BV6JioLrW6CzW/Ebh+DzBxUd15CgTEjj1/Cfw875cXc4W40Au+o9LmO+Mo
9TZUTchPjsNTisFf8YElzxV62n0PjgJ9vvuWgpcyLdlGYhXqndgandgr7Jlr
rFl7HAQH7CUGHBX9OR/rPDir++S6wYujhm9Oyt6n4rsIOC6Ax/uAjwJzo7di
f4BkhuqLUJ5TWXLnaoxulOrRVxi/6nMXGfAVrDRlKtJ4VKb2oP/Hh+UggVHf
Lz0+rOlWD+wlDhpwgpAfF2Nd7rioXohzf91ZIotpDx7MNGuMlW9NltzItugL
kmzy4Gzw+lRg9zLB8Hac7s14bXp/8dPOQkecJKiU3gG598DL6ExCyPPcnNfh
efv0XA8q6p//ynWbk+3Jo2fUvGInNPSAtSeVujHtq49HTlymobsK3gkAXQ9g
HAgYPgE959tfxc8xsR08TAeEBUBQ4K0gVzqeNzQCjNRMJ8AzAN4foVJiOGfG
fZntLLgEwA0ApF9dcpV8ECJ/p9L6Q6nx8zZ7rlbnvf9VmfSRGXVXbPkhbf3m
utrdM4q3zuky7Df5SKf7gU7kNg33VZpH1MD224saD9k+H4mZUPEe+7fd1i9n
A760Wr8o1n086ifdZMeSLHs1RuBUmsi5eu2H/XZvOx1f9/p9TLe856W030IU
2Bud1Zank/uyz82YPtqTMclF2FTyscrXExZKRzZ/Ki+E8y0GsS4GfhhyZWi3
fd5q97LJ5lmU5Ck/sQMJBrTeskds+UCc7v6mkAf4rq9D05fr+14W1b7x9n5j
/p3j9lPqi/domJiBlOI+z8Az4Un0sroHHrCBL6q0JtGn7bKvOgTfiq/88En4
0PHLAFDTPXsClJXpDNWAOCcNLwN4cQS8oD7+AACmQ0CZiUbkIfhy+9C7s/ve
0gGDD2eMXtGEiZzPUrrVac0Ji1PvcxYe9VUuMxOMUmKVf3Jc4cUFqcfnRM4C
g9fnPEVfmH++o/XmEtelAwEKD6YSpGA/DefDhKZ92EZdvnRas/c5c8yHi8MS
VRdjZUr1nyaKnE0RPFUif7VO/1695aOBILZyF6YcR3o/g0u8XIfOnwNv7wAN
keMynODtfdprx8GL20BV6uBWJMNu+MvdMEZ8yKuNwOeLPo+WXJ+t2b+p1Dpc
qnymUPlcouyBEDGQr7d/PvLOdjHzRPOTtVn2uSWB9iGh5CwuOfkr9FfAWTog
KQ3UtA6HxJ7Lrjnlm3bMyP+cgs2lzwonueVpkkrFErLFtHTvnjsLbtwA3F+o
v+vQKHwFws+B1OsrRp+ZLbk/6H66pMYIDD8Dx09Xv388o8dyTPk5MHh+wObF
IYfHVLGc52GhKrPBCk0uQuGKLw2Zzym/viD97tpXhnOqDMcknx40Y7thyHxG
7DYQuAJsBG5OJ+pM+gmtRQp3Or8a82IpVqFv+/EZFqkElVh2+bM3272us2TM
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
Jem5pzjvdGGgZ8OzXeLM0/KPx9pSt7QkrGMmbGQlbOO92MmI2df0eC8n6eKX
4K0F/isC1w54vH1EhNc3QUtGRm+Y8nLL1DuLBj1eM7U++KDj8+PuuujOpvhO
bjqhzCMk2cL8u5/D99RFHy08vyDKa0yU19i4zWPzz82o9JudeWxCpd88adTm
xqAVFYEry+9vrnhxxFCXoqQkqWrTRB8eMFNvstMDVUWPDZvHQF4jZX8MFa4a
Il49Qu49Wr1lrHbbONnavkyvvtxtw4S7xvL2Tpccng+dXIX6rBM9nse4+3PJ
+akJR8eFn/j2waV5d66s8Du/6sbNJWcvLDxxcsbJQxOPrh95fnWfZJ+pgqT9
mqTlFVcn5p8eV+47qy1yLSdmgyLjkDrnRHPsLnLM9tq47QVP/ki/+2uC3/Tk
oJl17zfhRU+UWQG8jDPk+I15IbM/PfyxNmZ5U7xXY/h6Rc4FWfrp/NsrMi7+
Ro/YVey/LuvEktRTC6O2zEjdv+Tlul9OjgJ2DQCi1n1nyLqhzQuBK6JsrPcY
LcVIS+5ue6epiGRk3eQlnM06syDKe0zCljG5x7/9cGh0xtZ+VacmVV+dQbmz
UBizqzTAg/RiH1b9AmMk8wufR+77KeHUovzbmxuiTxpue6ABqyC/lbD/H7oA
TzxwrSnA0+TvYbq5Un5lif7OOvzBRm3oNiTmKBp1Cn7uw0/yor30qHu5ui5l
B/nD6YbS6011Qa300DrK3ZIvvnkfjhek7SiIXZ778Mei+z9XhS+pvj+xLHBU
9tk+pNtTmiLmN0WvqIteISs4WBW7Livkt4SgaZF+48N8xwWdG3nrwpC4p99j
RaHU6KNlId6kxx5VT5Y0vVzJTFrb8HwZLco7P3Bx+a0VJQGrmNEH2p4dYDw/
Bqb5l8ccCt323bVZgy993fvS0P5nBve58k3fTz6LxZn+H+9u4X0I6m5Nt9TH
W5re6JkZsOCDqvgxK/FCvu/S7BMz3+4Z/3wlkOYFVB0c/nHvkLorMy1pp1L2
flP0wKPu6WFWjl/a1Y1Vj3bzky8ZSh7ZKiNksXvlL/arXx1GX5/Ak05b4k+a
og8ZIvYY08+KYw4Zki8YU85LUk4Lsq/QUy6S4y42J6yoSVxO/rhVRLkGtYUr
meFCziOh4jGP84TDCORR/US11/glR5vTN36JXfjxyeSE0wAl5rvKkJH1kZPK
w6aRYhYkBUzJj16QGzE3JfTbV+HjQwKG+Z7ud2wPcPoE8DxmGj3lROlDr4oH
a2gR61vCV/FjPNXJW8Tx65Hsg3m+vxWeW1J4YY0i8Xpj8LZc/6WFtxY/8Vt+
ftWws5OBK4OB4FEDrw7ptxMAbi8cQX2+qz5yl+ZjgL3iCUFNtNHfMuvipNov
upYsJy9LknO9Jnzz66PfBy0HMvaNrL04iXbpe/rlnyuPzQidD9xaAXy6/Efs
sV/OzurXEnNMneWvK7gneXul+fU+xusjnEQfUZKvPOm68o2vIvmCIvkslOYn
TbzCSbgEl4bVv/FhFPmTCy9V5p8uT17TUnZQyfNHlOGYOlYHxSH6GA3+BNM+
1EpuK9quqlrPQ62nYPp+dd0GafnK8pff5j8dnRsxPDN88Ou7faMDBoX7Dg04
0feZ31evIiffCxl5J2ziJb+hh04Cfg+G+D/+qubJ5soQL1W2Lz/pqChxW1ng
T7VBizlR3tknvmt+4CmMOlIesCP51OL3l+bnnJv3cuP3JzZM2v5L70Pjgeg5
g8KmAC9mAxHzeuX6LPjyaB0n6XAXKZhojndSkvX0DAHrbVVztLwxU14YhdQm
4BWR9Nenim8sTtr5VeH5HxpvzM/a81XCeiByBXB3DhC7cXzNHS/uiwOilAvC
5PO8JJ+212daUv1aU66zk67yEq+KE6/LkwPUaXe1GQ/kaUHc1/7MJH9JQVh9
mi/9862S7BNf8k+RSee57FtaMBJFXmCalzp1LAZGwFAwAoZolbdVEl+twAfj
nTCwD2AtWyDqWrhpB6tkRd2HecWps2KCh/ufAXyPAteO97p4GQiOnBDy8tug
Z5Ou3hl80R+49WRAYHQ/Za4/Unyj6O7S2jCPtDNj352d0PhoFe/FprbovZSH
28tvbP50cV2ur0fu9ZWRO2cd+Lb/2jmA1zQgaN6g7GWjKtZNqtwyiXppnjzp
IDN8Y9Mjdx85QzTFEbxsM+89KM1Qghlqfpmg/LW47g1EipV/DhNlXKkNXt8Y
uuGTz8zE7cPjN/SPWz/gqUe/5F2TavyXt4as5yZf4CSdZyX6tCacZb6P4WQ+
FWWFKrKDtdkP4ewnSFYMnBUP5SVI3j2X5sbISmN5n8NF5PDizCOUqsscQZQS
fo2Z03TGtxicaABf4fBzIxqGacNh6B4M3cA0502y0zbxMav4gFm6u117BeSd
0Ip8lKKLX4o3hD+cEnB1+J0bo/xDxvoGj78X8/396Ak3Q4ZdvT/S/9mkmKIF
lc92FD5cdn9r7+L7cypC5pCfrOIl7BUm7iPd35h4dEn4xtmRW398un36Xa/J
B2YPXzACWP4jsPtn4NO+n2hbvzdeWqm6ON8ev7Wz9CTx+aLqxSbxs82Oj34E
1a0rvV2eoVOm2FEayixAeMVw3RtdY7Kp5oUkw5+XdJH8dEfZ7dUV/qtIN1cV
+y4svbaIHLiqKeAPUXagMCtQkBnAz7zJz82QFabBZSlmUpKdlGT7kowXpOo/
plvKCpGCTJz0AapIxiivtU0RpOyDUrq/Spmm0+WYLblGPEuvy8CN6TZrqt3x
xqKJNaMRZuMDi+6mXXvNofZ1QFfs+ismXZAOutNueUZ0JSFgRHPTlc9lR3IL
doc9mbrnMHDBf/zTxF9iU3+7G/XdjecT8lrXVr5a8/jkkJcXJ6S6F9qxq3Ju
/lJw26Mp5tAdj0m7vhmwejSwaWof74nA7yOAOV8Bv0wA9q7qfXvDSMalJfDJ
+c4bnvbbKyzPVmoTlhGNp10lh1xvd3VEbrFF7CXy7hD81G7wI6Gpdoo/E4Ym
EzXD3JJlp2fh5BRddWIHK8Nan2QjJbRXvzKTInWl93V5tw3vA4T5IYJPD/mf
ggWfgiFSOVxVilXnG6o/mKqyLaQP1oo8W3kBXklCPheZ60shUipGTeCV3az9
sBds80O1Hy36QoepyGLIw/UfrOa8DsenrvZcpybNhSU78bgu47N29LEdeWwz
Rtpszx1db+y2JIcp2YalWHVpXe15uC2bp4i5679yxg+9h40GJswAfl7eb5HX
4M1Hh8bnLLdLr6SFTws81P/4H0DEmTGRJ6dEnVrw/MSKc3OnLBve61sAmD4I
+HZg36mDBv40eeCiOcDlTcNe7J/UfHyG/cJiq89CItQbCpzJvT2h4ek0LHEZ
8XoTcWOhcMt4rs98W/GdnkmentTenEhg1XhDklNUSqhqCZROwDRCTXZK6rp4
1YSkmtBWE6pSQlxAiEogSgpISQYb34ANbyxMFtZEUVaXCb/kiT5/UFXm68ll
tuYauIGira/R0au0TTkyyovP7w81VR5DFYGoodhqKe+wVtiNJVZdQbuhqNtQ
7MIKCTifwAoIwyfCmNNheGc1vrOas+32XEdnUWdHSae52Azl2rFiwkUxmcsb
6TEPglYfODhjzcbRK7z7rN4KrN3Se9VqYKM3UJG/siBj8cmdwKV9fc9tA24d
mnpt+2zvGcM2fTNs6bh+P43pN3547z69APd6asZsYMU64Myy/hFrhpZ5DrId
mWU5PIt4shG/+b0maELjud6th/voDo3u2DlOuhSoXw4wfH/VvjtGlAeZP/m7
OG/RwkfumdypqHViLLOa1qFl2TRsVNqMyah2mGZV15kklV3aBidY162t6VJX
dSkrdTwhyGJKaWRuY1lbQwmf8kVKq1K11Mta6IpWqqqtVsUrpNc/eRntwWJd
RnR3QbzYZKvotFV1mCraDV+69BUupNKlKnMZywl9NaGrJ4x1HRaSzV7Rbqvu
stTbDKR2c72rg+5sb+2wMRyWFqWktPJzTPb7wMx03yeh3ld9Zxw8PHzT5n7r
PIcu/LXfls3Aq5ezM5LnVRVvu+kzxuMXYMHkXrNH9fyUsXDqgOU/j585/asx
U3vNWt5/7ZGRm84O2/Fd7+vfA1/mAXrPYc5dU4hrczoCvrWETUFvfS3cA6g8
gY61Q2weA6Sre9N2jag7PZV4exCO2+2kPEUz/YnWbISaoxeRMTHVZTV0d5l0
VhDFlQ4baIYFqIJuNfBdBrpT19wFN3Zo66XMNjmPpZQwlMpmmbyBz69hMipp
lHJWcwOX0cBtLRfz88u+3A68M4vJv6LCApTYRyNe0mkhdZlJnaZqp4lMYI0u
dUO7tbpnfySMQRhbOx3Nji5Kt6OZMDEIU0uHgdbZzut0SnErF0PokLRO2lJc
VxJLK3/5KfFmatS5+/4eh/Z/febM5KNHJq/dOGTXPiAz67eq8vWZyevXLhr4
/dfAwmmDls+ZvnHp7J2ev+/c7HH+5ra44nOJtT4BKZvXTxx09iugYV4/aDZA
bB5t3jbEfmWUKWQ0GDbWcncqcXkGsWcysX5k577JxqvzJQFL5Xfms4NXdjdF
6j8EEvR3osq3RmUL4YARLYrZLHKrTmXRtXc47DpMD8o6OlDCxiHMbKehpRNp
wlhtMIupYdM03EZQUA/x6kBWvYZOZpGbaVXVMhZZ1Jr1Pmln7JOpDZWLOk2H
rWC+ES2HdI0gxsb1im4c6dZpbVqxw6LpMEu7TFyniekys5xWTreN1+Xgt5t5
7eY2u7nFilNwQ50Oq4ZhkhYkcZl5TdXppdnR6a+DYqIuBYcc8b+x/fLZDVdP
jjq5e9TNcxNrCvcKmnwfXJu18jdg9zrA50Q/n+OA/yUgPurrL8W/lFXOfZ0x
ITAM2DSh9/mZw17M/bp23nB08TBi3Rhi58SufROd/rPao1ZgiWvEkYtFQXOR
28u6/FYQ7oJ2Z5greHLH458dzxa0x6/szt9PsB8S2DsNL9uorjCizSgugjoM
ig6bzN4OdxOExUQYdV2wxqqSGLgijMuFeAxQQIHFZERIhjkUkNmkorEllCYV
q5FRm/Qqan3Yo/Eln2erwI0WvMRmq7bYmk1Gtl0n6cahbjPiMIHd7aDLISfs
PMLO7MHBJjraXJ1tDpxlxxk2nGYxUoy6Bgyph8B6raZeIijlteTTazPryt6U
FsdkZT96HX8z+snl0Gs/+J2Y6nf6q7QXC7/kbngQMG7vduDK+X5hj/pERvRL
iB+anT2hsHB6VuakqGcDbgUAVxZMClk6Pmv5KMbiEbo5Q7sXDCU8RxDbRxI3
ZxMJ3s68g8a327AIT0uIl+v+RuKWNxGzkIhZ5ny6yvLwd+TWXGXgAtF9T374
DoISSzDfOttyCNEXQttMqOgWfoOO10BgTQTc2KWpdSgrTRK1XiRBRCxYQkWk
ZFTSiAjoEIeFsllIW6uKVV9Z8DQ8ZOX9h+Mz836gshejlnx7dxXhorts7G49
34mrnB26TgJ3dqhdDrHLznRZm5xWitNG6bZTuuwUu5FuM9JshmaLvsmIUTGI
CmuooIqqllWpRFVKAUkhrBQLvrCYn8i1aRUlCaQPBwrebkt+Pi8tblFu+rKY
iHG3bvQOfTAgNmLY28QJ+Z9mlJb9VFg0Pfv92NSEockxA1J2LMlYP7181Ujh
kqHY7EGGmb2tiwHX1v6uyzOJuE1EybmuvDPtCfu6nu12PT3oenqYCFtJPPIg
Hnq67v3ReWupxW+RznchfGmx2W+JNcTb/Hyv4/VpIsefKAjq+hzSTo7CKWGG
hhCs7gFSc9ekQPQyBSJhQ1IKLKtHpBRIxNDyOcq2RkTSKm2rLsh5FPbIIzR8
eur774orZvE18XprHkE0El3uXON1W+TObsRFGIguJdEpcDlaum3kLmtNp6W6
w+qmym6gu7EZ6FY93YTSDFATqqHCKgqoqAfl9aCsHlY0QKoGtaxWzC3nMorl
vIcK3kNG/bmqwmO1hYfLczyzXs1NjZoZcnX483vjEp99k/xyyuvY0a+eD3sd
Pfzty69p57wrNv1AWjyYv2AgMqc//BOALQYcW/qi+yfY7ix1vTlApJ8iEo8T
cW5O9GyLF7OfeLqLCN9CPPImQtYQ91c6AxZ2X/21+95S4ul6Z6QXHrREe+1n
4YVp3BszpeG/lz9cWPZgwed7c0vu/oprMJ1SBUk5WglVKyVrpRS1iKEUcMTM
RkTBEXNq8/NCY15siY77LSljWkbeZDLjnlyb1OkOLYLl7BR2dchd3WqC0BAu
BdHNd3XQOu11DkuVw0xymCocpnK7obUHfatNxzAjNCNI0avrMWUtqqSCMrJK
XKsQ1qgEtSpBnVJQK+fXSJhxGkGKhBHTUvWUVfNUQg3l195vLvZtKDhen3eo
Jmt3Rdrm0hTvouSNhalbi9J3Io92NB+aXblsGGvxQPj3frp5gG4+YFkxAP5j
iG33VML3dyJkKxF1mHh1ikg42RF/FI7eCT/eAN1bhdz63Xh7qf3OMtft34nA
hZbw1c7ojd0xGy1RXlislzR6NTf2D3Gyd/OL7bSXO1pe7WpN2IMjOp1WAykE
GilDI6VqZM3unigXsRVspk4hErJriosep2YeTsxc8frjrNSS72spQWJ5or3d
7YrrJJTdLo3LHVEOUZeN225uMRtrdVgZApXA2mJEU4SqC82IW1GrBWGa4VZc
SzeoGjF5LSolobImraRBLqiWckgyVrWSXafiklUCMsqtRTgNypYyPrmIT85X
s4tQYYWWmydipLGqXzR8DK5KvlkZf6M8zr/05c2i2JvWd6f4QWvJ+35geI9R
rx6kXwDgMwHLdwNNP/bpmjeEWDvFdWRRh/9mW9g+PPoAErdf4f+T/Nr38ovf
qC5MR31/ddxeSYRtIJ5vI14dJBIOd8Yftr47b6q8JyXdq/54oSD1KCs9mJMZ
KsqNVBbHWnC9AYURjRxU8EAFU6tsVSmYCjlLLeJASm4rvaio5FFu8bnsku3Z
ZZ6fmze28hM0UG57O5UgJASBEITe1aXptggdONOsp2IISaMpUSgK5dJChbhQ
JS7UqRt1aqpeRdcpGZiMjoipkKBey6tRsmvl3BoZr1rBrdO0NWhZFDW7Uckh
25QSiCNWs1rdrVlGr5W11IA8GiKqwQQ0LbNeSv7ML8vjFWXx8t/zP70X5L3D
ih/K315hB2+hn5zN9v5aPr8fNq23aWyf9tGAa3xv14wR9mXTjVvnGk4tx+54
Qc+3EwEriIDfnX4LO30XtF9a0nHds/P+lq6IPZbIo6aYs1DsBW1yoK7wOfQl
TlQYzS2KxmhkYyvVymF0ijh2q9FkRHWQBlFLYDUf0rRp1Gylii1TtUiV1DpK
Wl7R3eLyqyWkk5XkYxypnwwtMVjqXF1sglARhNHdU13dSIdZQnQIu+xsi5mi
09VAcBWorYbU1YiqGpRWuQcqWEqFxXRQ2KLh0VRtFCWLzCWXCuhlUm61RtCI
8OgIm65mUmTMOhmvidHQxKdTUEkLyK2XNlWrW5owDglrLkHpX8DmMim5hFeR
11acIyjKkZR8lBa9URVGiZMvN/mvrN0ygTF/kPK73voJgKsvQAwGiHGD238Y
Y5070bFmWqfPws7wDe3XjnYFHCVuHyJu7iV8dxHX9xD3jxBPTxGPThFxAfbE
YDDugSYuFE6JtZflEQIGKuVhMoFeIdIrxAYTasARgwHU6dQoooBAqUYjUanF
MgWDL2qktZZWNbwtq4usbQluUwQrjaGdBL+TEHY6ZZ2d2k6HrtOm77SgnWao
3SxpN7mji2vDWVYj02Jgm/U8k15ggXhmkItrOHolC5W1wm4DIppWSBO0VvMZ
1Xx6Fa+5ikut4jSQ2siktnoSh13EbvrEqv/IbsjhtWQLWrN41AxOzdvWygT2
lzh2YWxLbjT1Y2xzXnxbQbKkOE1RnS0vSxN8iKJGXyq7uLrYYxJpUm9qXwAa
Alj7As4BfdtHD8enDsVn9betGunYP91+83L3ZR/i/EnC/3TnkwuO2EtdkWeJ
+8dsr292JFyzvbpifXOnOzXSlfSMSH9BVGSrBA1aWTOkZYEw12BCDDjsdqXX
aTBECUNyrVam1khVaq5ATKG1FtRS3tQ2xdC4sULtazWe2uGSdDhlHV3qjna0
w27qsFg6zHiHSefAVQ5cbjeKbQa+Vc+36IVmndSkk5shvgnk4xquXtWGyVmw
tBUUM7SiFimH4kbCbnQ3ERGjQUhvENIaBM3kVmZOCzWTXpfeQk5l0VLZLSks
SmJrTXxzdTSt/Bm1MLz2Q0jZ++DPGQ9J70LJ78MpaemUtJTa5Jji2MD3QfvT
Ty37sOHHkqXTasb2Z/YHZACgBgB4IGAZ3Yv4eQTh8a1zzz7i8H7i/EHi1jFn
+GlrzBnjqxOG+KP6t+fs7y6251ztLrhPFD0l3oV1pz0iCqJF9DwZu1glImnk
dQYTZMQhowEy6EAdqkVhNQQpQVABwXKxlEZvzafS37ZyU0WqXI2+HDbXOTpV
jg6Nox1x2HCHxeEwtTtwW8/WxkbUZoBsBrVVL7fo5BZMZUZBMwqbYKEJEhpB
gV7Dw5QcRN4GyViglKWRsDVitlrEUglZSj5TwWXKOUx5W6tIXCnglvGYJQJ2
kYhfJBEUiNpyBS05QjdNmbz6NGZlcvOXN9TSN/TSFObnVE1OleYTSV5Syv2c
1Vz0kpIV0pIUyHnhx7y6n795hXDaJG6/frw/jVkHAM7RA7XzJ+u9vrcf/a3j
0hLLjVXY3TXqpxsUiVt1749a885ai3xtn++6vjxxfgjreB/qKoyWN7zX0HMR
3medpMqIa3AcxI0wrkeMGKJDYRQGEVir10NyBZvFLme25UsUZYiBqrew9Rae
za6x2UCbFbOZzTZTh83YaTM4bD37uestetSiAy2Y2oJqzAhkRjAz7M5vCQ5L
DJBYD4owjRBR8WElH1bwYKUYVooghQiUi7RSoUYi1IgFarEAVsu0CpFawtdI
uaCcAynatNJWtZDmrnUgv0XLpWva3DBADgvhcXR8nonEwevZumaGhtkoZlXy
GUUCaq6YnKOjfrS8i7L6nddv9gbn/KKZMFo9AFACgGoqgPwGmD37d24b7to/
hvCZ7rq/wBW72pa4x55+QpdxHnx3U5/z2Jzz0vEplagqNjWV25g1ncLmbhkT
x5U4rjEZYZNBb9IbjJhBj2E6FDXhmNb9BYR0kZgKQiyTRWSxSXGL2GxRms1q
swk247jZaDcb2s16m1lvMulRkw426TTmnohSmxH3Ur3HlRGVG9wgch0sw0Ap
qpUiWgmikSBquRtYJYdUMlDp9iPV/AkiMYJinUYIa4Qg2INGw1coeVK1WKIS
S5UiqUok04gUWrEKFGu0Eq2OJsdaxXAbRy1gSIVUAb+Oy3EXvXIJo9zQUEqU
5hEZqURUhOuqj957peynb7BxADoBQKcCupmAeRHg2Dik68Q3Tt85nQGru8L3
mqLOoXG3jOmxptwsS2llN7m1q7nZxWQSfD4hEuO4zISrzEbEYsAtBotZ7x4i
cKPOYMZRdz5qVBKNWoKhCjOutpiVZpMMN0lxXO7W++dubGbcYMX1JlyvN+pB
o16N6xQ4JjO5X4+4QwuxwDoDptK7QVU6N4gKg5XonyBaFaJRwRoVpFGCGqVW
o3CjUSswsTsM9VoxohVBoAAC+Vo1X6kUyDCVBlK6n1er3KVUrFDyZRKuRNAm
xgQgJlToxHy9lK2TMRFpi1ZKVUnI8hYq3Mow0hnmhkZHVXlXcU57crTp8W3n
njlW71nosknaRcO0S/tCq/vD60dA3uM6ji4ibu0jnvsRSY+JvLftZQU6Egmr
o1obG+00ege7rZ3DM+ESs1FpMaJWo9lqtFsN7lCxmgxmkwHC9aAB0+oQjRsD
qjXpQYsRMuBig1FqMKrcEWMw4gaD2WAwGgyY3qAyGBRGvRTXSUyY1IyqLChk
QVB3y3Djnnd1WA+YG/RPIC36JwikgSENBKlBuAdcg+pBCIXUqFaJKZWoXA4p
xRq1wAhKMFDibtOQOyxVIlgmUIq5ImEbRyblS3lSibtf0HWCVgOfpeO1wlw6
LpCgUo1MqOQwWFwaRcmmwG1kmF5JlKYSOS/b40PaH9/ovutDXD/q9NnbeXxn
56WtRMQ14m0E8SGWqEixUnNUTZ9ktBKsudrIbDALWiwStskocruyuiuz0WIz
ttv+3EveYrTg7mwyQlbcnVZaHaRCQY0BwSwGk94o1huleqNKb0T0RqPe6H7E
oHdPaEal3ig3GCRGvRjXSc2Y0oKBFhTtseTuGn8B/Qs9AusQCHODQigKIigI
Y1o3OKzQoVJEJ0RQPgLyETUX1LLUMEMhr5coG8Qaqhykg3ALDDFUYItYS2cY
hGyMLdHSUTnDIeS5uFInW9rJEitpTIVMI0FxHoTwtHI+ImaC7r7bJOBwBKwm
Ca0Crsl3FGQSaQnEyzDn00Ai0p94H0MUvOkoeGmvjkNbkyW8dyLRR5RbbZA0
WrRMO8ZzRwbeEx/uidQNbnJXIdz0/8Fiwv8Wd5n7b+h16D/o2T8SQzAUdoP0
dJC/Qe9uKz17TPWAgeoetCr030A0SjewWvEP3IXu7/mzBv5VBuUStRuZ2A0i
4sDCNkjAAnkMLZumZjSpaBQVtVHUUCVqqBZRasRNddKWRgW7Wc1r0QiZWo0K
1Kphdwog0P+Wq3+eevJ36HX/IQ3rkeZ+67/FgIBueoz9mzSd29g/1aFu/k2a
uy/8LZBK/q/7f0mTS9ygEh7iRsxBRG2IgAVzW2E2A2a2gAya9k80zBZtWyvE
YyMiLirhu0VBoMZ9Ed3X93/L1d+fWoEb/nXax//l7R8x9v+Co5Abo5s/pf3L
2/8IhLX/HnX/CrD/BtTTav/HGyLlu0FlfEzO18v4BinfKObjoh4MQp5ewMUE
XFTEQ8V8TCbE5CII+kuU+yr/b7n6+9ObzPg/jq/4D2+GHm//LWFNOqQHDMbd
/EPan96M/7z/l8B/qkP/M0P/I1v/M2H/kibmQW5dcgGmEBqUIpNSbFFIrAqp
WSnG3Ys+ucC9AITdo53MPd3xQHedg0F3tLsvovuz/R8hWYZW
    "], {{0, 100}, {100, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{100, 100},
  PlotRange->{{0, 100}, {0, 100}}]], "Output",
 CellChangeTimes->{3.5712148451794043`*^9, 3.571215561083672*^9, 
  3.5712158088897047`*^9, 3.571216826706291*^9, 3.5712168837352543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"image", "\[IndentingNewLine]", 
 RowBox[{"ImageDifference", "[", 
  RowBox[{"image", ",", " ", "restoredImage"}], 
  "]"}], "\[IndentingNewLine]", "restoredImage"}], "Input",
 CellChangeTimes->{{3.569962669795198*^9, 3.5699627126344767`*^9}, {
  3.569962826966015*^9, 3.569962828659574*^9}, {3.5699628867411757`*^9, 
  3.569962911114794*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJy8uAVU3Pq+sP3fu+6+60rdBWmhFAqF4u4Ud3d3dwZ3d3d3d9firgPjDAyW
L9RO97n73O+96673zXqaFZJMZvLkZ+ltWS0+xT8BAHqH4RWfjNFHXV0ZE/79
8B8MJvoKsvvgDfkf//a2d7Z2/5HdbegfIUI7MOvQDgna2oS2tne3dnb22N0h
/cYGzM7uHtAu6Sfre+ys//g0vGdnc++KO7u7u/Bqjy3ox8YOtLsDbe9ApB1o
fQda24Hw31j79ifp26Hd72euQ/8Nuz/Z/sXut0v/V3a2/wO/L/9DV/DtfWfr
25f867wfl/51/N8g/QPfXO3u/pOrPV2wkM2frn6x/m3n9q/TNqB/ZPcn2z/Z
/M7/DVfwb/1Hdn8uv93Vf8funo3tb0p/U/dD6fZPV7u/PvHjx+9++yL41iAS
HDu/Qdrb+e3Yj3v82x1v/53NvwMHJOn/pav/Abt7wEH/nV/f9/0rfxf1S/8v
A7s/Hsr2T12/2Nz9/qmfp/1zxP5n/jeutjf/mf+Ug3AS/gNb39j+B7b/y8OG
2fktPv8ma2f3N1e/6/rJz5z9l6ud9f8A6R/58UT+Czs7/4nfwoq0/Y/8J4c/
KgLpJ7+52v3J78+FtPMPbG3/zLh/hdSPh/F3Vz91/Yt/Dz9od22Pf7a0+YPt
7V/8b1yR1jf/kc2NrX/kX23mew0lQdvfO+ImtPl3tkjf2P4XpN/4Vcb/JerH
ff3XdP69AP790PZ/ycEffr4/qp+f+i3O/zeuNoikf+Q/Odxd/z4R7G6RdjdJ
EGkTWv8GcWuP79vwThIJ2vwGXJlgtr/xu66tn13vp6ufvfJ/WBX/HnL/VPf+
jf+w7PwfLHgs4b+HgFuDWcMTv4PHra8RSMT1LcLGFn5jC0vawm1u47d2vm8Q
4HgkbZFIexG4RdzcA7e2TdzY3dje/aZuT+M3UUQSBAfp9vcHt725u7m+u0WE
Nok/Qmxr93vK/6cB5tcJG9/SfPO32IEvvjdV/HP5/LH8S+vPZXt7G/4h3/fs
pT1chDY3SSTS7z5xGPw/gkXjvvNrz3d1aDwRTVjHrG2giBur60TUxjpmk4Td
3lhZw6EIGCwePhW1gUFtoFa3VvfYWV3dxWB2cYRtPJFE2NggbsG64HshrO+u
bewQN3dIm9vfgnhtZ3Ntl4T/Fn+bv6Xuz67xq8D/6xCcsFt7wbwNbez8rVnu
9cvvpXT33/nvw/R7iH5v1j9a9m8LBoX9R1AraPQq5jvf93xXt4pbQ+LXlnGE
ZQIeuUZY3SCgSHgcCbeCXUajF3DIGcLCBHFmjDQ5sjUxsg0zO7mzOLO7vLSN
WiWhMRs44nddeOIObm0TB/tbWycSCRvr+K0N/PY6Fja2QyJ+YwP2uMfG9s5e
WO7AfN+zl/zb30oTHIhw+n+rALCx79K+82/qfvHfu4LlwAG19b23fQvo3139
EvJvwK5+6folEHaFwhNXsAQkFruMx6ysYdBENJaI3pOHmllbnCBOD66PdG30
tmx2Nuy01e+21a8PtG+O9kGzYxBycReF2sRgN/DrxLWtNeIWlkCCoxSLI8DL
OhG3uY4jEdGbcJzugdsk4mFIa4QNwhrMD297Aolwwu69r+zuNRjSt7ze3Nrj
Z8Ttwnwb6r5vkn4AwfkKlwbSLxV/j5/t76J+59uhfy3/ydXvfv6WiYQNONPQ
GBwGh8WvYdYIaCJuaX11hjg/RJro2ehrWG8uW6/I3ShK28pP3clNWm0oXOus
gcZ6ocVpCLW0i0FvoHF4LHGduI0nkFC4tV+uiGsYIh61QViCIa2tbK6hN9ew
JAJ2A4dbx+J31kk76+u7sCjSXqrubmJ3N9E7JNTmGgmuinuBtyfrR93b2cRv
kzDbm6jtzdVvILe3lr6zvr4GFwK4rP6brl+B9CsZfx76/3f1u6Lf6/z63j0R
4MpExME3gtnCIUnI6fWZr/iBprWOSkJVDj4vnpAUshHjvxXpsxvhM18Yj67O
3uytg6YGoaVpaAVJWkUTUPBVNnH4jR+uiGtw88BikKsrC+iVMezqFAEzt45f
JhFgFTgSHg+zSSBsra1trxN2NnBb63tKCZhZHHqShERuo1AQFgMRsBARXq/s
Yhe30DOk1TESapSEGiahB0jovj0wvTA4PGqNiN0gEba21+Gs/lXJdr4n+Td+
7YRr5fZvy3+qV//JFQmzto7Cb6xit+Cfh0NDqAXS9PDaYBu6qRhXkYXPjsbF
+q0Fu276OUI+DpCP/VR64EJhLKGhYKu/aXfy6/bC9ObKChGDW8PD8Ulcxe71
AzzcaXGYFeTC3OzE2HDz5FjH/PTA6tI4bnWBiF3dwMNVDkdAodZxaPjpwPFG
xC1gViaX5gdnp7qw48Nr0+NbcNCuzEGo2e3l0fX5Afx0B2ayGTPZgJmqw0xV
YaYrMdPlmOlSmGXk/CpqCYtbJcIpv7kGG/sFLJCwhoEPffcJd3HY2/+Jq1+6
/s0YaQW/gcRtrKDg7gZh0dDy3MZYH6GrDlWVjStMxqeEEsI8N/wcIITNN+wm
kr3nskNXK9LwbeUbgx2kqbEtJHJz71JEFBqPhAsgDo8j4OGcX5ifnhgfamsu
6GovGxponB7vXZ4fwyAXCGi4Lq5iV5bwKOQ6DgXHGx49u7zwdWq8fXiwbrm3
Hf21Zx1+CvMjOwvDGzM92NHm1aHqpf6SpYGCpYH8pcHspcHMpa/pS1/TYKam
x2bnJpeW59AYJJ6Ahp3A0mDWN/CwJXj/zOwEfAJyZQH2Buv6myvMNlx5sLhl
LNzKMBvYvXDewBEmsMR2HLEXh8GuLUFr8xBhGSLgp/Ck0nnC+tL6JpK4icKT
4K/aXFjaGOwiNeQTMvygNCco3hgKVd7yltjwEt8JkoUi1UixyqRY7c1ECyg7
AKrOh7q6oLEFaBa/PgcnIbRO2FpZXEBODxFmerEjdfMtOXM5cjO5KlMlRnMN
HiuDSbi5GvxqLw49isdMLU314aZ7oIVeaKwWGiiEujOhxpidhiSoJwcaK4TG
cki9MattAcgOH0yf/1K7O7LVc7nBfbHSBVXhSaoJhmojoKpwfGvI5kDCznjW
xmTexlwphK6DcA0Qunp7rhjeM1UfVZ/m2VWatDY7Cm1sbOHW995QcBCE33tJ
wWA2sVj8N1erWAwRi96B1zj8FGGjn7D+FT6AR0Jri9DaCkQkzBG36pcIRCQ8
Wa3BGbRGQKLWp6eIXY1rZanYeLftSIvdQM1NT+l1Z7ENd8ldf2UoXHc7Xnsr
1mAz3nor2Xs3Lxmqq4P6R6DJld1FwvoKDr20tDg1tDjahhyqXu7Kn61PWiow
Wigwmy11mK3zX+pJXhkrW5lrXlnoRs53LU42E+fbIGQzNFEAfU2FvsZD3aGE
quDt1lioPx0ayljviV9qDpqs8Rqpchsucx4ucRrKtxvKtJjMsl4ucELlO69k
O+Cb/Le6o7cHU4hD6YSx7PXpQuJUHm44DdOfMF3rXxdnkeOr35DmvzrcBmFX
9iohYXfvfxmJe+PaXiztuVrdA974/id+nkAcx69NwnGFW4FwSAi3CuEJ8wRS
98oaAUOEZa7hV1eJC7MbQ31rtUX4jAhMkDXRU2fNXhZvLkawECc5KUA++lCo
JZRgAcVbb0fbEyPdcXFB67lZUHMzNDyyPT21NNw72tMw1lMx2Z033ZI0VRs+
UxWEq/RBVwWs1oautMSv9uagRyvQU3Xo2YaVqerVqdKt5TJoOW9zNGKzH7HV
7YSvN57JtZ3Os5vIc5rIdxsu9B7I8+7M8m5L9+zI9GpLdW6ItagN1moKVuuL
0RlJ0B6N15jPtlgpcULX+mBbw/A98WtDKcTBJGx3FKErYrbCoznWsMhHrSzE
sq8odqWvaWN2hICE+9f6zvoWPC/vxRIsB4v+5gr9YwO3jMbOY7BLWHg4QG/g
0Jt7hQu7gMGNofZGBQIRh15fWdyaHtnqbVwvS1uL88YjjIm2KjjDLzhd0TUj
mV07HcjHBgpxg1I8oSQEFOOJD3FdCfJExUdslBfu9jQT+hoHa9KbisO6qyNH
6sOGKxDjJa4Lle6YmmhcfcJaW8Z6X8HmSMXGRBVxupIwXbY2W4SdTFufSSBN
hWIHXNCdppPlcnWRn4oQvCU+wjUhSl0pduOl4Yv12Qv1xTM1xcPFWcMFSV0p
/nWhZlX+qs0h8t3Rcv1xMl+D5cai1abTTZaKXdD1/oSOyI2uyI3O0LVGX2Kj
N6rCYyDRrBihku2u1ZzsM99cODM6gEHOwdML/D6Cxazt8UPXMha/uLfGotEo
PAa9157wa4t44gxubRZWtzebYnAEHJ6ERW0jZ6DJXqizYisvYj3cYcNVZ8tK
aV1Pcl1bYtNQBXIwgXxcoVA/KD0USguBEoNI4V6rAe7ISB9CfgKpOR/dmt1d
GFCX4dRV7DFchfhaaDueb7Vc7rhcE4ltTtjqz4bGiqHpst2pYtJ4NnE0Ffs1
Zqnbf7kbgepzxfY5Ynuse3IkYmyfaDDvMxO8GKj7oSRAd6ggaqmxAtnUtlDX
utzYgW5tX22smCyK7EmybolUbggWqgng7HDm7PYU/hqqMJFoOJtjs1jkDPtZ
q/XEVTjs1LtDTd4rhXZ13vJxxrxJNtJlgab1ZakjPdWYpSECahILL3u6iHsb
+HksYQqLn4O34HEArl1oHBK11otab0Kv92Dwy1jMLhpFJGLXNjGonaVxaLwV
as0mZfoQ/I22nNUgayXIWHbXQG7HRB2yN4W8naFgbyg9EsqIhjKidhOCcJGI
1RgEOiMIUx6FaoobKEa05tr1l7qOVriOFNhO5NkslTgim4NxXVHbI0nQZDo0
nkwaiMJ2BK00ew/mmQ4XWsxU2y+3eOD7/Na/Bg0UGkVa0xvwnbUSv43QoEu0
l68O9+jPzZmrbkU2D81Wdq02deHbW1BN+VPF/p0JugUenPGmFMUabyoN6Vqc
+HoC5HtD1XvDNUcS9BcyzdfL7KFqZ6jBY6vCaSxet9hRNEKHxV+NKQqhkx/n
2FeftDpWuxdOe66+l6k57NooljADTz7wOLCC3JlbGp5YzplYjZnBFC1jZtEY
CIPaJmA3NzHo7cWx3dFaUmMCJsl22V1x3UkWspODrOUhS8VNC6V1ey0SwmQn
0GY7JQzKjIbyYqHsCFKqPyYJsZTmMZuDmC33Gyxy7S5wGihzGy3zGC9ym8pz
XSz0nG22X2pzXu1wQ7Y4TFeaDWZptcfJN0XKFHrwd8RqLlUi0E3hmJZYXEfa
YJ5fgoOijeRDB5lXLoofPFS4/fTk422tSwIjWhJyBnPLh/KLx4tzZ8pSFyuj
x/KcKwOkY01o02UfFmiS11qzN7qJltkLZhizZZlylNvxjkaqrKbp75TaQFXO
+EKboTjdYhfRGEPWEFPeYBOeVDfZ5jRbHHYFB7uCKxK83nM1jFmbgl2hkNDs
/NrgRGPHuH/HtN3AYsTMyiByFXYFEXAQCYPfWBwijpRj60Ln4g1GXYRRrqKb
LhKQi8y2ozTWXmLZSQLpJYcOVkWl+RFzQqHiKJitgmB0hudMqvNIql1/lmNX
tkNnnktvIWKoyH+8MGgmP3SxILy/VHOgVLO3QLkl+UtZAGe6HU2c/utIjddJ
BvQdoZqEuihiU8ZiecpsWVZXckySrVWcpWiOp3pjjEN3un9PRkRvduJIUc5s
dflgXlZnSkxLXOBAVuhqXRK+KWE0y6XSR7lAl6LSgrHJTbDGVTRBh8lJ4JEl
601HzltxihTNznyoVP2dMvvNckdMsd1UpmVvvH6OHae/4kt3iQcxejQYzPze
2IkioVEEFGYOhRtB46fheWBhcRuNI00u15d3G+e2SrROOM/iOlfwWzgchFrd
QSOX8civ6NG8sTKnrgiZbg+uYUeWrTBZvKcQ0pkb6c0/5sEy6sc2GyMwneWB
LQvZroveqorAF/qu5HhMpTsOpNj1ZDp1ZrvVJDl05AZ0Z4c0x3h/TYseSYlt
y1TJ8eMqDuKtCxfpS1YIULzryPeX75e77f6KUyl2UEvqQl5kb2zgQlnBam3d
cnX9fHkysb2Y0FG82piDbs1fbc5dqk9fbc5erEtbaUxviXEpRhiOZAYslcaO
pQdM5wY3e3AV23zKMP0YrUNvzf9I9Ok+9qtA6DZwYL9eY8+7mmaIzjLF5Jqv
5FvN5VrDTXY2TqnFlSNS8oYb22EMZnbv9W91Ay5EKPQyCjONws3Ck9byKgFF
RI4hC4q61dOaeGtHzCawlcvEReQKtLxMWFqeXlpsHu2PbszTLg7kLHKi7kQw
LUeJoqNFUVGCyHie6QTm6UzmuUIWbHv4amPQcoX3UpHHagkCCUdRsk19qEFv
tnt/UVBVvGt5jEdFhHeJv0eZFyLB2LQ53qAz1aQ1VhdV67VQZD+ZZtrsLT0R
b7SQZj0RbzWZ4tzoZ9IcbIetzcU3l8+X5syXZM8WpfclB7fHegzl+I8V+g7m
OA/mOHalWIzkuQymOzWFmtb5m9X4WFZ5mJe7mHfHfClDcITrURnx3RB+fZDj
PpChOmPJdb/YTnggWHU0XLXHV6I/SGYkTn0y3Xix2AEqMialqvU7fypUuYnB
zmDQSMwq4ZsuPAqDRGEXkZglJHZmZb3/60p8YZdyUj13Sb/mADJhdr1lBYmH
X6nml3tHJ7JqG2ySYrkDnZ8Fmt4o86XpiWBbyZFEF3yZSv88lks7WfFutPLN
XLv3SmfgaovfTLHT12SzrkjD1lCD2iCDmgjL4dLIr2UJIxUZY+U5o3k5Aymp
OfZOfQmI9eactYa0tZr4vkirvjCTZoTqaLRJjZNUlaNks49KjqVQrq3Y11T7
8RyP3kT79rDAHFtjX3m+ME2BxlDD/hQLuC6lO7AVeQrUBEqPZ1l1RRlHqnP6
SbNFq4j5inHnetGVhfCUhIokufEGmrFHWArmeau0RBgNJ5qPxuh3eUs2ufDD
ugbD5AdiVKYzjaE8A6jcnJQg22/zFo+dRqMX0Ks4NJKEXt1CoYiraNQSZnIW
0zZNKOhD+hb3qaQ0CeX3KLfMunzFxCzPDszPtg6PZVW1OEQkcVs739bRO6ir
AiKc7+V4k0+XSs5XirQlU7RnPuosIWsvvTra4jzZ6jpSblMTrpxkzhmsTOcv
R+8tx+CtzJHhql0SaNOSHDCYGz+alwJHSH9c5FJOOrYoeyEjttLBaDzeZybZ
ezTWocRKotNfo9FbrtlPNlGfLlT5VYEDe4EDW6IJLRwtGWaK4Wo8WdZfviaa
j2WY1geKl7hyNAWJ1HjxT6QZtAYqmTJdV311zoTugdito8rcIMj6cX2m3ECt
1Xiz13xHxGx98GiO80iSWV+gcq0NZ40VS6cHf5snfwtCcCBCARWpCOWbbqWo
DTt9xOMmsegZ1MoqGrmJWYHQqxByBTuPGhhcSO5DerctWFeMaOV1K+X1qVSM
azUuGox3Jw71hDU0WcVn8dj43FI2A9JaQF4FWJuc8rW73VMiMljGWxn/uCH7
Tn3BuebyM+WZyulBgr5Gb21E71lx37bjfGDF8siQ/q455ytzHioDzjcBmgJF
ngbN4fbjmf7DSYhef9fpuODBYPcIOf4Sa/V2f/P+COt8K/GVQo+OELUiBx5/
mQchSvdb/PnbAnmLHd4X2kmWOklXucl1BGvAzas9SLbFV2woVqndX6zKmXM8
QWMkRiNOlTpO9X2OEbs77wNxNuBieqEggau9XHuyw31lMAp+J2qM0B5NMu72
la4wYSjWoao0pi7WoygyfNfqxjkSJE/MMsck6wx68HxzNb26sgi7wiIhNBJa
XCbOrLY2j7rWTWjWTKjUTBhUjJoWD2kWjIgVTXIM1Fr2NhjVVH2JTiO3Dzpr
iAD67n8aOx8zsjzp6nC7oUiwqYCtKuN1W9mjsswj9WVH0kIF4xAc3npUJjzX
NN6e1H/7l82nBy6cr8wYH6q/uyZHcS5Ilbkj2ngqy2Eu27YrRL3FVWku3rbC
SjLoC7Uj17MCa8lcK7E0M/6OcH14RKxyF4tUJY9Uetrmwz8cKdEfIlTqxJ5m
/D5Og7zQmqU7SK7LT7rNS3IsUrPajqfckr0/QGYmXn00Sn4lSxebb9gdIGCl
B8K9bxemMtWXyAy32awOhUzVuNWHKY7Ga02EKQy48fbYf+q0/lCq8SRd/laB
1rM2f/WZFKuZZLOvIUp43DgGNbH3n2zIbewyhFmGFhY3J1fqyvv18vv4igZF
aieMG2ddy8cNcoc5s0ZfDVbIDtRJNtWypxc9C8q86JN13ifrml/qA+/IZ8Gh
lDUlIsVpjDU5b1vLnkT5g8QIkBzAW5mk0BCrkmjCYs5wTfXREVOqawjON+ov
zhrQXrNkvZ1hxjGSpLOUb7KYrd3my7OSqjYdIx8j/8iD70qo4uuhRMO2MM1i
V8mGQI3uKIOJNKs8S54A0cdpGtSlpp+qLVnHU4RLHKiiVO8UW9FNxKjNxOqN
hWjPx5j1IpT7vRRbnYTq7D93eXMMBLE3ulIVmpHZm4Fw30u5qe8bysQneq1w
44Fz9c5tkYpDEfKLMYpLoeILfnzTnixtJm8KFG/mKd6o9NPpSbAZTLEZSrIg
4Ccw6LGVldkfrpZgV9sTK9VFPUoZnQxZ3Vw148Yt897V0ya5I58zRu8OFPMO
1nC31X8sqHgcX3olsvJaeMW9sKIX2TXc6Xmc1eVfMmKpK7OpavPIrPWAjSHQ
ED3vY0KVhxDJteOPlPvgz/MmlJ86XorJ9N3VEEnqBA36XEuWOk+ugSix1VyV
6UTRuTgeVJbEeBR/kPRfvtI3Q1VfNgTJD6aad0QbtYcbdIUZJGixBIi8KjXm
6nSV7veUXSwQHoplbfH92BcsOBwm1+os3uEsvxLvMBdmjoy1aLbjy9Z60+RM
3+b5rtTydqXDbRcbEBlwIT/jXWuN+PxX6/WpgJV29+E07bFohcVouUkE14AV
9aDV226z1036T1qMX1SFW3SmuvRnug1nueKQW1jkOha1trqKXEaN4bYHFzdK
mied87pkaqakGuYFy8aYy0cZG6a5q0c589s/NqbLdRdrdVdpN5bL52Rx+AU9
8Ai4EJt5s7jqXmvrs4bi6/XJl4czn3YGkMVKAVd6YC0KvJRPx5k8yXdibQpS
7Y2wavS0yDHWCJEU8uRjceN6HyD6PkHtY7E1a1+I+Equ5ky0DlQb2OAhq/Lm
hA7dNZPPd4ttviwmW/e5f/nqzI8Nlc4Xv+lPA2ZdeEixqt2mnzpdPk6GirR5
Co4nGBXZS3VGWJe6aNcj9Nr99ZcyHJPVafPNmTrDJKbydPrSlNKcPtYFvu+N
YxtN4V+rUINaTKB6U6jccDleetSffzFCasxXqMWasc+Vs0jnTZ0FXbnh27EQ
ha/+0uNhysupxnj0yvL83PLi0uoqegm5uLA6MTLfUN0bnN2oXz2i2bKoWDXJ
m99Ll9VOldr0OrHqeUUGd1OxWFuNdHeHUlePQlEVa0L2i7TCp7VNlIP9DMMd
H/pLKIazafoi3xUaXQ8T3GcntM9R5Kiv/I0E/XdZ5hxZpkJpeiLp2uI5BrK+
gvTWjA+CxSnrnMSmE7VQOfroPN2FZNPpJFN/SQru60Dk8WF9xjs5lqLDkQbo
VNMOO452s4/5Une8aUAi719tpvSjbvy1Zi+qzCkqrBmXMi1GEiwXC/x7o+y6
w8zTDXjSdZlDJB+Pxqms1dj0JcolWL6Ns3qbYfUg2/ZxdyQbrlQFarOAep23
inT6vdgng4WXIqUn/IU6HVjgMl6iR9HhxNrlwt7jJ97mIdzjLzmbpE9cG1xe
6ltZmcbj17DYrRU0cXppun24LKXMuqhTv3pMsXiALab6oV/O+YC8vyJLrldX
05WV0+bmvy2pYu4YkGgb+FLeyFZax9jYxt7TyTXYzNVdyNyZzNwTw1loRe7I
ejBY/o6vxPVAmXtRKq9C5V668ZI5cdzxEXgSLvXW4sMFndcHA0QedSC+rGYY
r2bqz8Sr9odrtgaoekqQy1GdZbgCJF6fTjDhm8mwxxXYd7ryFmq8rNJ9nSp+
LYjteInm60F3PkyyaKvT+yYX5sUso+kMq/EUu5YAnQJrsSApcleua8GSd6dS
VDAVJtX+HBZCx8JNnmXbPHMS+CPf+uVUihiuUA2qM0MmyQ758cKuFsIlx/0E
u51gV1yF2i+7XdkmgkS6AqWbEGLNPl8GY7QXlopm5soXFzvmF0dm5iaX0Utz
qKGO8czYIpXEav7UFvqE+ke+eSecEoF3xuGYiqvFrY+ya+5HZV2LznlY2sJe
2yGUU8aanEWfnvkxMYoiOYw8PYCyJIy5N0O63IvTnOOkA8tlJ/bLCP6bAaJk
fsK3EHyXvQUvB4ld9xW85MZ5Olj0Wrk5w2SkEvzeCr9fIFP0+2MMhlIsy7xU
Yi1EmO/+QXEOKNBdCVL7WGjLMxalNBQk0ofgytN6GiZyscTkXYUlPT5VqMeT
diSUH1tojCq2m0yzaPFXiVH/4M53K1T6YZ0z61ic1HCSVGeckKPMuTjr1/k2
FCoUIEHn3miM6GiUyFS0WLsr87A/31dv3skA4RFvvh5n1n5PrnzN510urDNh
X/oiDdoCtVoCtDrDjXv6I4ZHU0bGs5va48rrgpoHw5pGXDPqRSPKycMqr4bX
noyoORhYAhBZwDfrYGjR2ciqU4l11yKKb4Rk30sspI1Ko3d0f2xgeNlY75Ke
6ikzzbNOetciHV+358gMFGtkeTGFib9JUqKNV6DwFbjhynHKW+BMgMgpL75D
rhwAXscp3Ki2+djjJdTvI/HVT2EyTKs7xrAn0aIiSCfTQ5Xj+fFnp8Cnu+AL
xVEdxjN94fKYPINuH+4Q8UsePCcKzN9nmbxtsXvU50WzVqACtTjvNHgs5FlV
u4t5CN7xE7lT7fB5rcRwMUuxL1ZoLEfeT+tmvD2Fv/QVdUpQbE0zFCHW7Pq5
05OjzIiy0vhttxPziDcPzKAHBxxjtebUcAVbiJHqDHfsiXIZSPAaTg0eGc2a
mcubWkit77JPLRVNr/2c0vjCr/BAeAMIbQBh9SCiEUTVg/Dy/T5Z+1zigG/J
qcja2z5ZN0wQZ7QtzitpXBASOMLFDHg+ATn+g/rypwwVjllpnU4OpOitlprs
UF1MMifk2U/HambrvYVFeQse9xE+4swJXLlh9gV9OZ9rSNXiwtuNkBrwVRkL
1u2JN++MNc9wlreSpH18AtzeD8RpL1uJvZR682eYyssKp89ZRuQ+ouejVR/U
ITgL7RnTlU4N+TOgs+Qw+TpjiWrdYYrpxp8CJB5W2rIOBIth87Xg+ClxpMmy
f6fDDry1yaxYDrvxnq1zZisye5+o9KjTjaPNiRmOolYb+mEv7lFf7iEvDlSS
3Ig/DypZHqYt1GMoKWSpOBNbU4JGdi0ja1H47PEV1+JO1pjKi+HVIKQWRLWA
iCYQUAl8ikBgKQgvO+idDixDgGfh1eDK5zYRt/gVwftP4B0FePsM0D4FbBRA
W/QvR51b1tqnzTT+dDQ7lBx9r6uVfbXAYLfRcb3Koi2AB56CvMRO+0meD5G9
FKFwK1Tmdrzq83Ib9jaEdKuHfKOLfKOzQrm7fDlCLVCLg/vpySsAXAVAmu6a
Ed9Dydd/aL3fF63yNFn7WYzK/QYEV3+MTJUnd7zMya8BLF3ebG0+fDlmjLmW
bJFKlOX23INBsgMBov0B/G3enGlGr9ykLgk8B2aiZy0YjgZ/uZehTRUpeTda
iqzTjWsyWLzJkhZ2NeLD9RXB3u3MiEqSnY8SI2SpzEaJdoQ5DCZ6T+dGLpQk
ohbGpserkZgs9LZvwyhnaPExOOMSW49E1x8JqzzhkXbQIgw4RAO/7CPeGcAq
DNilXA8sorQPe84vfZiKCry6C15eAW8uAt7XBy2kyPxMn/lZ30TYnrY1Aa6O
IDvrTn8613K1Ar5RsyeeL0j1uhY9UKMBpp9PGzGeMWW67MT30O8LlbvAKz2a
S9IPD4iT/Sl2Byi9OiH26Aj5MfDp5n6ORyeUP91lvQk4rwMNStDoztPgyh6j
+KDWnaM7VKLagxeenbbKjIYjpHtC5eK0aH2lXuq8PZai8aHWnrvFiafdjXs8
WrbFTyBWj0LmHTDgvWD07qAbx0W4IKQqv6qx+NTrwQsX8B7nz212dKPenD0u
n+otKGYjhKYjhFeTZXsRLG1ham1h6i2hGg0hGqszswT0yAomf3LFOa+ZPij7
QkrD/ZSGN5VfRRNK+Yzdn3zROartcByReC4gdx+sS9X9T/Pgqy5hr5y9aLVU
nn18vv/FWUAP9/fXJ2wkHnlrP0nweONpdtbJbJ+ZPggNPDNWx9SUQdGVxxzv
dE+LAz4NcJIBOarzMq8vKVHdlnp6mfE0YDwDOK+Aj6cA/Unw5RrwE3ydqM2b
ZCjeHGpT5WcylOZRiVDxlXgVJv00RuZRJ4IvS/vNcobufKpOZ5BUtQNrpT1H
tgmzn9Qb+ZeHJR79Ga5I1x+o2e0t1+TA2+LE1+4pUu8uWOkhkussGGH82YL2
hDPzeX/+m1ES9wt1KMcCRJajpHpdmdttP/S6MIz4sna7fBz245iJFOpyZ+zz
ZmsJ4ar1Za32YWsMEUJOzq5hRufm09oGdVKrqJKqHpf1M6fWcPbNe/XPJDX1
xbj4iXwWAmJawDd9f0wVUHECdiHnfaKeO7u9VJe7xUL+59srgP4aUKC97CpP
ZSV+21H5lq3qeV2pP4RZgLnWofy0c9UF92tyyXWlwHsywPUK8Dw/xn73HPfd
G2JPn/LfJ/tw6hDj+f2CD05IvjylRnu530Nh0FujzUO93l1rJst/tTQKXxWN
KvIbjzVpchRIVXzhw3ne+A3I1aWejFWfiNWocBYLln+r+u6M+JND8BUMme6l
6An0BOgOB+s02ApWm7HV2fIUm3Mm67NE6rKEaDPHyryKlngaLnY/gPdKuPDV
GjMauEB1OnzocaYb8WYe8f3cYEne68m4GCfe6/251fljqfO7ao+PDf6sLSE8
ixPDuNWu/q/eWeWsYdmX0hpv1Yx/iC2hHEF79s3EDE6lR6Zo88scVzYF4fkX
/bJAZtPT9NqX/nFkKur7GN6Ddw8A81MgRHGc/iow5L2nzXFF9uMxWMiLC+D+
SaDEd8YdAWfixYKcx7Ii4OFFwPgUcL+6QHf9/MdL17jInn66eI36xFFesvNW
vFT5LopTeW7j3gpjfmoDPhqDQUb9YVbD8Y49oebLWW7zieZf/eR63UVS5J6F
8F/P0aKeitEajdDIsZe1F6bkuXuI8TKQJL9mK/A+3VRqIs6+3V2xwUa40Vqg
wU4oz4g9RoMx00q0KcwkX4c+TYUi5stDT5YTrowH0uRudtjT9jjTVhk97nam
GfRiqDN/2Yf4tJIk1e72sVD/WZkDJ5zd0+lGs9nmi1P1i/O5De3aMbkPEElw
DQc5PScC8vZXDH5Oq+JOKhaPSBNwDaHyiXvqn3rNzAt4xB/wiD7qFnza2OqY
pDjgZQZc7wH7a8AAS3sIqC4B2huA6SGgvgaen4E3jqrpAe/AP1LTH1qanqR9
DZ5fBZRXwdtLx+guX6I5c+4xACyXzziLMuU5KLWF6bdH6M76ye1k2S7Fma4X
ek8l2I8m2A9Gmi+mOY1H6o0EKi5Eqfe4CZYafCzQZ+j1lx+J0JGlvcP77Bzd
9f0vT4C35wDvw7N2AtTdQaajYYYjAeptDsKlRmyZ2kzwW2SyEV+hi1K+1vss
VcoUuSeB3Odd6ECk4Mka42fdDu9qDB82WT/vcKCsMnnS6Uo7GcbfYPe+3PRN
i5cpMjsUaimAWgsX5mPHplyrmvlSK295pwHXVBBVt9f4gopARMnFwKzboVmv
wrMpLbzOqZkDe/8zJh5AzxE4B/4VmUQREUsbEc4YEfjZy/GDqdpDMZajQh+P
Cn88y/z00MsL4NlpQHYAcPADY0sQF/88wOc5DxO4dgRc2wfuHQQCL677Koml
mKllmCn6SjPacN4vsBFcyLZdDpWDShzbXURGInQ7g3S6Qw2GYi1avVW+hmoO
BSpMhisvJ+rW2XKladJmGbK0+yk9PwsuA3BzP/gLALhvkp8GspRXc8zFhkJ1
56J1252E4EBqchYbijJoDdQudlEo1f9QpPOuUIs8XvKGxycQwPFHscbNVusX
k/4MnU5vGq2elerfrTZ/0WD7rtT4VbcnS3eQN7ooF+pqgTpappa0e0fFK1pp
i1ufBGUD6wgQWAgiq4FPLggtOeQcD5yjjrpHXxJRAxziABH+xDnwjqL+PmF5
wCcJ+L4AI+t7EXFskTHs/v50NpbPvF3oHUzfS3PdeHv7D6bHF9ie3yJ/C/QM
DsfF0EaF0ssIHYLj6uk5cBsAGZrzPoofw9WYC2xE0/VZnbluhUk/T1Kl6nVh
2yk0W0zUQmZbzWXbTmbaoyt8F3Ich2N0RsJVR8OV4LehHj+ZKkehZl8FQrWf
MNOLMwCcAgBew0+B6d5xCfLzzsIvwqReDwfKzUYqtzhw9fhKzqdZTmfaj2c6
VBjTlhtQV5tS56s/DOE5FMF3sFL/9qDH28mAj222zxqtntRZPGuwIS8zfpGm
cqfBkW4oJQhZlkJsLsA25PfPUTcPvSpqepRX98w3/pyhO5xlZ4KyLwVkn7eP
AmoOQMsZGLgCPlnAxA/UTU5Yu1OqGNzmkzrxkhY8pATKxjcjM3h9o+n0rK4K
fAE0HwAtNdBUuMv78TTlHfDmKnhwDygpnAwPZMxJEXWzfCnBCkQ/ALrrgPos
0Gc+5iN1fzBCaTXLtMaGvdSYMVH+RRDf8TITivVSC1SJDbLUdSLXvjfRGFfj
gy13W841m03WafcW7wiUafCRXSnzhOaKHUxkrpwEp/eDc/vBtcOA49V5Mcqz
mrRnLRjPDAVIbeQYDvmJNjvzwBNXnjVPJUKmxpSuzoJub0iwf5+leDVF6mSd
6b1RH5pup+e1JndqTO/XmO3lYKcHY7UlVY8PO7Y9GGa1LXipOaBl4nxN/8Ws
6suJBQ/sfS6rm5+x8XnsGPTQM+6huj2QNgJqdkDBFHBJAlp28I4ZjqXrvOLX
GLiOn78LLtwD5l40bVO25T1qzaPaeXXCRrZXpOQOJMcK6yg8oiADdE/3X78M
eNn/cLOjbirTLkwUs1W/ZSxxWoYeKNIBtfdA4CaIkCWbjlGYDpddjlXrcODy
5z3syAwWMzR7ohQWih1mip0y7Pmmcm2+JujM55hALd69YfKzmWZFjoK1forF
nnK+zrqPbx4hf3SO4tGZB38BIdobWhz3HYQeegnfGgwUQyerzUXLIlM1B8IV
c604M624O5xYe905FiLE5sIFa0yeZsidLtG+3GL9YMT7bZPlgyLtq6nyZxvs
KJYSJXCZKlCjNYQMJ40jVvvsF7qsxxo5yzKfxied80/9wyoWGEQBiwTglACX
JmBkAWQlgZbSWQHuYw8eg+dv999+BZhZAD0dePEEUD4/9J7yRnSER0dfSVlX
ZOW4T+6QfvGUJiLnQ0Qhr28E9z0ycPE4uH4APL8CHI2uVBZQfG2ns9UD6gLA
V+eVAs0ZnluA7S8gSgZSdJ7OJCj0eomPBas36n1yoTqUIvkMqvScS9CbSNQf
STbsS9DtTzOEGc+3ggYiJnPN+xM0m4OkBxPUE1Q4tMkv+Uoz6X56yk52lO4K
4Lx/SInmvDbtyWoH7sGAL61ObHPR8phU7V5v4Rob1lz9D/n6H/o9RSZ8pQad
+JqMGUu0KFucOcpsmMJUn0Vok9cHSfTEaiCLHaGRNKgpGJnPO53GslrMv90k
O1DBU5f/ISPzgW/cUYtwYJsI7JOBqT/QtQay8oCHHciI7mdhAnfug5e0B8g/
n370CNDQgCdPAA01nFyvyyoCOgfyWoZzy4ciSkYdswdVETnUSbU88bkCn1kB
2Q1w6xj4wn7B3/V5XtqL4W7mvMQHtupHLCSvBmszyFIc574G5F+CSIX7WfqU
kZIPK8w5Bt3E0mRfmbz5M1eHbiRSbThGayRJryNSBeoO3+4IgSMNU+22kG+N
r3KDowumwEhEl/KKHv09qVeX+R6fYbtzWPTlafHnh5Te7Pfgvdpgz9LrwV1l
+r7LnXskWKrc/FOPn3ivl+hqgjY+QRsZJj/qIVhrTFdv9znPlMZV5HKSOW0R
grcjWpHU5EWodt+s920NoC6yu1doe6fa4/FAqWxXxZfSfCa/iKs2gQe90854
JJ3QtAU6xkBBDkiLAG3lC6LCJ8hpwFvWA285j3Kw3ZaUfEj7ETCyAlunNxX1
NmUNfjXdKdUDqW1LicUjFimtQnXjckWtwnpml97TA297kf4W9+4WrYZq9vqK
97nJz7UkgBA1cFZ4YcB2U5PunBX71VzzT82eQjEKzxE8V7P0PvUEyDtzXUMI
kvVHKFe6CrQFy/ZGqSwVWOEqXXsjVNv95Ufj9JYybarthZPU6JJU2LTI/xK+
fYDr1kG2W4coTwGhJ0c4rgGeK8Cc7nC0xK0KY+phX8EBL4Fme9YuT4EBf4lu
d/6JAKkJH7EZH7FpX5FmK4Zqa3o/8UuWnEerA/hy3FhaYmW3u3yL3XjKXXnz
rF5kmN4vsH1a6f5qudV1qtGiqUQ2NpoaEXQ7OOmRb+RNPRMgJwPkRIG65EEj
9WtqypeFJU9/Etr/kB6wct/m5LtEwwh4xf7wCf/Y3G/TNxE6OJ9Z0RVW1h3g
ES+MSGbOaxepHhSp6uNOLibv7fAbHkCkJXHn53yOCLuXmURub3RKngtocJ8x
E7xvxf/UkvNeqCJ1tYtIjStvgSWjAeulWn/5FHM2F7H7TYFS+basFa48vaGy
PYFSs0m6bZ4StXaCw8FanZ6KgfwvTSnPWdLd0Hh9XvDWH/x3DzNfAXcAUHj3
F1zbdakPmdP8ofcMhPGdmQ+TmAmTbHVgXYhR+Rog1mj7ucmCsVqXqtuKac5f
ZMCNrc2FyZn7sJPoycogzhhL8kIf9vFCXR/Ve66S11MNycvdPk1kyKyUKUOD
cXM1ri056jnR3BH+lCH+L3w87lkZnlESAqpCQFv8qKr4UV31S84eb4wdH3DJ
AmoWQPYSvH4PhKSu2Xuy5lXq9E17tI7YjqJCSttt9B3oLBBMYdl84QWUibVk
Hikgv1gd4ccgKAYsrG5IS4Egv4cIx+t8H4EC+x9mYg9CtbnSLWWjNLiCFN7m
2bD0RErwvvpTj5fMW4PGgONSrj1HV5hsjSt3owtXmxvviL9Mh7Nwg5Vgv4dS
htJn63fXTcmvKD44qEV+XuzeQdHHx9lv/PEEAA/pd3nWvOU27KZvgSoZ8GU5
kKN0t9mKfjRAbCpUeiFWscOZo8H0Q4Xmqx4bBnSExHQg/1AAd6TqNQ/Zc96a
13z0bkfbkye7UgcbP0lzft8doz6aobvWZA/1OZAaggeSDKuDv+T7ccY4UPiZ
3vPUv+6ietFe7ryZ2AlDoSOi9ECOH4T4vY6Jp/YIvC9jDF4xAioGwPD5BgfP
M1nVVz6RTD5xz3Xtj7KIguOXwLWH4CPffgENoOQMuIzBzWfgDT14+BJw8oPn
L4Cby92aUl6E3U1uaqDGccHuC22QmoiPLIeHBJWvwmMzjv1kx8DDY0CH95Yp
341EY/rhOOVaB5Yay49l+tT1powd9vzt9uJtdrIeLE9U75/SeHxR7ekRXaoL
ImT7eG+Bz1fAy/3AT4GmyUeu00c0U+VJMNexJPGLRWoPCtQelxu+7Ufw9yN4
i3XJC5Qf58vf6zSnXgjkG0V8HvBjSTe5by+2X40dBFreDXd4ZqV0JtaFvD1b
At0c0pNu3BAr15wkupJu1AOHpQdnjfunLKvX8fr3YnTuhKndQEict+E+aMN/
UIIKiFIDV4Oj8UH3CjJeB2UCLVsgq3aSnYvsE/PLF+THeEQPKhkBx4BT6qaA
kgGcvgpOXAMUXEDZDWgGgcf0QMPqGqf4fip6cPQE4OIE/l4PXa3+4qYBfBSA
6jSAX3PeHgbylBdMOM7QfBvCbwHwheqoveh9X8mHReb0+TrkcElpt2Fqsfg8
5i3d4yZTY/HFiu6u0uMLUnfPKj89rP32gsLLk8L3D3DfBpRHgKPg42oXoXZ3
vpkwsXZr6kajl5PeHI0mVNlKj0f9RBttP8ITezT/uXiBc+XK97ot3zZbvO7w
oM0yf+guf1xPCDhqndH6AsRZgKvR1XCXl+HWAnpid5V4TpgpnsPFic0Fsc0E
MI/70XU5v2l1eNFs+7Lc+HG46Elf3kPJajd8xQ9a84BIg0NVYXdWWzn7Jq+0
9D4uKGNw8/xobMry4Am4cAW8egsklYCj1zm/CDIJVfD8I2CRB0YhV2xT7ul7
XY4u4mISAGeugoNHAflroKb4p5H6PiFGwPoEvDgMyA+AFwDQngKybwHbbcB0
E3y4CN6fAhrvjhi+2+fLdSFJ8naHNQMmWnHAhbffQzxbmzlIgkbx5XmZV1eE
Hp0Xvg5gVzYcjw0+kam+v8R5HSC+POsOkllJ0ZgM5B/3Yhl1Z+qxpe1z/DQd
JDofITcTIVGk8yJZ/HKC4LkCmRt1Ok+qDR53en6odKNIsXvoonWWnx7cOgPe
PQXK4kCUDbwhAzdPA8rHQEn6INGffDOEcjuMcj3kDcbn+bz7k2mXZxMur/Pl
zmTJnM1SOBsnsS+YH+RogpnoR7vldP2ND+dH6abGWLq6uVOymCVkzt+4CS7+
BYRFjmtoHwiMvJBQeNUz/oSh7zkZm1uMchc/SoCEct7YHAk51fsX/gK3bwBe
FmCkvE+cEfCTA3maq7oM5HoM5GrUV2TIgcYnYMB4Q4/2os7bE6qPgfZjYPoC
2L4BEVzncLHKk4HSTQ68YTIUmu8vSlJckKC+wf/miuLzIzLPDpt8vqtJf43n
DhB+CJz4yfqCZfq9+Sb9eTssKYad6YpV7rZZvl+OktvMMepwZa2z+lBrTJX+
5WqW+KV82WvzIdwtztSlTm9iLO4GW5LJCwBuBiDGDRjeAWYa8J4KPHkA3lEB
ecUDJOezO+7nIcTFXa+LW56XN71u7Qa/gKLpoUwBKJVvI5Z10uVpldK+InFQ
LQMa5EBX1OvR/NdjDY+RszTELZnGDklDI4rPjNcZaE6oKp/TNQbeUaCo44mW
x7HLlOA23YnHzHuuUotl9UzeUFEC6teAlxEYSO8zED0AZ7c81WknAbpQJT4/
aRp38duh6nfNqM8j2O8myb2LFLxv8QKoXQF6d4Ab9Z+2FCBSjKzEnDVakw6e
YxluAfr7+z4+PspwEqSbCYWos9CeAYKP/oRd6dGdKrFiGg4QnAng6bOnGXR4
X6p2v1Ln1RCCbzzgS5s7R7sLS7cTc4Xmi1KlBwVytwdcGPP1HsRr30qxf4Uw
uKEq+oe8KDDUumiqd1VCEJw5B97SAEn5k2p6x7fMAWQDIIc/IYf9kON+yPMc
FPkYyqCHqsSgCkkoR3AnhHbV+vac1rEJWfBVEAQzgRyNw/UBRwcqL64s069g
lPqHLdtafTycBKVETn/+DOTUgFfMWb+MN9wa58BFcIsK+CbQGjs8Y+P4g5kO
8DMBPhqgy7/PXfFqnCF1qjF7nDp7giZniY1QnYdguTNzluK7eJGn6VKvMqWe
+9CftHwGDO8BmfNA8SZQfwz03x9RpDwI5yn1VUB3H3x4CBjOguE05+kCXw2G
my8Pgo/ngfGns/mm9AsxMgshAmMen/ps3zUava7QfjniKzLoJTISKT0cItbh
zFaq8aJY+VGl5osZf/5WZ4ZG788ZTtSG4sdNlC/BY5Ks6FFdtevyEqdekAP6
z0BC8YSJ/VVIH0Bm33TZAsgK7Drsg3wvQdHPoG4FqEkOSmbDOT3CGF1ZUz2B
EQMrXKCA7lDse+D9CQSrgrKUKxNjAliS7Q4UPT7pUVOpbWFyh5oasAkBzzgq
s9Dnt5jAE1rgGf5WSuHY+3dAku+oqdxNNY4jbvK3Ewwp2/y/NCHEsg0Y0zRp
ax34BoLl6py4emw5m00+ddtwdFiyhnNecvtwNFaYLJDnmhE5kLsHxO6BL0+B
6CsgTHGADS535wDjRVDqpQFNlo/ke4u9Oa5Kd96a62qDG+9ygsJsIO8EgrnL
gqrHjr7OmHo5TmUqTCHblLrWibXBlqnVmrnLmqnNlL7FjD5G8maQzC1dtgPc
r4EC/zEt2Wui3EfF+U4Jcx1jYARs7EBW4bi1w41tRQDpAMhiP2RzALLet227
b93tFM73KjStAw1oQPGMM4aXkcqniV8O4pgB7j0YoDud8xh4kAGzN8CQBziY
H0rNedk2KABBnmi0285GYna6PAU14JYBdrEPGdTAW0bg5vNGSnofLyswV7vu
b0xpL04Wrva2yJIjTuGFG/vJNLUntVb0xfrv6mw4aq244IZVofe6xvBtrzNX
oRZFlsqbHnfRSgtON84bZh/PGTOcM/50QY3mmOLbgzKU+/gfg5eHgSH3c2i0
BJqvGSv0aYzQ9ZZ52eknNh4iOuzFCsdVjy3NoMvnBnO6uSiVAV+pJn+h0Til
Hm/hYW+xKR+xUTeBRtNP0V/IZB4B4ceA7zWgvAVonwNRznP0FODhdUBPBYy0
7ob4ffBwuY8TBNtSANI6DJmegGxO7jieJHicX/G9DnVIQN3KUCLzssUdyIgM
Ur4MsQLoA/h694+KqyDyGjD4CzCfAXDrd3Q9k1NNXlBLsYTWwaJdlxZ8BoYd
TF0f0IgCKQegY3DLxv4J/EYpxA7cDclyEJyxegyRch+SFT5EiNy1fQ8Spc+W
6t/PVLhba/q5yoAzTeFigsxfsVKXehFcU9Hyo+FKS6mmFTYCUQrvXHnv27Je
s2a+ZPj+uD71YUPqg5qvAcMNQHcV4LuyoImy7aHcsQK3gQSD3lDpQV++MV+O
aT+OWX+eMQRnkzVTv49EnS3PWp0L1O47HC4/gBAd8RRbDVdfjdScDlNJ0f5g
xXtd4dOpR2fB1SOA/D54cAVQPARG8ncQ5lShru99bB6hOP7A8u5bFz+4pXx4
0+D4ms1ppOvFae9rW7mfoCYpKIUVY/8UsngOyVwmkgPiPYC6d672GPADQA0A
ebJDLlrkUVH07kFXrBHAyRvEJFwfGJZaxFgnFLALav35/gvw82c1MbrD9glo
SwM/kzuVAQJ1HvIFekIxou+q9BlSpC/kqZ7JVzubq3ij30GgVpsrUupwjf2L
Vs8PmDz11Vy9nlDZpTzbsUSzbFNeb+EXDp9vePHcDRK458t5xfwNkDgPJGmu
Mt75oyzUHNuVOVriP5TjBI2mrOab9/vxzYQIwq4w0V++enB0unAN+Eo2u4hW
+YpMZxo2wK+ZjvyddnxzfgoLwWrIOMO5VIsYPSaVz5c/v9j35BK4cQq8f3pY
T4E+3ondz5DSz/hFsictlvMkivMIkvvPZZE/kUoHFg2OTtic7nf+q8n+AjLh
w6I/xZT+zV3dexD/yaU7YOkMaAGgHIDYffv0/wBy1446KtE42r7lFQOc4sDA
BiAC94xZuQJTt0tiumdfsoIvomfFBPfJi4MA+1u28kf9VR4WW4lWmcrUGIjW
GnyKEzrWZH6jz/lxudbdQQfBNiORYss7nQG0hVZP+yL5p9PVmvy/DMbq1Xkr
rhQiCsyFXDnIrN6fsaM5hmA46ctwzJkS8L48o8n5XIaBbKwynNiXCY1kQt2R
UE9wjzfvdLDAoMtHZJhwqzVdjzvvaIjiSKhariN7f5xquj5tsuLr5C/Pm804
p/1Vdgs9RqL06wNUHeXeqfM8ZHx5+N45wE5zRZrnRaQ5Q2207FKD7fqAC8QL
trgBjgesCuxfkTm+qn0OY3EO43j6qxaAfM6OygMUXNDUbo6Qg+5roHI/qACH
08GfYeCAKzihAo4wAHAfgCuHwNGD4PHLo6Kyz3SNyPW0bxqonnQ3PZ/gfb89
RLwzVKrBR6QrVKHQlqfVV77MTihV93ORBX+FnXC9s3iuEVOxxedaZ64sfcpc
o3flepQj3nyD3hwtjnT9Pux9fpzNLqwdHoL9/grNzpIVFoI29H+5sV/34LqE
4D6L4D5l8hSYUx7QozpQ4iy43Ru+1hW61hdBGI4kzSQ2FRumR4g256hXhwhW
2jJOIQTb1Mh7fbVb3ZSjZWgztVgbnCRrHES+hqoPR2kuZVvmWrPm2LCq0h4U
fAoYrgJXhecNsWrIrhz815K14TJ0XwHEAnZYAJEVYLn2oUWOoGRPrKgeXdL6
Ewq4AeXSQLZnIOPLkOb9iReg7TQoAqD60PEMsC8QAFuwX+XAIfYD+17s33N1
aB84cgrcvA/oPv4pyn9IR+6Yr9Wt7GAKZJ5+R4Bou7/YVJJOq7dUo4dEC0Ku
w1uhwkaw0VWyy1e+0o672pGr2VOgzJax0YPLgW5fvvaLDhfmTnemgQCOHj/2
Fg+2vgDxuSTdvgClVneZGDkqHwEye6ZTbpxns/UpAjlv2L0/qfAARKq+xVR7
QOMp0HD8cKk9aSJucz6xpdCgNkWpL1Wt3oW9x45twV04UZG+0JAnQ4MpW4ep
1pq/1UV0OFR5Kk5zs8J5LEEzw4LJTuimLuu5qlDFyTJnLGz+a9H6cAlxqBg/
UABxHIA4DkHcxyGBs9CXi5D8FUjl/JbasW2NA5DzzS05sCN+GOI9//UG6DgC
qgHIOQonIHAFwAAAxeN/8J0/8uo4OA3A9cvg0DFw8Ai4ehlQPAGizMDX5F5z
Kn+tI1OEzJ1sPcoae/YSM+Z8A6Z2hHSzq2Sfv0qj85dKO95iC9buAMmp/6+y
8wCK6vr7/jU90VgTWxI1MRqTqIklYo1dEUuwRhN7FLtiR4qKSpGiIEUBkSa9
C0jvy8Kyyza2937v3t17t9OX817kefPm+Sd553lmPnPnzA7LwIff+Z7fAeac
jLOUx+7EtrQ1YGt78NayG4vSPaa/uvl908OV7RGb2XH7tDmegBTRVRlSffuX
6H2zXhz7LvSXCY92fRK7fUbYxkneLh893PZF7tUNoowbgPdygJMsqw0ChqJB
TSY1/1Jx0FZZ2rneIh/SlTU3F34Q7T4z99TSjKM/vDrnQr6zhXLPjfNkP5J5
QZx8Wpx5MfHi0vLHB82058BBdipfDUoquzjFZnquhZEH1r8F1r0LNnwI3MaB
XZPAgSng0ERwdAzwnAT8Z4MT48C+sd2bxgunQexxb9HeHxH1NhTxPvRgJOQ9
CfL9caL35rnHN3y3/qep3895f+rn0MRPocnjoEnvQ4umQg9PTVdUXar3WZx9
YjrZfw3p7npq4HZ+9JGu0nvsJ8cVqZep4YSrXyr9XTsTDsuzz1Cid1Fjd5GC
3JsC3Spvr6z0d6FGbRKm7uImulNjtkvSTzKeHmZEHVFnXieH7Ms8v/j6cujJ
/ilxu2bfWTrq8jzIa9GHDzd9VuO3s6s2YpD63E59Kq8J7OImAXkmN+dqe8wx
YdyZOu8t3ovfvr/qo6T9Xye4T8k9Mqvp2pJSj9ktPiv5kbsb7q6XZ14s8N3M
zfURVYT2SUsQ2st+Tr6x5YW6JgZuiEMXQsgPkHo+pP4B0i4ZAa98B177NrwB
0myA9Nsg0UqocwHUNhOqHAtVj4aqP34r1wXKWDbi6ZIR9396x3fdJz57vj2/
b96+7bN/WvTRD/Pfmv8d9P0MaNoH0ILxUOCRqaqyy41e32cdnlDhObvwzMy6
W0vbA7eokj3q/V05T4+y448IUj3IUbtqw7ZUhqyrCFsrfXWi7LZry6O9wrQ/
pJlH2InbO+I2MZ9vYcRvoz/b1Ra5kxy6mxt3sjFgZ/H11bfXf/h4z9Sw7V/6
Lhv9aOPn0Zum+81/P3TN5JZ7vzqqHvVS4hzUuC56AhBnAUmupMDv9f095Cd/
5J5eHLl1UsyOiXHbx5X88XXDpXl5ByY0X50rCt/S7LuyyntV5b1tdRFHDOTn
OnKyvPmFJP8+N8OXl+mnKA6Ct49TbRkj3TBSvPZj6foxss3j5W7jZdvGcja+
zXN9j7ftY4H7ROHOL2V7FyDHNmAe7pKApQy/Ra8vzIk/Ni34yJd3PebdPLvo
0pmfrl1Zfeb0wpOHv/HYN/XIpndObxwRd2E2I2mvKGpZxeUpr85Pqr01hxm2
lha2QZj4qzzjGFFCLdG/kON3lzxcleo379n1mfHeM8kZv5iqgmXZV7lJx1oi
XYtvz3t9bz75yUrKkzXNoWvh/Auq9PN5l5alnvyhI+K3Kr9NGWcWJpxc8njX
rIxDi+M2zjj5MbQXgiI2fmEqvK8puIPXPQKsNFNzrIUcB0QFusbolrQbrJg/
cs4tiXKfEvvLuNxDn+XuH/9yx7t1p79oOP81xfsnUcyeMq/V9aEH0PpoW0cG
t+RR9NEFyedXlfnvao06Yb67FvddY/Rajd9Ya7q5znxznenGWuzGzxa/dXqv
lfgDV0PgDs2DnUjoEeTxSfjxGUH8+o6Yn1ti1pKT3Fvzj7eVX25r9KO0BdXV
+5UWXyzIOFyctLcwenNOwOLiBwtqwlya/D+r8ZmUf2FUg//XtEgXSuTK5scr
pQWHm+M2Zz9Y9Nz3m/ArUx5e+fTu+ZHep99JCPtGkePTFP5rdcDmhrD1TeGr
mPEbuImuzcFLGVFuZV4uZTdXll5fQ398kIAWvp8I/JonRwPdv7z63Yjz46EL
o6AzIyHP6VDe6WXq7Ft5Xq6K/NuAk21sjDW0Jxm52TpuprokgJPsmXf155Sj
sxN3j3+8GkrZ+lb50QlF+0eTPOfYMo4n/vpZmde6+tDf+Vm3k69tr3uwhxN/
Fi26a6t8qIr9TRPzmy7mkPHpUcvT49bYPyxRR40Rh8yxx1WPDxhenIZTz4kS
PUTplzpTzlNfnGqMX1X9bGVz+lZB03lYEKASh4hFIWLJIy4vkMe6w++4IW69
yK0+SEnfUPNkfmnQjKRTUEvEjNK748sffFb5cGZjzOKXftNKniwqiFwUf39m
lP/0O1c/vnwGOnYIOn4Uioz4nB53qvrBjobgre2Rbs0hKxgxa2UpO7ixm7Xp
h8uuLim+6FJ8YaXs+Xnqw1+LLv9cdHnlo8vLzq0aSeysCUvehK6PoF0Q5Ofy
Tl3ADlLYAbjwrvF1iL0lAWekMUnRsLbUwcgCggJuhhcx1xJ+nxawAsraP46o
K9q179qufFt+Ypr/EuLtUN6Fpc8Oz/eYBzGijinTr6IFvtKUS20xh2lPj3ES
PCQvzqmTLupeXNQ9v6SJu4SkXJc892THn1OX3m1+cYpddotc7Fme/kdF+hZa
9RENx9egDDZow1EkUq+P0iKP1apApeS2UnAV5p03ck8aaPuVNZt5hUtqYz4r
DZtQHDIh8/64uJsfRt38KPTKyOvHoYAbY6JDvwq4PzE4dOoV77f3H4eu3X3H
J2RkXdDO6gdbNfkXBMn7OHFby7y+qb39gyB2W47HrObbGzvDf6u+6Zp6ZGHW
6eU5Z5dH7f3qhPunu+dChydBId9AwZOhqO+goB+hgjPzq+9u4MQd6a95CCjx
vaRnGC1JwUtrpT+TNKUIqmINbcmG+ghm3B+l11yI6iohVp9r32fuHhm3CQpd
Cd2aB0W4jWny28SNPqzMvM5NOMOI+YP9zIOaeoOWdJ3x4mrniyvCF9dkL7xU
yX7qlDuqFH9egg8ryVv8KpCU4Umv8qnIO1Gad6yl9jSP6Q2rwwz6aMISgkTA
cLhW91Cr8lfLvDTCC4jQAxMeNfF+NTK2w5SNWso2RtlyUu7i0sRvI/1G3TwF
XT4JXfCAzp+BHgRPCY6Y4f9o8iX/90/5QtfDProe9oEk67yp8laJn0tTyJrU
U1OSj39KRByxueNF7iff/aXymlvBhfW559fmXFgTunP6bzOh1QugTdMh34Uj
Xq4YXb1hSoP7tNYLC7TJv9OjtlNCNiPJHoAcDdjpzs40VJQhUWbC7DJ+XbKi
KVldG6sqCRC+9GwO2EYLdCs9+23yrrHPd4yK2zoyfO3bSXsnN95a3RGwVZR+
lZlwpj3mD2rsCV5OOD8nVJgVLMkMUGYEajOCkIwwNOuJIeeZ8mWkuihGXhrJ
ex0gJge9zjrUVnuOywtWa2IxPBnDX+jReAP61IjGYPpHBjjQqPUzqq5isnNm
6Qmr/EiX/FC34qBNc0HHP46Iz6j5p8oLN4Q+mOrjNc7b51Nf/6nXb0+4HfbF
zZCJngGjr4SM9omZ+PTVgubobZUPV3tthgp85tYFLmsJXSdJOsyOPNBw1z3l
6NLH7vMe7fkheOecW5sm/TYXWjoSWvIttOs7KOfA15S9s80XVyGXllijd4CK
s6Dpiix2mzzEDWRfBa2xQPCyT5GpFCf2a1oQRhHGLFI3PjeQEvCmGHmujyTV
kxS0s+Lm6sqbq2q9VpVdWlxxxaXZb12z7wZJni8/8yYv44Y410fxKk1VkoKU
JWPlSebXLyylSebiZFNhmq0kx1CYbq8vhKsSdaRYdWtgddYBGf2mUpOEYhkW
ax5uzjRhaVZTarc1pcf6ossY1Y096jYE2RFfs/qyRXXBAV/oQz0t6D1Md7vX
HgEG4mBNALX9YnX1scLS/bcD5rj/Dp3xmhCSsOBJhov/s69vPJ6SS9pGSnYL
8xgXdW5ioucXtY/W5HgtKPBa2RJ+8NbqqfumQ66fQtumQesmD/3v0A9joXnj
oL3rIG+3j2gXl+tPLQHX1gx6r8QCl6ljfwakM6DwEHi22/lwx8CjA6DsDhAn
96uSgap2UFIO4Ga8PcPWkWWnZZnJyVhjfC8t1db01N4Y3dsc3V3/yFIegL+6
bcj35uX7EwiLHkhLg/V1FWhdmaG2yFibi9VmW+ry7XWvHHXl5srXaHmJo6VS
V/cSbn3GrrzRmP8rIrilM+Ri1ldWe4nFXGjF8nss+U5bAbDn9RlTBvFkYHk+
gMd06UOtSJDdENhjCunvfemwvbBbk6yWFIsptaenwGLLEooj/Px/+vZHaPxn
0MSZ0OzF0E8boe2HoadZP1tFN5ICv/I+BJ1YB4V6THzk8WXE8fmRx5YdXfDp
slHQTAia+Q407X1o+uihRm7xXOiC+0dRv06mHfu+77QLOL0YBK6Db85k+0zl
Bc60x6wAsdvA1SWCX6YIzy8GZV4AfgnoSYP0ZADXdrWnAWkFUNQCTYtT0QR0
bUBJGpTWAUUd0DUCZSUQFgFRkb4tCaUkE8DkRJzOQNvIqsYKaU2+tCZb01hg
bKuy0EgoqREmNWAdDdr2fAk5uiLrEKXuOKbxM5hKbfaqLkeN3VTmMJb04aXA
VAqMxf363EFjHrAUDFpy+8zZ3aaMHmtGjyOrr7eiu6vMbisxYa+s5nIw0GLC
X7eSH/n5rj98eMZ294/Xb4YINmyBVrz5u39J1k8lGUuO74SuHoGuHHjf+9Bn
t379ZsNX0OavR7tMfm/eJ9C0j6GP3obGjIXmLoJWuUJ/rIKC1kA160f37f8G
HJkDHrv13Z6tDZjecnYE7TBkPDK2b98k0bK3mla8zbmyCMs8DipvWwu9ACMB
rwwHiiqgJgGEYZFTu3Q8m46rl1ANInKvtqNb3mzlVw051DYApBnATQOKaj1P
oO1kyekkIaVS0FoibCuVUKtltCZFR6uC0SZnNKh5r9ubw2Kj1rFYF1DMF8VK
rbaqbnttt7mqF6scxKsBVj2IlANDFTEAeM2guX7AWt9nb+jrburrbbabG+zm
RmcvDfSz+hwdXRaKQlxWWxGRk+6TnXot5IG757kFB/dP2e72rpsrtHwp5OoK
JSZ8lZmygFSx59aZT5bPglymQ3PGQLNGQj98PnrZ3M+/nfXRpC+gOUuhTQfH
bfeYsHMGdP1LqHIRhK8ZDfZ8AW4tBH5fWcNmyP3Gcn6DtK4Q2PJB95r3xWve
p+2bTDoz0578Gxy7F9Q/QPK8ATsH7yiwSFphGaO3C+vrd+AmGEUVPXbEahAa
lR39JuGAthmgbUDf2q2ok/P4SiFPLWGrpO0yYTO3s6ajvbyNVMHqIHUyyIz2
ciGvpKLyjved75nCiwrDdRgpNJvKu2w1vdY6p6kOWBoB3gTQBmBtA+ZWYGoF
ZsqAjUZo6eth9feyex0Mm4ni7O4Eg5IeKxvTURB5k5RTVlcS1Vge9TLBMzn2
ZIDvxqP7p5459tWxA5M3bYV27oPSUudXlGxPi1vnugyaNQFa8tX7a+dPd13+
g7vb8j2/rjx7c2t0zvn4ynO+LzZvnwQRXWjjT5BqLgTcJoC9HzvOj9bfGW8K
mgzuTAXXvgK/TQEbR/Xt/tx88UfxtQXq+y6qoDWg8R6ef7O3LUlS9cIsa++3
owiqxbu7NDimNuodfTazFUYR8UAvAmxs0M0DVlaPlqRjCbQsto7TjvCb9cIG
RNCo6WxWdFCELa30qhoFnSSiZafG7QkPmV7f5GLp+t2IleJ4FW5swVGG1Sjp
MSFdGGKGFT24qtci67fwBmxsp4M12MUGXZ0E/d0sQleXtcNmajcZyAa4Sa9t
gtUNrI4ccmNKWVFEevLdp0+uBd07cd1z15kTmy4fnuKxZ9SNE1Nr8w4KKVfu
Xp2wfD60yxXyOAKdPg55XYfiYsdVvP6huvLHF0kT7t2HXKePOPfdqLgfx7cu
GGtePAasnwh2fwGOTRu8Mqv38QpTwkZx+AqB7wL0lgu4uQpcWeX0Hg/ufQZC
ZvdG/mhPWNtXeBDQ7wNduoHzwqKtNmJ02CyFe3Blt0Pi6NMCAHAjsOIAg03S
TpQr0XN5CI+mF5BRUaNe2KTjkNXMdhWdSehSMlroDYlPH28OejDldcWPKngb
hr+yWKptVrLVxHSYJQN2/aAD77chTrvW6ZCBLj4gSqibOUQPixh32+iEKLuZ
asUphCsj0oLqmgldUkEFl1lEJWc01SZVlMTkZT58/vRWZNjFgGuzvU5NuuEx
7mXM8triX+57jdm7FbrkAQXdeycs+O24mI9zMj8vefVVdtbkiAjI2xvydJkS
tHRKztKJHYvGGBZ8AFzeAxtHgl/Hg1vfg/jNIO+ANWUXErrRfm8DuOMKfLeA
8OXg0UoQtsIZ4GLwW6jw+Ul2b6041B3QngFOJujMA4IKoGkHSpqV22zmkpwa
MtBTgb6tX15lkqiMIhEqZOlFrXpRMyomIQKKjkvXcThqFkvOaKovCQ8LWHX/
3sScgllU1jLUmEtke18vpXeoYCSgRwf6MDBgBN2qwW4RMdecXbQBB6Xf3jYM
UU4EhCgLRtRVG6YnG3RkVNuiVTSopPVyUY1UUCXiVrA7isiNL2srEqry9hQk
b44PX5D29KdXmT/HhH7ufRkKuffes8gxqQkTi3JmlBfPKi2ckf3yk8RnH8RG
jkjfuzhr08yK5Z90Lh4Fz4dMcyHHMsix44P+y7NBrBt4dRIUevQ/Pwgi9oPw
30DI7+DeOvBgA7hPqFvX57XSfs3F4rkE81yCXl5qu7vFEew+EH0E5N0Ar++B
mkDQGmUkBeLkYIx0D673tqhgTC5HxGydmKITt8ASMiym6oQsOYuuFbAlrPqy
ggehD1cHhUxPzvqypHaOVJ2AWYuczlbg5Az0ipw9KtAHgwENcCpAP9/ZQ+/r
IvfZm3qsDT3Wpm5Lox2nDWPDqBYDFUfaDNoWVE3WyZu0siaNtJFAKyOpxI0S
bjWf+VrBDpIy77XVnK0q2N9Q9vvrvK3pcYtexs0L9B0ZETQ+IWLqi+jP4iM+
fRo+nngmxUzpOLepbsecGpdRrEVv6xZCKKFrCWRzfRs7MKHPZwlI2A/ST4Gk
kyDOAzz1ANEnQcwBELlvMMwdBLiBO+vBrVVEU+G8tAD4rwWPtoOwTT13lupu
zOVcmMG8NEN698fa4JVVAcvK7i4s9vvOqkMxpRKWcjTido2kVStt00qoGhFT
zGzXy3kSTn1p0f3Y2G2RT+fFpc1Iyf+CygpSaFO7ehsGAQs4RaBfAQbUoF8G
gBQ4uYN91N6uZoe11mGqfkNtF0bvxhnE02FkWPU0XNuGKkmIrJlAJ2lWCxtU
gnoVv3EYJa9BwU6D+Rli6jNabSCzMVBACWY1+VEqPOsKjtXlH6nO+a0sbWdh
4tbi51vLU3fWZO7T3ttPOfRD7apRjKVva5ZDxoWQdSHURQxWvWPfO40IKBCw
G0QcAbEnwdMTzpjjlqjtxtANqP8qo4+L7daSPp+lwHcZ8FsO7qwAj1xB1FZH
lCv21E0Wu4ETu16SuoMata89ajc1eg8zbr9Vb8R1GkQp1MpZGjmNQC3tUEmY
Uh7NoOULuVVlpQ/SMg8lpq9JyPw+teibZoq/SJ5o66odBJ1DfoAKDKrBgNzZ
y+vtojosTSZjpQEp0euKUc0rVFNqQzsI7CjDpqebdVSDkgxLSRpRIyJtJcqY
8KPgDqHkNan4zRphC8xtRfitSmYdv6VQ0JoPc14bBeU6Rr60JYlTG91WGFSX
6lOecO31sysV8deqE2/iiRf5Pm6tB75muI2Tr3kPXQSZ50COWVDft9DA4rGD
m2cNHl7ef3VL1/09ePh+NPJX2bXvJJ6zxOe+VJ6biV2ZP3CHyC43EL0XRO8D
CYcsCYcN6WfMVb7KSl9y1tnqlBPMpDuctPuKwseG2gQbhplQGNVJYTVfp2Zr
VSyVnKmQMOViBqLl0DsKC4vv5r06m/d6X17l5iqKG5Mfrdbn9/S1ASACQA0A
Apyws1fWbWUTvQGG1iKaMo2iSCUrVMmKVdISo6INU1JMaioBpqTqpa1aYbOK
2/R/ISk5zYrOJuKp5pE1/FZcLIW5XB2HrWF1yKgkLYuM8dv1bJKZ14oy6pSk
UlFVPrcks7M4nVOYwS3KRIsfKF5c5PhvZxz/rtN1nGwRZPgK6p4EAYKp74JZ
4weWzrD9Mtd4arn+9ibDY3fgsw54rQbXVvR7uvR7LnPeWA1uu4GAPb0hB+2R
p7RPziribyBFj9Wvn/JKYriv4/RtjYaOFjuP7lQI7GaT2ag36lV6WIzohDoN
X63kKGRsmYShVNCaSelZub7FFdfLG8/Wth/jqC5r0Ve2bhIA/DeiUDCIEU1I
j00+0CPttXOIDDfqGxBtDayqgZW1iKqBMAOLW/QSikFGRaXtsKhVzWsh5Aio
VaKOWimzQc5uUrBb/kTOpvEojTJmKyykq9gtSmaDlt2oYdToGXUwrVrTWq5o
KBFV5PFKc3jFWdyiLFlVrKI0XJB4ue3GpqZfZrT/9JFsJmSeCPV/CIEPIDD2
Pee0MfaFk0w7vnZ4LgUPt4Lrv4MbB4HX7+DmfnBjL7i1F9w5AAKOOsNPg0Tf
/kR/Y6wfEh9oTIt2lucCbrtJIUalfL2EpxPzTThqwvU4rjMaVUTLCsNirVas
VvMVyk6BqIXGKGpsTagjhzTT7zIk9wS6gK5eWk9f54BTCgb1gwOmgR5Tj93g
sGgdZqnDInBYOA4zm8BuYttxnh0XOFCBXc+3ITyzttMgZ+hE7SoeWd7ZIqDV
EfDa67iU2s7Waja5ikWqZjZXcemlTEohnZTNIGdzKLn89pxOUhqjPpFeHc+o
eEYriW7Lj2jJeUzNj+ksS5TUpMsb8mQ1acKCRx1RF+rObyjb8PnrL6HmDyHt
SMjyDtT37lsDY9+1T3kXnfOuZd0E58HZ4PxZcOEUuHwK+J4DQZ7g0UUQftoe
crz/2aW++Cu2p1d6EnxBehh4GQkyn4KKHKJFH4omJVOtYhKiTCaYcIVhWoNB
jSAKnU6m0YgIXUIxub2jqJH8orEtmsaNFmkSNKaU7n5RT7+sb0Dn7DcN9Np7
HfYus9mGo3az1mGSEx2X3SS0YyI7JrYZZDaDwqrjWbRci5ZvUnMxZadeSuii
awQ0eWernE2RsdokDLKYThbSSAJqM0EnI4fenk5rTaG1JrGpKRxqMrs1nt4Y
Q6l6TKkIb3kV0pBzv+rlneo0/4bMYHJueGtyCjkloSkxvCLiRp73gYyjK3Nd
51Qt+aJu0vv0D0dIRkDwWxD+AWSeAA3OeQ+s/LR/nzs4tg9cPAJ8jg0G/tHz
+Lgl9pgx/rj55Vl7tqcj64oz1xcUPwTZQSAtCBTE8On5ks5SpahWo2g2mbRD
ZzoRujDEaIBRvRaB1TqtAkEkYkk7taOM1JbeznwpVOQj5nJLb11vv7q3X9fb
Z+zptvbYut+cjW23YSa7yfBGl9KOK2yY0oYqrXqNFdEZNXwCTCsgngY1D1Xx
EQUXlnO0kk6NmK0Rc1RCtlLAUvCZch5LxmVKhXUiThWfXSboLBNzy2TcUnFn
oYCeK+rIFbZn88jpzPoUWkUipew5texFR3myPKdGVlQtfF3aWZ5NLY5tzQ6i
JvqII69xzu7hb/2Z880MzscfCCBIBUHW9yAwHlIvmYxt+rrrt4VdZ5fhV5fD
t1ch4ZuQeHc854j11TlL8VV7sfdgWXB//sP+rBBQ/EzWkqnpKDAIqkxDrtT/
pQtHMSNqRA2oHtYjGmJKEtOQzamjs0r54iod2mLponcPcLp7Nd09iMOB2W0W
q9lhx3vspi67yWbHcbtJbzNp7JjaalBb9DozTOx9UKNO9P/Qig0aEaoWomqx
XiXSqySIUgwrRDq5UCsVaSRCAkQhJcZqCY/QqJNydLJOjYiu5hOLAguVsPRi
JsJnEK2yhk1Xszq0LKatmmdp6DS00dVEfXbW8VglfFqeoiXT3pBlT4nEvS7q
3bfCP87VThyreRfSQJB2GoR/D3X9DPXtGNV96NOeizOd95cMRrt2xe/sTvsD
TzmnT71hynlozotxFKWAhjJLe2UXq9EppDoVbJNZNXQMnRkxmwwmDMeNJsyA
Gw16osy0WqFESpXIKBodEzPxrXaJzSG3OlRvDtXUm3GTGbNbcKK0urssDitu
sOGIFVdbMNVfXBlxVE6A6WVGRGqAZcSCq9dK9BrZGxSIWg6rZDrlEFrCkkKK
SHGd2KgVoRohrBXrNCKVRihX8aU6sVwrkumECp1Q9Qa1hqdWc1W2Nom5XWhk
cLScDpmgjSdo6ORV89iVKmYN3lrhrCgGGckgNBicOWHasEr+3UzdREg3GUKm
QYY5kNkF6nZ7z/n71IHTc/uur3IGHXCEn8aiblleRlvzM+yvy0ErtZ9KcTI7
AJcHBEKLSWE1q21moiRwG261Et++0Wo2YhYMNeoVxMqohwWYQWIxqSy41oxp
cIsMN6swXDd0bQBmteAOorocRIlhCGHJginNRoXVoCRcWRC9BTH817sMKuKz
GRAlCiveoNLrlAgx0zVKWK0g0KmUw+ilFkRihiWYTmzQSQhdRHaqlIQouVot
VaokiiHEKqVIJePLJVwpJtEYxDJUJDJIuKiMjciZGmmHUtwhYrWp2VSM0eFo
awF1VaAweyDhieXhbef+723bpiNrxumWjzKsGIWvGmdc/YluzeTuQ8vArYMg
/PpgQrAzP7W7othUU2knk63kFhulvYvBtHXyLGbZsCuiebCbHDZ8iKFjpI0G
k1GLGxUEJqPaNHRAFmoyGDGzGDPLMZMGN6FEHb45GB8nxBI2cKPcZBSbMdkb
XVqbQW9DDcMLh9GoQVHVEHqNAdUSENOcgMhGBCYSUgvrNMNgagOm0WMaGNVo
9IRJlQRWi2C1AEWGWhqtmqdV8zUaAWFQqeTLZDyORsRT8MVillbAwPkMK59p
5rCQTrZeJNVK5FKBhMdkCplULafdwCGhjBpQlwmK4vsSAnpCrw3cPQ2uH3ae
29V3Ypvzwm4Qeg0kB4O8aFCbbiXlacgFKnoZ2l6PMUgWXodFyrGYJVazctgV
EdTD+UPENeHKgsNEVRCiMFSL6RFcj5kNhEXRm9JSm8xEs2HEjUTIGYgPMKIy
ovxwg2BYl82osRkQu8E4vMISrohFllBkNOgwI7GO6A2o7g0IAZGQQyD6oeOS
dDIcluKIxIAI9TourGXCMAOGO3S6dqWmVa5qUajbVDqqGqYrtTS5up1qkTBQ
vlDF0kmYXULWII/j7OR3dYq0dIFGAst1OB+GOxElB5UytMxWKVko6BQxKPKm
Gn15UU9uGkiJBU+DQeQdEHINZISC0mhQEdPVkoh0pIrYL0XCbAO3ziwmd2lZ
3UbBUOzgJovJPHRMtNkyDBHbf47/kz9PwP/vmIYv8/gbOGYgbA5DxCDBf/Pz
N4iYJDDCGgKDTv0nRI0Ng6iJlFPAKvkww1n3d4bTj0AjlwyjlokJdEIWASxg
IXymrrNDTacoqGRFG0ncXC8k1YtaGkStjVJai5xJUXE7NHyGSinXqJVE5RNf
8z+6+v/xL67++dYKEzasa5i/G/s7uF5H8Fdjw9L+ag/VqoZ5M0nl/8h/SPvT
GCzl6CUcItyGEHWifJaew0A66ToWTcukalhUIuXUnA4tjwGL2EO/UlArdVq1
nmh+DPphV/8LXf/i6t9uYvirtL96Gzb2d4jN6TB/lUbwjy8S9obL7N/4uzdY
wkOkfINMgMmEZpnIJBWaCcQCi0RokgiMIp5ByNWLuMSmRi8ToHIhIWq4qIif
8pt8xv/nuv75lqZ/5z+k/XVu/iMWo95sQIb5q5+/vzIs7c8a+w/+dc5KeQTD
uoaNEbqGjL3xZpAMbf30b3wicoFeISQqikiGN02U4f8ApzeDPQ==
    "], {{0, 100}, {100, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{100, 100},
  PlotRange->{{0, 100}, {0, 100}}]], "Output",
 CellChangeTimes->{3.570261164471142*^9, 3.571216835766507*^9, 
  3.5712168861204853`*^9, 3.571216953037369*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJy9nWmSHEmSnW1fPCKBru4mhX95FPIIwxPMyJB/KTKkCGVuz/c9NY8MAIXq
qm4hsxKoXCLczdV0ear61PCf/+V//tP/KCml/7X01z/98//5L//2b//87/+t
6Zv/+u//+7//S9UX/3r+8HX+yYd+86ufOenifL6+z4XP71+V/Ydvyv3pj/MC
vyH7+1z8Sr8ip8+XfX7zetvbt+/f/frH+yvK5+dPn+wnn//AhwVz5MDXmc9b
MPHQP0jtx5+e542l5F+R1TdS+9nXnz/64ZM9za8N5TO+/Ydk9UfFGduTrVjf
iOBv3TW/f+Zvnjrff3++9Dzs68G/+6Icxf1GY/RZvv387re5/GOK8odV7/fv
SKzvpVhvws5Hid7Fk26bfb/N6+sfv3jpVf5Dn/+QrH7qr/6IrI4y/F6Zf2+M
n6ZTvpHB+eblDcv3v/pBYb+Ryh9Tgv8HH+Vt7feKpCj1Tdvfl1x+7fPXxHVE
9GmlnzHmm7e+72d+2f43Uqp8frPKd3f6/1tW2n/kc4voV5X7b2xv/k7kr6v8
aIu/ZkPfGO6PoniLvOmHK/zd+vYzHf7ZRe/15lhtBMKSa+bz9p+fmnF+HuHy
u2fO78u8r1/enujb3/zwE9893yt4jxw/Bz0/t9ny65+/S4S//lEKeGjkPHJq
tSraSBS9xZWlZfotIYi/WqlVX7UXmnpZ5efqGvZSdJnecu183XNp3F6X0AcW
pV/UHoYVb6/FsV83bjW2jM2qfBY/XPn5I+a3p9P/9Zbe2xy9VD/J50rD5P+Y
zd6+9vxf60+oCgbouxGdWeO9of4t3xl38UChJijYiYDn+bSw2iTJnuOpU/HF
Xi6qcmG/QVuRamiRJZTtj+4rpze9+D5a/LqN5je3yxPVqn1tPISfoniXfOXf
p1cv1fpWx84amxfNlzX5HuWAgZCWlUJa1SprqPy+pq499Otf15QwvJfxculG
k7Cqv8tstN4kOWnzLbQcKPgltXwr0Jvrf1n09zHiZRf51p7PV3KjzC0qSltz
aywmxwb8bnV6l9X9re1Lq69Hm4ok4o0vIbPw/cdblfjjdUtQPVYmfTpal6w7
Vr6mywxtbvePSgkZWJJWvGIdLX7YZuCJNdazMtTwaBsuoL3ZenoXW6thGS+I
UmL3S3m96HxxP/27UH7m299M7+0t3rvYA8mq8byttK4lpM6zO2Z/molcDUsP
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
KSNi
    "], {{0, 100}, {100, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{100, 100},
  PlotRange->{{0, 100}, {0, 100}}]], "Output",
 CellChangeTimes->{3.570261164471142*^9, 3.571216835766507*^9, 
  3.5712168861204853`*^9, 3.571216953040639*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJykmQVUHdnWrXeAJMSIuxN3gYQYBBKCBCe4u7sFCe7u7h7c3d3d3f1w3JF6
h3T3vX3/m37jvfFXJoyqOlX7UF/NNffaIzeV9IXVqAAAxrSUX8KK39mMjBQt
vtFQDj5ZmKgqUVN2VP782dvfJu/8Vrvbu78VDtrCQ1sEaIsIbZGgrS1oa/uX
dndJvxW0S/gHkX9pC9rd3tkbmDLEnnb+1O4OtLUDkXYgwg6E24Gwv4T7dUja
+4hywa8rCdA/6fffursN/VY7W/+gv29bu7/VP41JhHYoIkE75F8jUb5k59fD
/Xrq3+ifGf4JivLQ/8Bqewci70DEHQj/ixLu1w7x18ntf7EiQf+k7d/qf8Nq
72l+J8rT/1Z/+OvXn7q3Qf/SHrPf6Pej/0ly+1+s/sC1vfsX+r0zf7Ai/eJD
+CXir8M90//JiuKwf3pJEPm3oryD32rvrf9W/wtW0Pb/n3b+YYP+jXznX7j2
+P/5x+/+xY/8S6Rf+rX/x407f125S/4HEX+v/wWr/98apLzI3+qfrt/e+b3+
DedvxPYAbv/F6t+4/lWg238D9cflELSL/weRfqu/l8L/Q1n8B6st0vZv9U+Z
D5Ghv+uPhKaE1/bW7/Vn9P+X/qy4v3D9BXfrL0P+lVy/eapf2rv/15X/xOof
Auh/w4pEIP9WZOLWb/VHblJe0c6vrKTMheQ/RP4Hbf9efxkF+hurrT3u239x
+KPkd/9L/46CP+4n/4N2f6v/Hu/PUf8fWBFxxN+KRCD9Vn8WPXF3m7hLJu6S
iLvEXyKRfy/y9u/1d1b/BkXR1t8889+4/iMz/2Pi/C/9Pm//kdU/DfO3DYPC
/lZYNO4P4TB4ivBYwh/CIfEYDAmJ34YTthA4IopAwm1RuggIRSShSSQsmYQn
k0hbpC3y1g6FCGmbhEFt4/C7xJ1d4l5PRnEgpW2iPCiODJH2zLlNKeytX0bb
w0UpfgLlLez54o95cpsyDHmLRKIU/K9t51ddk/caO8qdO7tkyrxI2vueP0UJ
ia3d/9tsswv9e6O8pW3KLeQtIolMJpG3yJQhd/9gR9mhHFJO7v5tQyMxvxUK
gf5Tf5z5iyEKhUVg8Jt44gaBCMPj4QQcmkzA7pDhWDQCg0Lu/drEIWAEOIwE
g5Fhm2QYfAeBhNBYCIvbxuJJeMpz71JwYYgQHr+zd0giELeJpB3iNpkAEXB7
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
0Rxif+pmW+RiQ9Bsnf9opcdYhftosdN4vt1ikROiwgNV6raZZ09qCYf6U6DR
LPxwBnI8G7tYiFnM25xMhfXFzTUENSZZZvnq1f4MgI33Qmg0GYYmoPE7qG0I
v9eN/cUKgULBUGg0Ck1EUUoNs0QmjBKwS5QkQSJ2kQgIgyITKCdxvQgKTywB
Q5np4XDc6gJ2shfdUogqiEKF2uK8jQj2CjgrcYKt1I67xm7gd3K4HZRst5vq
sJ3qTEz0wCWF4POytlrboIkpaHEBMTY009s81VM121Mw35Ey2xQ+Ux+wXu6x
Ue232RgJ7/yJGCxETFQhZhvgC80rC03whbqd9RporZA8FUMe8d/qccLUGc/n
O87mO03nu07luU/leo3l+Axk+3Rl+vblBnakeTTEWNWF6XfEGIz9NJn8aTAS
r76ea4socUNW+8ObwpB9iYSpTPxUGnIoFtkVvlTt3ZX8vTRApyzsR29R0lp/
B2F2BrG6DGGJv9YLFHvgf7FC7VkLTREShYGjMOsYxDwaAaN8ikQRkSgCisIR
uYxBTlCuw2IwBBSSvLFKXpggDrXgqtIwqf5IH0uUnTbSUAqpJ0awUN51N9sJ
csaHe0NpgVCG31aqFz7aDR3ijYmPJlYW7wy2YiZbhhsym4oje2vjppripioD
p0s8lyt9kY1R6JZEXHcWcaiUPFlDnq0jLdQSF2sQC6Wo+Vzi4k/SXDhmxAXR
Yz5dptAQyVoSLFIeKtUYqzWU5bBcGbXZlLPaXDrXWD5XlTtRnNyV4lsbalYd
qNkSrtYVo9IdozAUKTcapzb903i52BnVHE7uS9ruTSS1RyEbgnBNwaga//EM
2wp/rVxvnfZ0X1hn0dLEAAmxDlHmaUq+/ckKTZn5KLMDCr1KAUXBtUlpdhAE
NIqyGNzAYRfRmGUEemOT0pwjERTfkVCbu+sL0OzQbnctuSCeEOWG9zAlWGvi
9GVwurJbFtqQuw0U4k2KpICKgbKittJC8NE+qCAvZFQwpiCF0FaIGMjrKQ2s
yXTsKfeZqguYKHaZzndYr/BEtsVhu1KIA7nbY6W7U+W706Xb0wXkqRz4YMxG
f8jmkB9i2B097Ijo/9GdLx3r9FSFE5iInQ40fl8eojdZFA1rqlpr7Zxv7oG3
9mA6u+AtVTPFMT0ptq3RGk3hkvUhgp3efD1+IiMRynPp5mvFbhvl3rBST3ix
+0axA77GA2r2R5Y5twSrpFjyZzrJNsVYNpWmTQ80IFfHkKuTf7H6ZS0KKPQs
CrNM6TQ3ERAcuYNEwdGYITS2FYkbgOM2NnE7m5TZkLJ4Rm1CazPQVPduWxEp
IxgXYLntoQvZq0PflXZMlHesdCE3SyjIZTfSazszdic7biczhpQcionxh8f7
b+aEw6viUG1Jo8XenbkOI9Ues/WeE6V2U0U2q9VumN5o/EA8aSRle+zn1kgK
fiAO1RW22RY4mmc6WfZjqdkV1u2NGwoijIYOlFpEu3CZiZy2lqX31mFOtleq
DfcYzsldrO1ab5ucKe+GNQ/ie3pQ7aWLFSF9qYYVfnzptoxluq+rTT92uIgM
R2gOJxj1xesPJRpMZ5iSaux3ah2gRpftGmeK60pcJKL0OYM12OO9jIpS3fqb
f66N1f3FCodCYVDoJRR6HIVZoEyFiA1ofZ24uD4+u1E4C0tcRJSso+YQGAiO
2sJgSZRGemdtcnuyCd+cikhxXPdSI7krQq7KkKPKjo0q3kad4KxD8jMlh1sR
skK2sqOg3PidnFh8Vig8y281x2c533e+LHCkwGOgyHW82nu6xmui2HW6yGOl
MnCt03Oj02Ojw22txXG+ymo0z7ArWb0lRrHcQ7AnSXe5zg/RFotuS8Z2ZIwU
hPz00HVXeuGu+sZdg91TSyjYUCXV3rYyJKojNa8vu3w4v3SypGCxKnO9LmG2
2KMhVDHFkiVT8UGh9qsGa542T5lKF/EMC+4cK+5qN9GVdD1krslWuQ1U64Ip
dxpJMilylo7W44wyE4y0Ecz0V25JtftPVoso9AhlEqQsZOCLO4vzm8OzzZ2z
YZ3zzsPLsYvrg/BNSqsAYbG7JAxqa32cMFGNaIxeSjSZcRNDuolvecpBnip4
Z5UNW4U1ewW4lxoqVBeb6UPODoPyE6DiJFJpJLzIdynXdS7DqSPdrj3bobvI
fajCd6zUfzIvYCEvYqM4aahcf7BUu79QpSNdqjaSL9f9Y4I5Y7jek1QT5vYo
HVhDDKola708fbUkqz85NsPJNtFCOM9Loy7RsTMntDcvbjA/dbI0f6Gmcrws
tysjvikhsD8zDNaQjm1Ln8jxqvDRKDdnqrVha3MXbnAVS9JhdeKlt/9yxV/4
froOc4uLyHKSAaHEnlTjjq5yn8u17U8wyjH/GqzxwkflUZwe8wZygtIXYOA4
DJyIQCA2UWNwzBwSi4FtQnAsaXK1parHorhDsmvWZQ7VtYQm7qAg1No2bI2y
lB7ZmCmYLPccDNcc9RCbtOfailJCeX9bc+Nd9/s27sU9EcK3kCC6lOGHLAwn
V8aRK2Nw5eHwksC5XPehnzYtma5tOR6NGa7dhYGd2YHNcb7D6fGzuZnD6ap5
QXzlceLtCRJjqfIBytcdRM4Fyt1uClFdynOBOjNXiuK6kwJnK7I2Guo2qts3
K1JxLfmYjmJERzGqtxzeWbTenINozZurSVlvyW5L8iz1+z6eE7xSFjuZEbBY
EN7uzl9myZ5mwBqlzWwnek+W4aDADSB6E9iznm9wFEPl2yILbTbyrWGljivF
9rN5VotJWh0e/EkKt7y5DsOQk0gEJcuxaDgJgUBtIqc20YsIDAUFAYHbHN8o
L+nTz2wTaJiwmEbUrGM3Uevk9WXc2sry6lrr+HB0Q75+STB3qSfjgO9nWKIM
PE4aHie2kSwwl/J5IZdjoZATOZy42R21XOu3UOK+UuKxUuw+kWHdEaXXXxQw
XB7ekulbm+xbHetfEexX7u3387tNa4xBW7pV88/vyKbA5TzbyZ9mzf4K8ynf
59Js51PsFpJd2/ws28OdUY255M5aeGXFamXxXFFmX3JoV4LXaI7/RKHvcL7r
aKFLe6LVRAGlhfDsjLNrj7RrD7Nv9LOu87bqSZKuCRKIt3xnJX5D4vVBvvtA
6dWpH9wPy+zEh8K1p2O0BgOkh0IUplMM5/J+zJfa75R8R6er97uzlerehiOn
kRRGcAxqk4yEY+GIJRhyHYZaQyCW4ISRUXhqwaBaUgt36ZDmyEbqOr5/HYZZ
h22swYam53Mbmm2S4nmD3O4G2Z2uDX49kMCzVqCIKFWYy+WYLHwzW/NmrPLF
/ID/xnAYrDt4ptS5L9G0K8KwJ8q0L9q8LvbHWFnEWEXSSFnGRHnRVEnpQEpm
rq3rcFowurN0oykXUfNzMNJuMsGh219vMsKkzl2uyVOh3U8j/4dEvqPMaKb9
bIHXQLJze3x0lr1FgJJwnK5wW6jhcJp5XYRijid/mZdgc6j8TI51b4xZnA5v
kDxXlKqotyhXiuv78iiB2iSpND+hAAvuUMtvuZ7qzeEmUxn2k4kmvb5Snc78
IwFS4zEaIyn6Y7nmUIE5VG6JT5EbdXmHQs4iEbC91d/mFnKTCN9EbMCRa4jZ
hc3mRWzJEDyodEQzpVU4r1e5Y9lzGpe+sDy2tNY1vZjb3OMYny7o4HzHVP+w
mQaIcblREMQwVyG3WiPf+fNdW+bj3rJ7naVXxuts5pucp8vtmyO10i0EIzS+
hKhyhKp/DdHjyXbXKgmybkwIHMhJnivNXasoGE2JhhVnIioLFvJ+FtuZjsf5
LmcEzic7l5h/6wzR6ghSafaTTzT8GK7FUOjGXejGlWD2ttL3e5qVQrQOb6G9
9FiKxWSGeWOwXJEbf3ekREvgt5kMo5YARfNPlzVfnPr+8Z7kjaMq7CDa5kV3
gepovc1oo/9ce/xCc+REqdtMpl1fmFqdHXeTDXuvh1Cnl0iLn3hfrOpalCZU
aLmTpTnt9RmDmkUiV+BwyjJ/G7mxhYCR1mG4JcqKdDVxCBbYu2ZfO26c36WV
36dRM6ffgbAc604fHYhs7bJKKeK3C7yhaU6tognUlYGl4clgJ/qhSrHJapHq
hGe1abdbis53VdHVpinnBguHmr51lrln/+2unfBDM647Gh8uuYi9tRFmMuN7
5a8lUuRl2hHrPJvjN5PhPhjouJgYNBrmES4vUGyr0x9pN5XiVGQjuZ7n0Rum
XWjDEyBzP1r9aWeISE+kSKnzx0pXySp36To/xZ5Y/dFU064wtVY/2eFI9Z5Q
qXoPgalknZE4rUTttyl6H4ttvwVKv1D+CoKs6KtS+TtKtcZaPdeHkuebgtqS
9edSzHoCZCssWUtNmMpN3+TpvCg2Zur05B/0U8TmmBNy9aeD+PF7rOZgm+ub
G1uo9W3kOrS2Tp7f6Kidc2qcNWiZ0WqatKwecSgZNiyekipb4h+rth1qNKmr
kYzOfmkbddw4EBh7HzBxPW30/ZyH2+3WCuHOMs7qjMfNxbeq82k7amgzYyWT
/Pj9jJgsBa/qM580/XDO+vMNe4475mwPNRguKzNcCNHg7oq1mM11nM+26o9U
7XJXW4+3rbWUDJF+7yD4vNxNrcRZMd1StDvCuCVYtcpbPEb7dbzmi64AkYl4
2b4IkTpX3iyz93G6DAUOX7sjVfvDVQaCFBfidKvtBStt+QZClGaStMdilddy
9OFFxr1hIjbf90cG3shPY64pEh9ps0GMRi03eLdFa8zF605FKg/5f+v3/Npu
97FI80G24o0q/actftrz6bar2VZj0WpE1AwKObWxuQzbIKHWdlBr0Ora9sxa
fdmoQcmgSPmQcP3U98Y538pp84IJnpyJ5xPVCmMNMi01/OkFL0NzzweVHA8o
vuyV88g35kl4LFN1mXh5Fmt94fO2qnuJ4SAt7mBSqHBlqlpDglbKdy6bT1f0
Hx2ze3M9hPeV2oMTRkyX7Hnu5vwQmEgz3ii1XM3V7wkWWkvXWY5RTFO66yN+
NVDteV+8YXOwVr6zTEOQ7tBP8+l860JHwRCZxxlar8st2Spt2ceTJQttXkUo
X8+3eD8eo7aQZDQTbbCaZNHvozEcqNnhLtHgwN3txzsQwt3gxlhkSW9vC0KD
zuWmv2mulpofssVNh6w1u/UkaE/Fqi8lqK3FyKyHiyz58XSbvypTvVmqeqM+
1LI/xXk4zXEgyZqEnkYhx9c3F2EbxD1Wq9Dq6u70alXZgEZe55e8nk9VU0ZN
K4E1C5YF41+yBumHa7mGG3haKznz8xlTi6/9bDiX2EAfUvqisPlTdglPRYlc
VjxLfdHrptJHThbA1oRWT/5MsO3bkmCJImeRaKUP/nwvIoSZf8rxWr65EC33
NtPoc5Htlzov7uE48Y189YWfMnNpoogM8aU4/ij1i8FatyK1n7aFKI+l/+gM
teiPM++LNUoz4A4XYagy4BtwlR/yVoZVKEykCPYEcYyGikyEKrS7SLW7qS4k
Oi1H/4Cn2LU5iORoPW9xYun0fFtpfbPB+baPI1VC8LXybLa+JqWVcRvMjPda
m+NQtgHFfvOxCpNenKM2r6dsmEYsGdtNnrSYPm1OsO/+6dyb5jSU6bq+uYOA
EdHrpLUVxDJ8Bg2NwLZK+qZsi3q0GudUmlaESyc/loyzNs7zNU7ylbSzNmTJ
9lTo99V/b6nWLsjhDYu47R96Oj7tWlnDw77Oh10lF1tTL43mPu2MvBGvuM/1
HXBQ2O+vfirJ6H6xI0dLqGZvrH2rn225lWGAsLw7L4+7wIdgmfeJ2qzFPziG
I8SxxVrTcda7dcEdAWrKz4/pslw2/3q1xElyMsV5xFVi0kkCFaFWJH818iNY
8hXApeq3Wnzucv4wEy3d4im6mGZbYSM9HGlV6qLSEGHWGWQIy3P4qfOxxIa9
K0putli/L1Mny52tLvztaBrvXLoQslST3GAOtZhAdUZLUcrTIRIrYbJTQVId
tp+HvfkLjV62232qs2AeCVAcC5ZfiFVDZJph4IjNlUXYysb6OmYZBltFLc2s
tLX1RGa3GjXNGPTBVJrmhAp72bLa3qY1vUysfVxXINhSLt1ep9zTrtHXq1LT
8DWr4EVGwZOy9rdDIx+nut4PlTCN5n8YTmSsML8RK3jGUZTWRfRQkMLFZEPG
TAvuVBPBVEPRLBOpEmvNcJlPbtz3Y2TfNDrJzMQbwnJN0aXG8z8NppL0wxRe
C1wC0vfpfnDcqbCRnI21QGWb9Tjwtlt9KlKmD/8IMr5daDX7PGgr0GrFUGf9
ttTm83qRw1SK1WaRf2+kVXeMXYYhX5Yha5D4/alEdVy942CaQuKPd0k2jOn2
twscnwxEf0WXaUGt1lCfw3aF3qC3wGKU3FqEHIVVpx37kBdfvsHzHmeOPg++
bl+5Lh+p/iDZyVhtMmYUDuveQEzBcdhNLBmGIc+vL3WP1SRVW5b1GbXNqtQO
8ydVvvDPvBhQcDa67kpzM0dFJUtWzquiUtaufsm+Mdn6Dr6yevaaDu7ePp7x
Dr7eYu7OdI6+FM5im+dOn2iD5W74y1wMV72ZYvAyRvmlGw+9Mzd9oOSzKFUG
m08nTV5SR3x70OOmsPHzx1qm2Wyq5nCyZke4up/iW9W3Fz6dBwoMF9PMRFdy
HAnldp2ufHmaT6uMGHNlrkfxnCjTYxrzECWmyXW4MNe4sC0VmM7nWc9k2LX6
GxTZKEYqvPEWvBIifmclUwdbZ10fwmX17WiU2b1sh0dOIocLrBkWM2WQJdrb
td9hmUqTocKL0bLLoVITAWLdDuyDXrzZuo/63blnw6V7QlU7AuXbA+V7wtXX
lkqWV0uWYG0LK6OLi9ObiJVF5Gj7dE50hU5SnWhGC0tq/aOgnDOuSfsC8g6k
tpyr6HyeU3s3OvNCXDZ9WRN7fZdIQRV3cg5zVtr7zPiX+TGvcsPel0Zz9ebL
lwZxG389bP/lrDP/eX/Za1HK96Kl7gbzXwvkvxwqftXn21kX7mPB3y5Xm39Z
jNFFZVltZpqtphtM/LQe++lS7qOdZCPy6RZgPAcUWK6GGn2qcRSajlAeChDv
9hTI13ocIXG2zO5di+cXUo7kgC/zaLQQvMxss9x+JsOqLUAzQZPd+9vteNWH
DS58C+kq05nKXQkCTnKnk+0e5zswqDGCBN1HMykSk/HikzFSPT5cU+EC44HC
035C4/4iA65c4wGCeQaPh7y4l2Lk+mOMuyMNuiMN+2PN+/riJ6bSJqby2luS
GqqC+voj2sfd01qk4urfR1TfDK0+GlF3MLSSJiAfhObtiy85GlV1MqXxSlL1
9fjieyklH6LTWBw9HxiYnbfSO2ehedxe76yb8bVo11ddJSqjdXp54ZyxEm9S
1VkS1BkDRC778pwM/3Y2RPSEG98+b34aH0HaeOVrtQ5sQyESo6Fyo0GKk6Ea
g3HmvbHWlb66uZ7KPI+PPD8NPtHTyL0/bMRCNxKlgCkz7woUDRI978J3MNeW
sdCeqcX17nAI81aFHtThsd3otZJnU+8t7S1xx1XgYo3LZ1Sx+XqBZn+C2GiO
dJD+7Uz31yGKl7VegUJr1qlEyXYvzi5PvmpLpmrLF73uHBPevNMhYpP+gqvx
snV276eDhRZjZXujHHujXUeS/Wdzooem82ZX82dXslq7XHNLxXLq2H+2vvQr
P5bccTCmGYQ1gqhWkNCxP65uf1DmPtcI4F18NKbhenjpDbvQ8wY2F5U0LwgL
H/7KCUS5aFTEjhkpnzJUOGSlfiw14NVwvdzKoCYy1YmQ7zEVrZum88Ln27Fg
GboAuSN2giBQdJ+XIAiSOp5j9rzFm7ePsgoLUJ8IMh7MMOtKMc90VbKW+fzw
GLh9EEi/uWon+VDoIYjSfdQU9DXf+kOg2KUkzfuNfrzlDp/i1Q8Oh7Fi8tSw
hWZjsZp9kerZluzBiveLrD+NxUohi0wnk6ULnd5nOjIa8R8ON3voyHXEU+hS
rSt3pe37dPVHnS68Xa4c+XoPO13Ypv355yMkpwIF0RmqwyEC8GT5xRjpgTj/
4aTw+dwMZE3FBrJvdbMGhsmfQXiXD36Jrj0TVnMgoh4ktoG4FhBaDfxLQFgl
dUz1Qb9MGotA4FV0KazqvmPcFXFNqg+fweuX4M1jwPwE8L/bryt9zU6f3lqH
zkINOBrt/xl5a6CDE1lmDLW5EaopMcIXrX01QPlksOrFIKWrsVrXw5WvJ2g+
L7fj7fST6/JVavNQa/fQrfBXqQ5WizQT4Hl06QIAVwCQ/XDdhP/2t8f7DT5S
UebTNGOGZLUnXf7CE8mq9e5C0Qp0I6Ffe3y4uwPEMsw+Fjnwx2i8qrDlmYhT
m46T6Q8S7w7gTzNl9JC7KPIY2EhcdGA7GiF7O8voRbzS7QSZ+z1OvPPhkg22
n9udmKf9+SaChLqdWGEpcvMJksRczdlIsZFk55Fkr6nM8OWSZNzqzOJYFWwt
F70b1rLAHVxCHZQPcptPRtWDqJrj3lknrcKp7GNAYD6Vf/4h67iDLlnXg0ue
2Ufc/aZ49M2b/S/v0r68Ss14GQg+ozKTovc1fxTqfCPE5ayjxT53N6rcIvrW
TJalOiVMi1l/kliYzmUjdqD/FvxgOW3Ifuw7x0V3wWfhUswBQi++vzmjdI9G
9s5+iasHNZ8fUX5+6OVBwH7jPO+jC6qf6D9dAd+uHzF+Q9vowVntyBkjf7fR
g6s7WqrCnb/dlX2nwnwkTGIoVinO6G2UzlvT98fS1d93eIl0enLX2X6ZiJJt
D5CIN2SUZ6Ax4z1v+Xq/N/+pYMmzmdov68y/DroKzIdJdLoKtti/nfDhplRi
pdGT2QihhUTJrQLtiRDB/gSNziittgi9tkjD1eUNGHpsA14wB3cqaWMNTz+b
0XSrtOdZ37jkz2JRY5eH0sYHdNxOeKScDc2jDsoGagF0ltHX3WJeuPq81dO4
zf4MvD4NuK+dFH68303lUYDJk2RvBl+bE27WJ80MQHTEwekGppbMd525HClu
1w2FaMQZADf9PgWmq8qM15UYb8o8vcR+GnCcAgKXaT4cA2+OA4ETwE/oZYHF
t0xzybZIt7pAx9ks/wZvZVd5xnBlhjjJWyMeQgU6DJt55lNp+t3RSm3un+pd
BYpM+QOkPyg+Oyr/EERovu0OVu0NVmlxE+lwE+z2Fm7yEqz0EslxFY40Y7f5
fMaF/Wwg76UYiVvFJu8mIqRX4mUH3di6HD8MeX6aCuIe8vk8FsQzGS7Y6/t5
JISrOUqoNfhrcxBPfeQ35NI0Dju0sJTWOqqXXv82tfJFaT9fVr3gIMxtcOVn
S3+cu78w9zdqcU3gnU6T0HxMzQE4hp8Mjnvg7vFUU5Ge/eXhVxcBy+X9yu8u
eKkx2srcdFK/Zq12zFDhmPhXYGdKVZx/sbr0cXnOG13Z/cx3gOBzKqFHJ3jp
6fhv3hB98EDk3h3W4wc/nwDid2jlX9IZcN7sd9MZ89cf8Ndp9tKZzgxaLU3A
1CXCSnxH47+3uElkqDwLFThv/Z6q2IJtJlF7PlmnxlUqVPmdLsMJibuHZJ6c
seR4nGklPRxtPhJu2OQo0WDN3+YkXGHDl2bKEW/CHWPKl6zOlKjwLEbsVjD/
+WjJazU/Pgz7cvc5fehzYRn34xgP4GhzYBry41xOkh4K5G5ze1/m/L7e81Nb
AE9bqBB6ZgyP6hsaDk6v/hJedDa75XbVxOeYwtc9m279qylDM7lxiTqSsmc1
zGjDCs6FVtCk19/OrX8Sk0pvaHSQgw0wPaRie3RYkPEIJ6VG+J5qfL4l8/4M
zxPw6jJ4chZofrviG0KTX3I2P/+ujCh4cBFwPj0i9Pz8x0u0ny9f5LlJ/+XC
FWa6Y6K3zjt+e1fkqjyd7zHrrTrnrz3qoz0S+r0vwmo0xWUwzmY132cz9cdk
sNqgt0Sy0qMwqdvZBu/nY7XmI1QzrBVtxRiF6QHreSD14pK94IesH4oLac6t
rqr11hItNqJtDmJFJtxxmqxZPyTaIi3zDFiyNF8nSt/14zru9YU2Q5W+x5l5
zIut2vhBtxNTv/uHhh/PhwO4NtOVenzY8wzvVNlz94UrLWR9X822XJ/sXF8t
a203jSu445sBEmtA3vDZoELqqj7O7HrBn5WS0Tk8XrGMAcnPglKv2AQAr0xa
z6SjrqHHTK1ppKX38XPQ8n04wMsIvj6g4rwHXp8HH64A9jvg3RXa56cOcTyg
09GnCY/Yn59Lb2dx4uNL6hdXweurR15dOMJ25dz7U8ef7QPcF046CLHm2Cq3
hpl2x5gvBsjtZNuvxlqSykJmU+1nMxzGEn4sZbjPR+hNBKksxmr3eItXWnMV
GH/q85WbDFOTfnud/8VZDvoDr86Cdxf3C989YS/8aijCbDLSdDRQu9NRvNqM
q8CQPd2QM9NCpMRNNUf7Va4WY5bq43DBMx5sIEaErtH8ybD7+1qz+602T9vs
X1R/f9Dt/nEmSqTdjbXC6nm7j8liQcRuVzHUWTwzmzQx797UJpxddSsoA/im
g9hWmtA6kFx6JL70YmjBrYiypxGlDNZBV3V+0Np50lmF0Bi5UTn4n4tIfB6X
zBwXyxUdzO3v/N5C/ZEszzEJ9tMSbGe5nx14fALcoaW9vR984aSyttmfmc4Q
HvCQn+3IpQPgMhWlE9gn+fqFr5p8mrl2loViiDKru/jjMiex5Wy7jUQVqMq9
w01uPMasM0RzMM5gNNa02UNtJFRzOFh5MlIVlm7S4iKcY8CaY8bZHaZ57zg4
RwVuHTpwmWb/VWrwig7IM1wq+iE/HW+2mGDS6SJaYvixw1NqOtWiM9I430m+
2oyl+jtLhcmbZJmrHh9B4BdQrHGpy+7ZbDD7gPvrNvunVWb3aqye19u+qbFh
Ggz82h3iu1JWAPV3Qd0do8vGvbOSjZ3vKtoeRWQdtw8F/qVUUQ00IYUgpPCA
c8IB14RT7vGXZA2BsDLwDL/n7HdLTY9GTAaISFNLKR/64Xw3Ip4jJII7IOCd
s8OTQC8OVytmTYkrr6+D9zfPfX168SEjMLI4lJrOGRfFIit45uEZ8JgO3KUB
UkyXvRQ/J+rxVDhKZn3ndBe+GSL9OE6BcSRYcKvcZvGn2VqB43yu7VKBPbrK
dyPPfS7NYjrZYCJGHZH9vc9XpsZJtD5AdbMpTJrr+SkacBSAw4DqMi3155t0
Es9Pe4m8jlV9PRKmPhul0ezA1xsgt5xrP5vj3J9k02j1sf7Hx1or5my120Fc
+yJ5QI3h9XHf91OBLN1OTzscnrTYP2+0ZSwyepylfafF5eN4WvBaVTq+owzX
Ujyw8LF1kqG8+X5B46PA5HMWHvs8ko8GZ5/wyT9tHQM0nICeEzBxPSCmBngk
qXQszti6vTf4fkNC7uSLd1QPmYC21b24XL6QJA79H1cEpcB7VsDyHhio3eZi
OvH0/EGGi1Q37wJ1LRATzZGfIeFpzSjHRSfx4SDrDcByCZh8OREi82g4TH0l
06LWRbjkO0ey3NNg4cMFRs9RRZbrxXZrFa6TuTZDKd8xtYG4ao/NErvlHLOu
AEnKszd7yy2VeUHzxf622jfO7j9NDU7TgmsnAO+zMxIMdMYsp22/nBgOVSAW
Wo0FSTc581c6CRU7ilX7qNSbv2uw+djpztVs9z5X5VKO/IlWq3vTQcw9Tk8a
LekbLG/VWz3ocHnf4cZWa/uOsvxB94TjeiIwXREb7WFdk2fqh89nV12OL77r
EnHZ1OG0c+hd96CHHj/vG/oeVLEDGvbUSmaAVwowf6F+xwq4ZK6LqJ3lFD9+
8iY4fhNYeH7unv7e2K/RPa+fXSNkbHNTSYUu56ewqdrDD/eoOJ9SXz9zTPQr
8HV611ZpXJEh5WJ02UT2qBjzMfVPR7Tf0UpfA5HSj0cj1abjVTbT1MZ9uSO+
HXJnBxtZumPJ2pt13tPFzrmu4tP59kORqgtZJlBXQGeI7EqWRaWLeHuMUUmw
ZpCj+Z1Lh55eP/ji/on7Vw+IvruuzXXTXeyOr8jF4RBJbI7BWqLycpJ6f5h8
iYNAsZNIux1bnxfvQrz8Yqxkhw1Dqcb5Sv1LDVa3ZoI/dDo8KNY9m6pwrMHm
5XqqIr7IAGqyhTajdqd90QPOi72OM/U8tXmPk7PP+eYeNU8BhjHANo7KI36/
U/hBc1ugIk2tr3hCgOvItdtUd1/tu/2Giv3TPp6P4PUDasYXdG/f346LD2nt
+1k5mNgwHV48bFg2remV9yGskD8wjufZI3CF7vj1fVSPrgAXs0u1JUzTA5wO
hjSq34CvHpPmxyMCNwHH6QNi10GyzrO5ZLVeP4nhQL1GQwZvFroUmedQhc9C
6veVPPOZbMOhVMOBlO+jqRaLuY7QcNJcnsVwunZLtPRIhlaKJr/+m2vBKl/1
2e4K3KdhvrL/K8XJ78/oMx+ocOSiWKvDVXwhVgOTqzcYIF5oyFli+qnQiKXT
XXgiUGrITaDJjLnS4G2fm3Cpw8cQvRcJxmxdoTKjcVqrRT7Q5E+o23cxT2A6
kxdWLrHToTxUydNS9iGHMgkm01rFAoc0Gpe0gxbBwOTHAWVlIMILVGUP8/Dt
u/4EPKF0CHxH7j6i/vDuwKMH4A0LkFd7Ul0dMTSc0T9RWjwdXDxrlzeh51f8
ObFGPC5bjP0L9eVT4PYRIP71mr/T/byfD4Y6mAsS7jsaUTsoX4wwYtN4f0bs
1kGdV1QJWvTFVq/jFO8WGfMNeymmK74zZ6DJ1X87GK48kaQ9lW7UFaVL6A0m
9oQtlrtuNvhPF9gh6rwXcqyWMi2LTaQMX10xZbkrc/+42ANabvrjks9o5Z8e
VHpG4yt2rcWFvc+Lq976XZ8332iwbKU592CA3IC/zFqyHibdEBarOu4p1PCd
pdnmS4EZq7vc1XQbtgpvvp44ZWyT/0a9L6khqj/qbY37nRLHK5VuNwbLFQdr
FaqKOALCzzmEUAfnnvdJP6fhAMyMD6oqADnxg3ra5yXl6BhY9zGyH3z15TSv
0AMpmYdvPx78yAu+OzFUNzo3NPs2dSaVjpe3rWdWTdrktgs2jSlUdUhb2V/4
zAGCHRS7W316mnVb6vgqCplK0l6Za1LLfaJyVnxhxHVZ98Ml26+XCn6wtPmL
Jmo88RagLzLn7/RX9RK+7C9xuTdMucrlW3eYcn+07lqxObbObSBerzVMYzDR
ZD3fudlZOkuF+afWF13GU+K393+9tI/vFu3rk7TCD4/zXAHCV4AVK12S4vWG
Hy/GAvgGfMQ63YRHAsUH/KX6fMSmwxQWwuRWw2SXQ6S6HTmarNlCRS/ZfztQ
G8KX48nRliRH7nEv9uYrc5AttGXItbpfZP+w3O3lZpvHUotze7FGfCRTQPi1
+OwHwQm3dL/v01KmOApoyB021Dyvo3lORv4cp+DxR6+BgMhlfqHzzJ+ohaUP
+Ud9ah926ZuN6p5Lq+mPrur2CUwQDUn+XNKqUj+kUzX4La7s1ViP38ycZ142
X3UlZ3jwrbyUV9ZGZ6Q/H9b6esJM8JK1wGNb3kcxGmz1XrKNXvxltuyWAuer
A6RyHdh95W63BqvnWvHVuAkORStTXLGWbNjtIVNrKzIcqtPrrxEm+tT85TFL
litqz+lEb+0Xoj/MQ3/oLhVQen9N+8Nl8490ZkyHjZ+AePELs6FS06EqPR7f
NlOVhwIk25x4mm3Y603fDjh8WQmVGPPl73Ll8BKg9pA5XB3EF2f7tjSUb6ZE
20/7qpvUtVg9hnKPT7P5SuhGE2g4ca3Ouz3bIDuePybyZXTUg0CfG9bGdGqi
QJNiKqljGmKHzbTO+vk9+eF+R0AVvOUCd14AxndAWuaCj9/n0gaDnoWgxkmP
aVRsWbuTsQO7rc+buEK2+KqnKe1X3fIPpqTouAeyCovus3e6pqhAEx/+2NPp
pggbUOU5ZCNzNdroa7a1QoKeQIT6u2IH1r4oaYEXBw0F7wToMpnxni52FW8N
VKh142r35ev1Fx8PVuhyFG2yFBz0Us3W5rJhvWnCdFmZ/qjGkzMydw5L3qET
pj/04gDwkWcq+MFT48BlwXRI7SoI4DhcpHW3yZp1xF9sPkpmJVG930uw2epj
td7LAVu2jQiJ6SCBPu8vCbpXvZXOBWrcCTC6leLGmOPxMdTiQYbn+85Yzclc
A2KXEzTpS24KHU4xrQyRyQvmi/V65W9908voopvGORvJM1biZ81Ej0kxA41v
h6JCnkemvbONvC5jDp5xAUbWA2ws10QFHqtqPvSNZA+Mf2jpe/yr7IFDF8CF
u4BV6JioLrW6CzW/Ebh+DzBxUd15CgTEjj1/Cfw875cXc4W40Au+o9LmO+Mo
9TZUTchPjsNTisFf8YElzxV62n0PjgJ9vvuWgpcyLdlGYhXqndgandgr7Jlr
rFl7HAQH7CUGHBX9OR/rPDir++S6wYujhm9Oyt6n4rsIOC6Ax/uAjwJzo7di
f4BkhuqLUJ5TWXLnaoxulOrRVxi/6nMXGfAVrDRlKtJ4VKb2oP/Hh+UggVHf
Lz0+rOlWD+wlDhpwgpAfF2Nd7rioXohzf91ZIotpDx7MNGuMlW9NltzItugL
kmzy4Gzw+lRg9zLB8Hac7s14bXp/8dPOQkecJKiU3gG598DL6ExCyPPcnNfh
efv0XA8q6p//ynWbk+3Jo2fUvGInNPSAtSeVujHtq49HTlymobsK3gkAXQ9g
HAgYPgE959tfxc8xsR08TAeEBUBQ4K0gVzqeNzQCjNRMJ8AzAN4foVJiOGfG
fZntLLgEwA0ApF9dcpV8ECJ/p9L6Q6nx8zZ7rlbnvf9VmfSRGXVXbPkhbf3m
utrdM4q3zuky7Df5SKf7gU7kNg33VZpH1MD224saD9k+H4mZUPEe+7fd1i9n
A760Wr8o1n086ifdZMeSLHs1RuBUmsi5eu2H/XZvOx1f9/p9TLe856W030IU
2Bud1Zank/uyz82YPtqTMclF2FTyscrXExZKRzZ/Ki+E8y0GsS4GfhhyZWi3
fd5q97LJ5lmU5Ck/sQMJBrTeskds+UCc7v6mkAf4rq9D05fr+14W1b7x9n5j
/p3j9lPqi/domJiBlOI+z8Az4Un0sroHHrCBL6q0JtGn7bKvOgTfiq/88En4
0PHLAFDTPXsClJXpDNWAOCcNLwN4cQS8oD7+AACmQ0CZiUbkIfhy+9C7s/ve
0gGDD2eMXtGEiZzPUrrVac0Ji1PvcxYe9VUuMxOMUmKVf3Jc4cUFqcfnRM4C
g9fnPEVfmH++o/XmEtelAwEKD6YSpGA/DefDhKZ92EZdvnRas/c5c8yHi8MS
VRdjZUr1nyaKnE0RPFUif7VO/1695aOBILZyF6YcR3o/g0u8XIfOnwNv7wAN
keMynODtfdprx8GL20BV6uBWJMNu+MvdMEZ8yKuNwOeLPo+WXJ+t2b+p1Dpc
qnymUPlcouyBEDGQr7d/PvLOdjHzRPOTtVn2uSWB9iGh5CwuOfkr9FfAWTog
KQ3UtA6HxJ7Lrjnlm3bMyP+cgs2lzwonueVpkkrFErLFtHTvnjsLbtwA3F+o
v+vQKHwFws+B1OsrRp+ZLbk/6H66pMYIDD8Dx09Xv388o8dyTPk5MHh+wObF
IYfHVLGc52GhKrPBCk0uQuGKLw2Zzym/viD97tpXhnOqDMcknx40Y7thyHxG
7DYQuAJsBG5OJ+pM+gmtRQp3Or8a82IpVqFv+/EZFqkElVh2+bM3272us2TM
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
Jem5pzjvdGGgZ8OzXeLM0/KPx9pSt7QkrGMmbGQlbOO92MmI2df0eC8n6eKX
4K0F/isC1w54vH1EhNc3QUtGRm+Y8nLL1DuLBj1eM7U++KDj8+PuuujOpvhO
bjqhzCMk2cL8u5/D99RFHy08vyDKa0yU19i4zWPzz82o9JudeWxCpd88adTm
xqAVFYEry+9vrnhxxFCXoqQkqWrTRB8eMFNvstMDVUWPDZvHQF4jZX8MFa4a
Il49Qu49Wr1lrHbbONnavkyvvtxtw4S7xvL2Tpccng+dXIX6rBM9nse4+3PJ
+akJR8eFn/j2waV5d66s8Du/6sbNJWcvLDxxcsbJQxOPrh95fnWfZJ+pgqT9
mqTlFVcn5p8eV+47qy1yLSdmgyLjkDrnRHPsLnLM9tq47QVP/ki/+2uC3/Tk
oJl17zfhRU+UWQG8jDPk+I15IbM/PfyxNmZ5U7xXY/h6Rc4FWfrp/NsrMi7+
Ro/YVey/LuvEktRTC6O2zEjdv+Tlul9OjgJ2DQCi1n1nyLqhzQuBK6JsrPcY
LcVIS+5ue6epiGRk3eQlnM06syDKe0zCljG5x7/9cGh0xtZ+VacmVV+dQbmz
UBizqzTAg/RiH1b9AmMk8wufR+77KeHUovzbmxuiTxpue6ABqyC/lbD/H7oA
TzxwrSnA0+TvYbq5Un5lif7OOvzBRm3oNiTmKBp1Cn7uw0/yor30qHu5ui5l
B/nD6YbS6011Qa300DrK3ZIvvnkfjhek7SiIXZ778Mei+z9XhS+pvj+xLHBU
9tk+pNtTmiLmN0WvqIteISs4WBW7Livkt4SgaZF+48N8xwWdG3nrwpC4p99j
RaHU6KNlId6kxx5VT5Y0vVzJTFrb8HwZLco7P3Bx+a0VJQGrmNEH2p4dYDw/
Bqb5l8ccCt323bVZgy993fvS0P5nBve58k3fTz6LxZn+H+9u4X0I6m5Nt9TH
W5re6JkZsOCDqvgxK/FCvu/S7BMz3+4Z/3wlkOYFVB0c/nHvkLorMy1pp1L2
flP0wKPu6WFWjl/a1Y1Vj3bzky8ZSh7ZKiNksXvlL/arXx1GX5/Ak05b4k+a
og8ZIvYY08+KYw4Zki8YU85LUk4Lsq/QUy6S4y42J6yoSVxO/rhVRLkGtYUr
meFCziOh4jGP84TDCORR/US11/glR5vTN36JXfjxyeSE0wAl5rvKkJH1kZPK
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
    "], {{0, 100}, {100, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> Automatic, Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{100, 100},
  PlotRange->{{0, 100}, {0, 100}}]], "Output",
 CellChangeTimes->{3.570261164471142*^9, 3.571216835766507*^9, 
  3.5712168861204853`*^9, 3.5712169530428667`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sko", "[", 
    RowBox[{"image_", ",", "retoredImage_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "data", ",", " ", "restoredData", ",", " ", "result", ",", "f"}], "}"}],
      ",", " ", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", " ", "=", " ", 
        RowBox[{
         RowBox[{"getImageData", "[", "image", "]"}], " ", "//", " ", 
         "getRGB"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"restoredData", " ", "=", " ", 
        RowBox[{
         RowBox[{"getImageData", "[", "restoredImage", "]"}], " ", "//", " ", 
         "getRGB"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"data", ",", " ", "restoredData"}], "}"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "Images", " ", "x", " ", "Colors", " ", "x", " ", "Pixels", " ", "x", 
         " ", "Pixels"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"result", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "2", "}"}], ",", 
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"Color", " ", "x", " ", "Images", " ", "x", " ", "Pixels"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"result", ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"{", "3", "}"}], ",", 
            RowBox[{"{", "2", "}"}]}], "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"Color", " ", "x", " ", "Pixel", " ", "x", " ", "Images"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"{", 
          RowBox[{"o_", ",", " ", "r_"}], "}"}], "]"}], " ", ":=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"o", "-", "r"}], ")"}], "^", "2"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{"f", ",", "result", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"Color", " ", "x", " ", "Pixel", " ", "diff"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            FormBox[
             SqrtBox[
              FractionBox[
               RowBox[{"Plus", "@@", "#1"}], 
               RowBox[{"Length", "[", "#1", "]"}]]],
             TraditionalForm], ")"}], "&"}], " ", ",", "result", ",", " ", 
          RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "result"}], "\[IndentingNewLine]", ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"sko", "[", 
     RowBox[{"image", ",", "restoredImage"}], "]"}], " ", "//", " ", "Mean"}],
    " ", "//", " ", "N"}]}]}], "Input",
 CellChangeTimes->{{3.570261564714141*^9, 3.570261806161449*^9}, {
   3.5702618369482603`*^9, 3.570261887750675*^9}, {3.570261981391659*^9, 
   3.570262163811905*^9}, {3.570262311384655*^9, 3.5702625031766577`*^9}, {
   3.5711235733902884`*^9, 3.5711236183462677`*^9}, {3.571161739369919*^9, 
   3.5711620781587257`*^9}, {3.571162131718713*^9, 3.571162331947544*^9}, {
   3.5711629698244457`*^9, 3.571162972206283*^9}, {3.5711630379586678`*^9, 
   3.571163090358296*^9}, {3.571164325980618*^9, 3.571164350811921*^9}, {
   3.571164381738772*^9, 3.5711643848269987`*^9}, 3.571201413478427*^9, {
   3.571201471614848*^9, 3.57120147355838*^9}, {3.571201905624908*^9, 
   3.571201909349317*^9}, {3.571202141156931*^9, 3.571202143658491*^9}, 
   3.571202237432797*^9, {3.5712169021407843`*^9, 3.571216921152851*^9}}],

Cell[BoxData["3.412461050616508`"], "Output",
 CellChangeTimes->{{3.571216910671983*^9, 3.571216922123808*^9}, 
   3.571216960711569*^9, 3.5712170416013527`*^9, 3.5712170850449333`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h", " ", "=", " ", 
  RowBox[{"20", " ", 
   RowBox[{"Log10", "[", 
    FractionBox["255", "\[Delta]"], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.571163098820401*^9, 3.571163165151606*^9}}],

Cell[BoxData["37.46944954674379`"], "Output",
 CellChangeTimes->{
  3.571163169567275*^9, 3.5711641489015303`*^9, {3.5711646819739723`*^9, 
   3.571164696862783*^9}, 3.571216925009635*^9}]
}, Open  ]]
},
WindowSize->{1680, 918},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 283, 6, 27, "Input"],
Cell[686, 21, 258, 5, 27, "Input"],
Cell[947, 28, 365, 8, 27, "Input"],
Cell[1315, 38, 253, 6, 27, "Input"],
Cell[1571, 46, 412, 11, 27, "Input"],
Cell[1986, 59, 384, 11, 27, "Input"],
Cell[2373, 72, 554, 14, 27, "Input"],
Cell[2930, 88, 574, 14, 27, "Input"],
Cell[3507, 104, 3886, 91, 223, "Input"],
Cell[7396, 197, 416, 8, 27, "Input"],
Cell[7815, 207, 248, 6, 27, "Input"],
Cell[8066, 215, 726, 15, 141, "Input"],
Cell[8795, 232, 970, 25, 27, "Input"],
Cell[9768, 259, 769, 22, 27, "Input"],
Cell[10540, 283, 629, 14, 27, "Input"],
Cell[11172, 299, 543, 14, 27, "Input"],
Cell[11718, 315, 1605, 41, 163, "Input"],
Cell[13326, 358, 1401, 36, 118, "Input"],
Cell[14730, 396, 854, 22, 103, "Input"],
Cell[15587, 420, 1304, 30, 103, "Input"],
Cell[16894, 452, 1506, 37, 167, "Input"],
Cell[18403, 491, 1933, 52, 148, "Input"],
Cell[20339, 545, 1406, 40, 88, "Input"],
Cell[21748, 587, 2172, 43, 193, "Input"],
Cell[23923, 632, 1610, 37, 163, "Input"],
Cell[25536, 671, 3525, 61, 133, "Input"],
Cell[29064, 734, 576, 13, 85, "Input"],
Cell[29643, 749, 2091, 42, 145, "Input"],
Cell[31737, 793, 3077, 74, 193, "Input"],
Cell[CellGroupData[{
Cell[34839, 871, 301, 6, 27, "Input"],
Cell[35143, 879, 423, 9, 39, "Output"]
}, Open  ]],
Cell[35581, 891, 3112, 60, 130, "Input"],
Cell[38696, 953, 366, 9, 27, "Input"],
Cell[CellGroupData[{
Cell[39087, 966, 69, 1, 39, "Input"],
Cell[39159, 969, 4260, 123, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43456, 1097, 226, 4, 39, "Input"],
Cell[43685, 1103, 36254, 599, 127, "Output"]
}, Open  ]],
Cell[79954, 1705, 587, 10, 27, "Input"],
Cell[80544, 1717, 348, 9, 43, "Input"],
Cell[CellGroupData[{
Cell[80917, 1730, 137, 2, 39, "Input"],
Cell[81057, 1734, 120, 2, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81214, 1741, 133, 2, 39, "Input"],
Cell[81350, 1745, 122, 2, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81509, 1752, 97, 1, 39, "Input"],
Cell[81609, 1755, 11387, 292, 179, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93033, 2052, 925, 13, 55, "Input"],
Cell[93961, 2067, 866, 12, 39, "Output"],
Cell[94830, 2081, 864, 12, 39, "Output"]
}, Open  ]],
Cell[95709, 2096, 94, 1, 27, "Input"],
Cell[CellGroupData[{
Cell[95828, 2101, 306, 6, 39, "Input"],
Cell[96137, 2109, 36095, 596, 127, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132269, 2710, 357, 6, 70, "Input"],
Cell[132629, 2718, 35276, 583, 127, "Output"],
Cell[167908, 3303, 17594, 293, 127, "Output"],
Cell[185505, 3598, 36071, 596, 127, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221613, 4199, 4160, 96, 368, "Input"],
Cell[225776, 4297, 185, 2, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225998, 4304, 214, 5, 59, "Input"],
Cell[226215, 4311, 188, 3, 39, "Output"]
}, Open  ]]
}
]
*)

