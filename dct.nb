(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    211351,       4562]
NotebookOptionsPosition[    207723,       4441]
NotebookOutlinePosition[    208154,       4458]
CellTagsIndexPosition[    208111,       4455]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5668263921959352`*^9, 3.566826398217498*^9}}],

Cell[CellGroupData[{

Cell["Image compression", "Title",
 CellChangeTimes->{{3.5607098847574997`*^9, 3.560709888456712*^9}}],

Cell[CellGroupData[{

Cell["Converting image into byte data", "Section",
 CellChangeTimes->{{3.560709936582464*^9, 3.560709948386139*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imageData", " ", "=", " ", 
  RowBox[{"ImageData", "[", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJyEvId7XNd17k2Qknvi6zi2c+M4zxfnJvFNc5NJADOn7HLaVAw6MANgBtMH
ZTp67xj0XljE3nunSFVKpBolkWKn2Lsk2/f+B9/aA0mWLd8Ez+LRoAr4zVrv
etfe+8w/VIZzfcuXLVsW/wZccl31KBZzNeY9A+/gxoS3cgU8cMA/D/xjj28O
4Wv94tUBcmNIvp6CK705It8ckW6PyR8NkyuD4pUUvtDLX+xH53vgSq4OKVdS
8qUB6WK/eGlQgM9eTuFLQ+TDQfxhipwfIO/3IXh8MUUuDdErIzJclwI+8uEg
uTgoXRikH/STd3vxW934jU58ugOd7sRv9NA3esjpbvJyBz7RLB5M8nui+t0x
fk8c744Lu+Pc7ji/KynsSKAtUWFbkm6O4Y0xsqYWz9eQ6RAa9eOUj/Z7pS63
0uaU6+04XorCxWJVIe8vQJ4CWpEnO/LUUpuaa1FUg0wUVU8Mz/HaL7Pl7/3w
pxkZX1+esZxR+y/f7g7Tm4PkRkoCRAAK4taoDKDuTii3x6Qbw/jaELo2hK8P
0xsj0kcj2q0x40cjhmspIIYvDaCLn2P5cIB+mAIO0gf9mDH5nNW1MfXqqLLE
6tKQxFgNpFn14Ld7yZvdFHC91o5Od+GzfdLr3fTldny8iT+Y1O+N6fYyVkug
uN0JYCXurMPb4vgrrPB4AA/76YCX9vlUwNVSTuocKG4XAVegQPAWEFe+VJ6v
OvK0whzFZJAVVRMlc6Zoek5n+Id/+fXyFd/KyHgm479jdS9F7qTozRS9NSzd
HlFuj8r3J7UHkyrE3THp1hi9OUpujkq3x5V7k9q9KdO9SdO9KcutUcP1Eenq
kHSZpQrgopdS8oeD0vkBCql1aZBeGiRXh6VrwGpYhgdXh+XrI8q1EeVySj7f
TyDe75PO9clvd0tnu8hpYNWOzrLUoq924pMtwtEG7lAdtz/B7Y3r9ya4PQl+
T1LYXSdCXm1L4K0JsiVONkTRmjCwwrPVeCqEx4J02C8N+ORej9zllpoqUJ1D
jJWK1UUipJY7nzjzpYp8pdSm5Jpko6ZJioUnOcDqFyvxt/7iBxkZX1u27L/J
rNsDOM2K3B6R7k9oD6cMj6aND6fggXpvXLozSm6PknsTysNpw4Mp7d6EemtE
ugVIRxRIv49GpGtD5GqKXGEB3BixyywoMASSEMBqKYAVvHtpgF6EGJQvDMgf
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
pJ+q5qer+JkqfnWtuCFGtsRZl9wSFjbV8s9H0EINHvPqR4J4MCCDrQrYMkNF
YqBICBRn1ZRkxu2Z7ZXccIj5qyGPOOzF3ZW0plT2FRk8xXmO/Jw8q2w2iQaD
aDSkWckI8iqbsfr7r7JKH1OE5FHYYgI7IqWkzTYEOyt1KSVdSMnv98uA6K0u
6UwHfbNLequHvtlN3umS2aQ8BIOe9norfbFBOpGUj9dJL4BYNcv7GsRDTWSJ
1TFWbuCp8IlWCibhRJt6tEU+2CzvrgcrRbYnKWTUujC/OiKsDYNG0ecjdHUt
SS/f6UdC/ES1MBXip0PCfA1aFwGeZBMkWFhMFyCerRKH3NlDfnEgQGHMiRTz
VYWCv4D3FmSFSrKjdn2sBHCJfV7S70Z9lUJ3JaktpYFik2+JlUUxGUXNIBqM
RFERVhirLN2fZ/V+D/pwUL7AjsVKFwflpQOfV2DmHYIBkH44KL03ALlEznTg
M53SmU7mKs/2yG/2Su/0wKQMY4t6bkB7uRmfqJcOxaVDSXqsCfgoB5rIoc8C
L+XVkaa0ajXRY83SoUZIKnCehJ2STdD1MbQ6zC+E+cWwuDqCV4fJXDWaCokj
QWG4ShyvRpNV4nSVOFfDDtOuq0Ub2NkPcQMUYA2eCAqD7qwhvwC11uuXW91y
uID3WTPduVm+Iq7WgWqKdbFSXVM53+FCXZWozYmidrmq1OIrKXDk5+blGIwm
pBoEDXy7hiWNsBrUkR/+6Cdf1au3O4RzfdK7ffC3s3PU7/XiCwyaBLMMWKn3
+lD6ZDU500nPdilvdmtnupU3uuU3eqS3eqU3e/FbA+iNPnS8iTtUjw7U0QMN
5GAzPtRCWTQRKEa4pllR6IPsClnXKO1N4l2QUQmWURviGNrc6iheHceLUTRX
LQIocJgT1XgkhIeq8EgVGg+hqSo0UwWfRWtq0fow3lCL1lXzCzXSRAgP+7lx
UO9qOhigvV65oVQIWFY6rVmuXL0nn/MX6IMF2VUFmfVlYruXgquPlyvVpRZv
UX5Zfl6+zWgyE4MJGUxEMRLJQJf06s+yOtuF3u6hb3WTt4BVL30foo98kD5W
/UEffqdHeLMHne3Gr3eQ0+30tQ7p1XbyWid5vZu80Sme6RHO9Amne4WT7cKR
FrK3Ae1uEHY3igeaGK7DTQzXkWYGakmvXmhXgNXBBrIrDu0MbY5hEBxIlTUR
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
      "], {{0, 92}, {100, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag[
     "Byte", ColorSpace -> "RGB", ImageSize -> All, Interleaving -> True],
     Selectable->False],
    BaseStyle->"ImageGraphics",
    ImageSize->Magnification[1],
    ImageSizeRaw->{100, 92},
    PlotRange->{{0, 100}, {0, 92}}], "]"}]}]], "Input",
 CellChangeTimes->{{3.564582454123276*^9, 3.5645824559393797`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{299., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "0.8666666666666667`", ",", "0.5450980392156862`", ",", 
               "0.25882352941176473`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "0.8509803921568627`", ",", "0.5294117647058824`", ",", 
               "0.25098039215686274`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "0.8470588235294118`", ",", "0.5333333333333333`", ",", 
               "0.2627450980392157`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "0.8588235294117647`", ",", "0.5450980392156862`", ",", 
               "0.27450980392156865`"}], "}"}], ",", 
             RowBox[{"\[LeftSkeleton]", "92", "\[RightSkeleton]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"\[LeftSkeleton]", "90", "\[RightSkeleton]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], 
             ",", 
             RowBox[{"\[LeftSkeleton]", "98", "\[RightSkeleton]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], "}"}]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{54., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 734, 23381088568723048840, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{60., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 734, 23381088568723048840, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{92., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 734, 23381088568723048840, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{78., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[734]]], "Output",
 CellChangeTimes->{
  3.5657058720059443`*^9, {3.567266062319189*^9, 3.567266090228991*^9}, 
   3.567266322572303*^9, 3.5672664392387953`*^9, 3.5672665275232*^9, 
   3.5676653236775107`*^9, 3.567667122133376*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Partition to 8x8 matrix", "Section",
 CellChangeTimes->{{3.560709967863253*^9, 3.5607099915126057`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{"imageData", ",", " ", 
    RowBox[{"{", 
     RowBox[{"8", ",", "8", ",", "3"}], "}"}], ",", "8", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"-", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.560530738041638*^9, 3.560530740127757*^9}, {
   3.5605307754827795`*^9, 3.560530790209622*^9}, {3.5605309576962013`*^9, 
   3.560530986489848*^9}, {3.5605311113559904`*^9, 3.5605311131930957`*^9}, {
   3.5605311652780743`*^9, 3.5605312054163704`*^9}, {3.560531360224225*^9, 
   3.5605313684356947`*^9}, {3.5605314900336494`*^9, 
   3.5605315054465313`*^9}, {3.560531817106357*^9, 3.560531827242937*^9}, {
   3.5607086976686025`*^9, 3.560708710935361*^9}, {3.560709114124422*^9, 
   3.560709119256716*^9}, 3.5645824615246997`*^9, {3.564583678481305*^9, 
   3.5645836931831465`*^9}, {3.5645853050453396`*^9, 3.564585333686978*^9}, {
   3.5645853814327087`*^9, 3.5645855252079325`*^9}, {3.564585556081698*^9, 
   3.5645855740627265`*^9}, {3.564585650022071*^9, 3.56458565174317*^9}, {
   3.5645856918354626`*^9, 3.5645857065733056`*^9}, 3.5645859525753765`*^9, {
   3.56570576252048*^9, 3.565705763560102*^9}, {3.56570646028367*^9, 
   3.565706461099111*^9}, {3.5657088854360733`*^9, 3.565708890857461*^9}, {
   3.56570965344561*^9, 3.5657096576385193`*^9}, {3.565709702040794*^9, 
   3.565709730815322*^9}, {3.565709771457651*^9, 3.5657097729581413`*^9}, {
   3.5657108293819227`*^9, 3.565710834949196*^9}, {3.5657108721402187`*^9, 
   3.565710872418548*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{299., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{54., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 735, 23381088568723048840, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{60., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 735, 23381088568723048840, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{92., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 735, 23381088568723048840, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{78., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[735]]], "Output",
 CellChangeTimes->{
  3.565705648370511*^9, 3.565705768366023*^9, 3.565706062808899*^9, {
   3.565706463518271*^9, 3.565706479259259*^9}, 3.5657096595809793`*^9, {
   3.56570970448799*^9, 3.565709743791442*^9}, 3.565709774239675*^9, 
   3.565710836599921*^9, {3.565710867114678*^9, 3.5657108741116533`*^9}, {
   3.5672660625859003`*^9, 3.567266090503723*^9}, 3.5672663228473663`*^9, 
   3.5672664395013123`*^9, 3.567266527787847*^9, 3.567665323888523*^9, 
   3.5676671223473887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Dimensions", "[", "matrix", "]"}], "\[IndentingNewLine]", 
   RowBox[{"imageSize", " ", "=", " ", 
    RowBox[{"Dimensions", "[", "imageData", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.565708620728817*^9, 3.565708657587162*^9}, {
  3.565709766918583*^9, 3.565709784013163*^9}, {3.565710951907824*^9, 
  3.565710957637189*^9}, {3.5657114387255898`*^9, 3.565711446878005*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12", ",", "13", ",", "1", ",", "8", ",", "8", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.5657097856492023`*^9, 3.5657108409079514`*^9, 3.5657108769275427`*^9, 
   3.565710958400193*^9, 3.5657116311356077`*^9, {3.567266062671164*^9, 
   3.567266090593656*^9}, 3.567266322941483*^9, 3.567266439565868*^9, 
   3.56726652787353*^9, 3.567665323905524*^9, 3.56766712236439*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"92", ",", "100", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.5657097856492023`*^9, 3.5657108409079514`*^9, 3.5657108769275427`*^9, 
   3.565710958400193*^9, 3.5657116311356077`*^9, {3.567266062671164*^9, 
   3.567266090593656*^9}, 3.567266322941483*^9, 3.567266439565868*^9, 
   3.56726652787353*^9, 3.567665323905524*^9, 3.56766712236639*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"92", ",", "100", ",", "3"}], "}"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.565760966915346*^9, 3.56576096696491*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"92", ",", "100", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{{3.5672660627102947`*^9, 3.567266090634884*^9}, 
   3.5672663229842157`*^9, 3.5672664396233587`*^9, 3.5672665279151487`*^9, 
   3.5676653239225245`*^9, 3.5676671223813906`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Extracting RGB", "Section",
 CellChangeTimes->{{3.560709967863253*^9, 3.5607099915126057`*^9}, {
  3.565761013659872*^9, 3.56576101832649*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rgbMatrix", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"matrix", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "6", "}"}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", "4", "}"}], ",", 
      RowBox[{"{", "5", "}"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "rgbMatrix"}], "\[IndentingNewLine]", 
 RowBox[{"red", " ", "=", " ", 
  RowBox[{"Part", "[", 
   RowBox[{"rgbMatrix", ",", " ", "1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"green", " ", "=", 
  RowBox[{"Part", "[", 
   RowBox[{"rgbMatrix", ",", " ", "2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"blue", " ", "=", " ", 
  RowBox[{"Part", "[", 
   RowBox[{"rgbMatrix", ",", "3"}], "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.565761067440689*^9, 3.565761264646283*^9}, {
   3.565761374750718*^9, 3.565761383737364*^9}, {3.565761426516384*^9, 
   3.565761487812832*^9}, {3.565761560734252*^9, 3.565761607062025*^9}, {
   3.565761653515071*^9, 3.565761686204082*^9}, {3.5657617228175097`*^9, 
   3.5657617878969383`*^9}, {3.565761890437647*^9, 3.5657619413623466`*^9}, {
   3.5657619811663027`*^9, 3.5657620615119658`*^9}, {3.5657621466968822`*^9, 
   3.565762146806437*^9}, {3.565762232596026*^9, 3.56576228759746*^9}, {
   3.565762327702773*^9, 3.5657625289281807`*^9}, {3.565762684288289*^9, 
   3.565762749525605*^9}, {3.5657630325938253`*^9, 3.565763048081107*^9}, {
   3.5657630970659437`*^9, 3.565763164124938*^9}, 3.56576325627942*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{299., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], 
             ",", 
             RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "0.4666666666666667`", ",", "0.49411764705882355`", ",", 
                    "0.5058823529411764`", ",", "0.4980392156862745`", ",", 
                    "0.4823529411764706`", ",", "0.4588235294117647`", ",", 
                    "0.4745098039215686`", ",", "0.49411764705882355`"}], 
                   "}"}], ",", 
                  RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "}"}], "}"}], ",", 
               RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "}"}], "}"}]}], "}"}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}], 
          "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{54., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 739, 23381088568723048840, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{60., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 739, 23381088568723048840, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{92., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 739, 23381088568723048840, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{78., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[739]]], "Output",
 CellChangeTimes->{
  3.5657632694431763`*^9, {3.567266062901132*^9, 3.567266090827345*^9}, 
   3.5672663231853647`*^9, 3.567266439819497*^9, 3.567266528108832*^9, 
   3.5676653241055355`*^9, 3.567667122564401*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "12", ",", "13", ",", "1", ",", "8", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.5657632694431763`*^9, {3.567266062901132*^9, 3.567266090827345*^9}, 
   3.5672663231853647`*^9, 3.567266439819497*^9, 3.567266528108832*^9, 
   3.5676653241055355`*^9, 3.5676671225684013`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{299., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{54., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 741, 23381088568723048840, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{60., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 741, 23381088568723048840, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{92., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 741, 23381088568723048840, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{78., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[741]]], "Output",
 CellChangeTimes->{
  3.5657632694431763`*^9, {3.567266062901132*^9, 3.567266090827345*^9}, 
   3.5672663231853647`*^9, 3.567266439819497*^9, 3.567266528108832*^9, 
   3.5676653241055355`*^9, 3.567667122625405*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{299., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{54., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 742, 23381088568723048840, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{60., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 742, 23381088568723048840, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{92., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 742, 23381088568723048840, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{78., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[742]]], "Output",
 CellChangeTimes->{
  3.5657632694431763`*^9, {3.567266062901132*^9, 3.567266090827345*^9}, 
   3.5672663231853647`*^9, 3.567266439819497*^9, 3.567266528108832*^9, 
   3.5676653241055355`*^9, 3.5676671226884084`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{299., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], ",", 
           RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "0.23921568627450981`", ",", "0.24705882352941178`", ",", 
                  "0.23921568627450981`", ",", "0.25098039215686274`", ",", 
                  "0.25882352941176473`", ",", "0.24705882352941178`", ",", 
                  "0.25882352941176473`", ",", "0.25882352941176473`"}], 
                 "}"}], ",", 
                RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}]}], "}"}]}], "}"}], "}"}], ",", 
             RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}]}], "}"}], ",", 
                RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "1"}]}], "}"}]}], "}"}], "}"}]}], "}"}]}], 
          "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{54., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 743, 23381088568723048840, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{60., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 743, 23381088568723048840, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{92., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 743, 23381088568723048840, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{78., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[743]]], "Output",
 CellChangeTimes->{
  3.5657632694431763`*^9, {3.567266062901132*^9, 3.567266090827345*^9}, 
   3.5672663231853647`*^9, 3.567266439819497*^9, 3.567266528108832*^9, 
   3.5676653241055355`*^9, 3.567667122751412*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applying Fourier DCT to RGB", "Section",
 CellChangeTimes->{{3.560709967863253*^9, 3.5607099915126057`*^9}, {
  3.565761013659872*^9, 3.56576101832649*^9}, {3.565763220867477*^9, 
  3.5657632429206257`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fourierRed", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"FourierDCT", ",", "red", ",", " ", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fourierGreen", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"FourierDCT", ",", "green", ",", " ", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fourierBlue", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{"FourierDCT", ",", "blue", ",", " ", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataToExport", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"fourierRed", ",", "fourierGreen", ",", "fourierBlue"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dimensions", "@", "dataToExport"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"exportPath", " ", "=", " ", 
    RowBox[{"SystemDialogInput", "[", 
     RowBox[{"\"\<FileSave\>\"", ",", " ", "\"\<image1.dat\>\""}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "exportPath", " ", "=", " ", 
   "\"\<C:\\\\Users\\\\Berkold\\\\Dropbox\\\\Compression\\\\Mathematica \
8\\\\image1.wdx\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"exportPath", ",", 
    RowBox[{"{", 
     RowBox[{"fourierRed", ",", "fourierGreen", ",", "fourierBlue"}], "}"}], 
    ",", "\"\<WDX\>\""}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.56576334503098*^9, 3.5657633876887608`*^9}, {
  3.56576345189178*^9, 3.5657634614728537`*^9}, {3.567266160718511*^9, 
  3.56726618286684*^9}, {3.5672662579052267`*^9, 3.567266315663772*^9}, {
  3.567266373862858*^9, 3.5672663773173227`*^9}, {3.5672664670266037`*^9, 
  3.567266493046255*^9}, {3.5676655166515484`*^9, 3.567665570924652*^9}, {
  3.567665607199727*^9, 3.5676656085318036`*^9}, {3.567665644635868*^9, 
  3.567665674785593*^9}, {3.567665835996814*^9, 3.567665844951326*^9}, {
  3.567665907576908*^9, 3.567665919994618*^9}, {3.5676659991291447`*^9, 
  3.567666009348729*^9}, {3.5676660691951523`*^9, 3.567666114676753*^9}, {
  3.5676663709714127`*^9, 3.567666385719256*^9}, {3.5676664445736227`*^9, 
  3.567666447536792*^9}, {3.5676666320193434`*^9, 3.567666650474399*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{299., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{54., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 747, 23381088568723048840, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{60., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 747, 23381088568723048840, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{92., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 747, 23381088568723048840, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{78., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[747]]], "Output",
 CellChangeTimes->{
  3.567665581112235*^9, 3.567665613878109*^9, {3.567665651727274*^9, 
   3.5676656799808903`*^9}, {3.5676658427071977`*^9, 3.5676658478834934`*^9}, 
   3.5676659241418552`*^9, 3.5676660101397743`*^9, {3.567666082161894*^9, 
   3.5676660926144915`*^9}, 3.567666158350251*^9, 3.567666296997182*^9, 
   3.5676664639867325`*^9, 3.5676666580488324`*^9, 3.5676671229744244`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "12", ",", "13", ",", "1", ",", "8", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.567665581112235*^9, 3.567665613878109*^9, {3.567665651727274*^9, 
   3.5676656799808903`*^9}, {3.5676658427071977`*^9, 3.5676658478834934`*^9}, 
   3.5676659241418552`*^9, 3.5676660101397743`*^9, {3.567666082161894*^9, 
   3.5676660926144915`*^9}, 3.567666158350251*^9, 3.567666296997182*^9, 
   3.5676664639867325`*^9, 3.5676666580488324`*^9, 3.5676671229774246`*^9}],

Cell[BoxData["\<\"C:\\\\Users\\\\Berkold\\\\Dropbox\\\\Compression\\\\\
Mathematica 8\\\\image1.wdx\"\>"], "Output",
 CellChangeTimes->{
  3.567665581112235*^9, 3.567665613878109*^9, {3.567665651727274*^9, 
   3.5676656799808903`*^9}, {3.5676658427071977`*^9, 3.5676658478834934`*^9}, 
   3.5676659241418552`*^9, 3.5676660101397743`*^9, {3.567666082161894*^9, 
   3.5676660926144915`*^9}, 3.567666158350251*^9, 3.567666296997182*^9, 
   3.5676664639867325`*^9, 3.5676666580488324`*^9, 3.567667123666464*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reverting Fourier DCT", "Section",
 CellChangeTimes->{{3.560709967863253*^9, 3.5607099915126057`*^9}, {
  3.565761013659872*^9, 3.56576101832649*^9}, {3.565763220867477*^9, 
  3.5657632429206257`*^9}, {3.565763507941407*^9, 3.5657635192416887`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "path", " ", "=", " ", 
   "\"\<C:\\\\Users\\\\Berkold\\\\Dropbox\\\\Compression\\\\Mathematica \
8\\\\image1.wdx\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"path", ",", "\"\<WDX\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dimensions", "[", "data", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"restoredRed", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"FourierDCT", "[", 
        RowBox[{"x", ",", "3"}], "]"}]}], "]"}], ",", 
     RowBox[{"data", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"restoredGreen", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"FourierDCT", "[", 
        RowBox[{"x", ",", "3"}], "]"}]}], "]"}], ",", 
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"restoredBlue", " ", "=", " ", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{"x", ",", " ", 
       RowBox[{"FourierDCT", "[", 
        RowBox[{"x", ",", "3"}], "]"}]}], "]"}], ",", 
     RowBox[{"data", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"{", "3", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"restoredImageData", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"restoredRed", ",", "restoredGreen", ",", " ", "restoredBlue"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dimensions", "@", "restoredImageData"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matrix", " ", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"restoredImageData", ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "2", "}"}], ",", 
       RowBox[{"{", "3", "}"}], ",", 
       RowBox[{"{", "4", "}"}], ",", 
       RowBox[{"{", "5", "}"}], ",", 
       RowBox[{"{", "6", "}"}], ",", 
       RowBox[{"{", "1", "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "%"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.565763522865528*^9, 3.565763552703662*^9}, {
  3.565763642104702*^9, 3.565763727400141*^9}, {3.5657637654985733`*^9, 
  3.565763783753283*^9}, {3.565763815115307*^9, 3.565763834282346*^9}, {
  3.565764083256728*^9, 3.565764109637244*^9}, {3.565764225158024*^9, 
  3.56576431030336*^9}, {3.565764366829834*^9, 3.5657643693571873`*^9}, {
  3.5657646062847*^9, 3.565764612224984*^9}, {3.5660591157707577`*^9, 
  3.566059346217493*^9}, {3.567266387886401*^9, 3.567266432141686*^9}, {
  3.567266503688623*^9, 3.5672665213688097`*^9}, {3.567665684194131*^9, 
  3.567665820288915*^9}, {3.5676658781492248`*^9, 3.567665878695256*^9}, {
  3.5676659502793503`*^9, 3.567665980357071*^9}, {3.5676660212804117`*^9, 
  3.567666045331787*^9}, {3.567666125472371*^9, 3.567666172153041*^9}, {
  3.567666449341895*^9, 3.567666491863327*^9}, {3.567666653184554*^9, 
  3.567666707711673*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12", ",", "13", ",", "1", ",", "8", ",", "8", ",", "3"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.565763554847086*^9, 3.5657636542241087`*^9, {3.565763690055558*^9, 
   3.5657637116077833`*^9}, 3.5657637853893948`*^9, {3.565763818675412*^9, 
   3.565763834694262*^9}, {3.565764252386592*^9, 3.5657642774040747`*^9}, {
   3.566059113220326*^9, 3.5660591669590673`*^9}, {3.5660592726130247`*^9, 
   3.566059346980454*^9}, 3.5672659997555323`*^9, {3.567266063655385*^9, 
   3.567266091583386*^9}, 3.5672663239839773`*^9, 3.567266440608542*^9, 
   3.567266528700501*^9, 3.567665324738571*^9, 3.567665776055385*^9, {
   3.5676658166637077`*^9, 3.56766585551593*^9}, {3.567665931788293*^9, 
   3.56766598209617*^9}, {3.5676660290558558`*^9, 3.567666045876818*^9}, {
   3.567666132854793*^9, 3.567666172592066*^9}, {3.5676664797716355`*^9, 
   3.5676664925813684`*^9}, {3.5676666686974416`*^9, 3.5676667111588697`*^9}, 
   3.567667123990483*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.56576369900296*^9, 3.565763700857555*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Restoring image", "Section",
 CellChangeTimes->{{3.560709967863253*^9, 3.5607099915126057`*^9}, {
  3.565761044949765*^9, 3.565761054322796*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"restoredImage", " ", "=", " ", 
  RowBox[{"Flatten", "[", 
   RowBox[{"matrix", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "6"}], "}"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"restoredImage", " ", "=", " ", 
  RowBox[{"Take", "[", 
   RowBox[{"restoredImage", ",", " ", 
    RowBox[{"imageSize", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"imageSize", "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Dimensions", "@", "restoredImage"}], "\[IndentingNewLine]", 
 RowBox[{"Image", "[", "restoredImage", "]"}]}], "Input",
 CellChangeTimes->{{3.5657065379751797`*^9, 3.565706557923291*^9}, {
   3.565706668493348*^9, 3.565706677050161*^9}, {3.565706827367082*^9, 
   3.565706844381621*^9}, {3.565708200574848*^9, 3.565708287306457*^9}, {
   3.565708334629426*^9, 3.565708388360199*^9}, {3.565708429061268*^9, 
   3.5657084293169003`*^9}, {3.565708493864211*^9, 3.5657084988814573`*^9}, {
   3.5657096831659107`*^9, 3.5657096850726748`*^9}, {3.565709809798032*^9, 
   3.565709817899523*^9}, {3.565710886265934*^9, 3.565710902640396*^9}, {
   3.5657109661359587`*^9, 3.5657110265900297`*^9}, {3.565711480596549*^9, 
   3.565711516298605*^9}, {3.565711688709628*^9, 3.565711697572545*^9}, 
   3.565760923566533*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{299., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "0.8666666666666667`", ",", "0.5450980392156861`", ",", 
               "0.2588235294117646`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "0.8509803921568625`", ",", "0.5294117647058824`", ",", 
               "0.25098039215686263`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "0.8470588235294115`", ",", "0.5333333333333331`", ",", 
               "0.2627450980392156`"}], "}"}], ",", 
             RowBox[{"\[LeftSkeleton]", "99", "\[RightSkeleton]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.9999999999999996`"}], ",", 
               RowBox[{"-", "0.9999999999999996`"}], ",", 
               RowBox[{"-", "0.9999999999999996`"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.9999999999999996`"}], ",", 
               RowBox[{"-", "0.9999999999999996`"}], ",", 
               RowBox[{"-", "0.9999999999999996`"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"\[LeftSkeleton]", "94", "\[RightSkeleton]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], 
             ",", 
             RowBox[{"\[LeftSkeleton]", "102", "\[RightSkeleton]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{54., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 762, 23381088568723048840, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{60., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 762, 23381088568723048840, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{92., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 762, 23381088568723048840, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{78., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[762]]], "Output",
 CellChangeTimes->{
  3.565708230514493*^9, {3.565708270576099*^9, 3.565708290114992*^9}, {
   3.5657083459227657`*^9, 3.565708391027817*^9}, 3.565708432216803*^9, 
   3.565708500833742*^9, 3.565709687623191*^9, {3.5657098004643717`*^9, 
   3.565709819420348*^9}, 3.5657108533139887`*^9, {3.5657108918302*^9, 
   3.565710905602777*^9}, 3.565710973252076*^9, {3.565711015047737*^9, 
   3.565711027905808*^9}, 3.565711521952923*^9, 3.565711701874901*^9, 
   3.565760928027238*^9, 3.566059357425747*^9, 3.5672660048809566`*^9, {
   3.567266064569358*^9, 3.567266092511043*^9}, 3.5672663249867783`*^9, 
   3.5672664415368443`*^9, 3.56726652969457*^9, 3.567665325552618*^9, 
   3.5676667168841977`*^9, 3.567667124218496*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{299., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "0.8666666666666667`", ",", "0.5450980392156861`", ",", 
               "0.2588235294117646`"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "0.8509803921568625`", ",", "0.5294117647058824`", ",", 
               "0.25098039215686263`"}], "}"}], ",", 
             RowBox[{"\[LeftSkeleton]", "96", "\[RightSkeleton]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "7.850462293418875`*^-17", ",", "7.850462293418875`*^-17", ",", 
               "7.850462293418875`*^-17"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "7.850462293418875`*^-17"}], ",", 
               RowBox[{"-", "7.850462293418875`*^-17"}], ",", 
               RowBox[{"-", "7.850462293418875`*^-17"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"\[LeftSkeleton]", "90", "\[RightSkeleton]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.501960784313725`", ",", 
               RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}], ",", 
               "0.25098039215686263`"}], "}"}], ",", 
             RowBox[{"\[LeftSkeleton]", "98", "\[RightSkeleton]"}], ",", 
             RowBox[{"{", 
              RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{54., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 763, 23381088568723048840, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{60., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 763, 23381088568723048840, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{92., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 763, 23381088568723048840, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{78., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[763]]], "Output",
 CellChangeTimes->{
  3.565708230514493*^9, {3.565708270576099*^9, 3.565708290114992*^9}, {
   3.5657083459227657`*^9, 3.565708391027817*^9}, 3.565708432216803*^9, 
   3.565708500833742*^9, 3.565709687623191*^9, {3.5657098004643717`*^9, 
   3.565709819420348*^9}, 3.5657108533139887`*^9, {3.5657108918302*^9, 
   3.565710905602777*^9}, 3.565710973252076*^9, {3.565711015047737*^9, 
   3.565711027905808*^9}, 3.565711521952923*^9, 3.565711701874901*^9, 
   3.565760928027238*^9, 3.566059357425747*^9, 3.5672660048809566`*^9, {
   3.567266064569358*^9, 3.567266092511043*^9}, 3.5672663249867783`*^9, 
   3.5672664415368443`*^9, 3.56726652969457*^9, 3.567665325552618*^9, 
   3.5676667168841977`*^9, 3.567667124405506*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"92", ",", "100", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.565708230514493*^9, {3.565708270576099*^9, 3.565708290114992*^9}, {
   3.5657083459227657`*^9, 3.565708391027817*^9}, 3.565708432216803*^9, 
   3.565708500833742*^9, 3.565709687623191*^9, {3.5657098004643717`*^9, 
   3.565709819420348*^9}, 3.5657108533139887`*^9, {3.5657108918302*^9, 
   3.565710905602777*^9}, 3.565710973252076*^9, {3.565711015047737*^9, 
   3.565711027905808*^9}, 3.565711521952923*^9, 3.565711701874901*^9, 
   3.565760928027238*^9, 3.566059357425747*^9, 3.5672660048809566`*^9, {
   3.567266064569358*^9, 3.567266092511043*^9}, 3.5672663249867783`*^9, 
   3.5672664415368443`*^9, 3.56726652969457*^9, 3.567665325552618*^9, 
   3.5676667168841977`*^9, 3.567667124408507*^9}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJy83QfUXVW19/+gCIpAeg8BbNiooefA4aLYaOkVELBQpCSBQEDwRgVErkIa
6aEoile5AqEFOCgX8IpISa/0Kk1aIKHJ33Oe+VkPz4xn6Dve9/73GI7IzM46
a6+9ynf/5lxzbXv0yYO+9cF27dod9vf/ffPv/6v//9qt9ev56pix9eux6kWT
6tfC6l7969fz1Vderl+PVrfsUL8WVnv2rl/PV9t3rF+PVR9Y2LiqZ3y3fj1f
PTnKmTS5fi2qjhxdv56vHjqwfj1WXRT3T4j7/e6WjfIWVW+N+lzbuFrLuSXs
88PeUt6i6ltv16/nq6++Ur9a7581p349H//dWs8336pfz1V32rl+PVbdIp6L
fUDUUzsMH1W/nqtee039erS61db164HqnNn167nqS9E+hw6oX39vt73r13PV
xj+f9Gi1d9w/K+5/Oe5Xn27Rntph8aLGVV2X6jM5nuumW+rXc9UO0f7aYXqU
n9+X+3eO5513af16oPpGlO+9TIrnXb66fj1XHZja4cYoRz0XRv3Hn1m/nqvu
EuW7//Swq7/7d4/2UX/2dW/Wr2ejfzxaPSTa87Qox/tSzxnxvANSv7op1bNj
9CvPe33qV83uvyXZO4T95mRvH3bv99D0vBOi/jtE/dlnx/2ea0C8R/1tx7D7
3e696ldr/1HOzFn169nq1dE/L4z22WOv+vVs9eQx9evR1ve4oH79pbrDTvWr
1X76hPr1l+g3j1YPjvZnz/cr58Lo59phQbLfH/U8NcpRH/a16+rXM+V3lb/b
HvXrmepDDzeu0p+HDKtfT1dHH16/Hirj6/ob6tdT1ZGH1a8Hqz361q/7q1Mu
rl9PVWfOrV8PVnul+1c/2LhKu02L+9eE/ZIYL1PDvirscy6pX/cXu3KUP3Z8
/XqqeljU07jrt1v9eqrae6v69VDp59ddX7+erI6I+s+N+19dW7/+bo9yzJOT
p9WvJ6uz47nUf8CQ+tVq185TptavJ6ozG/PimnJ/x87164mYp9eUcTSlcT0e
/Xp1dWDUc0ljenqsunJV46pOjXLMFy39cVUZR+ajYSPr16q4b1G1UdyAR6vL
Vzau6tKY9y5vPPcj1W496tfK6tQYpw8+1Liqy5Y3rjIPeE8XT69fy6sHRT3X
tFzVLt3q1/Iyz69uueK9Lav2jPfleQYPrV/LSjk9etavVvsW8VwrWq7q4qWN
q3ph1LN741pRXRL2LTvVr8XV6VG/QY3302qf0niPS+P9LKkujHZoH38/qfEe
Fpf5yrh/IO7rEPfp7963f9etMW/cU/rloYPq1+LqxTPr193V7o1+eF8pv+X5
rq12arTbjTH//Hd1Yvt6+42ptuvQ8uc2ferX3GrjPztMjD/HlP9uH3+2a1xH
Vtq1ub5SmXnasRMO/d7wsH+l5m9uOHbobWv+c0DtUxe9MPT3h46Ov9+v9v77
xlxxQuWM3c//6wcmfanyuyvX3PPe5/avXLV7z223WXJi5fgHP/LEwKv3qWyz
9aTzHv23d/t/vk+7KdOf3q32wOAxr53/uT0rqxbf/clL5x9VO2CXs+fe8cDo
yr39//3bl1z2y9o//nN6sz8rTf7c4P7+lfr1QvWi4BD95+bgGfO/94aLrCOH
xHhx/9Wxfl0U7+vMuP+ktB4146vVjWHxfPSz1nUQR72UOGqPqP8ujevx0j/d
/3Lcb1yrD+4yn+8dPKk+eGnPsI/FjXE/blSOdRBn4kPr5uzgPfaB0c897ytR
z8UtV3Vuun9yjBfcW7ginhcfZi7CCR3xWDxXXt89F7tyjOfMFZ4XRynfvDoh
8VXmh8wVPRI/qM/pia/M/7MSX+V6npzquT7a57poT/P27r4jov07xnzVK7h3
UfRD7bygSfkzm/BVvt/zqv+OTfgKfyq/WxO+mhV8dVHwjPc+pLGetXKX8dul
sV48Wz0pOMe4u6kJdw0bUb/+Un3okcZVuAsvHRLrpPX69fX16y/xe48W/p/R
mM9b+co88FrwlfL9btfGOvVMdV6DYx4uHDU08VWfWFeWLKtfT1XnBFfMnFe/
7qsuDjveUM4NwVfW5znBM3jswbDPC46anDgq81Wv4KWeia/Us32s7wMb6/RT
1Ub15j1U2u214KiViff+T/lq4P8hX3UKvhoRfKVf4auZwVfGY2N4dHo8xmur
fXLMgzhFvzUv4CvvfWH0j+nBYzghc5fvzZbv2keqF8+oXyvK9+ncaMeuwTV4
1XtdGjyGz1cHd3VO3OV5cBS+HRn1HhR27dkyLlZWO3WtX8vKOjgj6seOk9QP
j+GcacF5nbvUr6Vl/Wrh3iVl3vd9bR4q7RXleD7jbcDg+rWk2qvBQfeWv+8Q
5eKuWTFO8Njkxvu8vdroLlPvrM5uvJ8/VVe2b+Gl/Rrce361Ud0uVxSuateG
rya12hvXTsFJx9Y2f/zbP/ny/KGVAf1eGn7VjweFfUTw00GVe8Z878QPXzOo
8pU97vzM3IsPxV/uiz+ProzbZ1Svfq8fWtn+G2c9e+XTQyovDz9xymnLvlH5
+rYPvvGVh5649aAPzNn+13/oX/vzDZN+NuPdQyrXzx76sZ/OGVXb5JLbF9SO
Prr2+6d3HXh2n7H/63w1uvG99EJZF/Sfno338kJZv4xrHOV+42VVcAJOy/oS
7sLdb4YdRxUeO6t+vRD95vHSf1rmixeiXz5e+u2ssA8Mu/Vxr+AufDUo6oNn
2M0D9DH1Mc9kO057O+rfIeYb/X5UtGeu/8iwjxlXvx6PeW1Jub/UP+zey9i4
f3J832jnxfgzxgXey1yHE8am9X116FS4xXyFr+hdP03cpT9kPQePTYn3OCFx
kd/dI+lXytmzia5FX1JOx/S7mbvoq+Z772uP4Ch8NSXxlfvNY71SOYUDw46r
cf6IaP9ronz9AZ/r/+bPVdH+RT/0vRDtkDlq9yb2t0L3eyDWK/P8gpvrV6td
+UODu04MznH/+uAivKQ/0K/WBP9Yv8YnO+5STjNdCweaT3bbs35tyHXjT69f
z5R1Ff+saCyXT1d7N7jq4cI5p55Wv56uzon1dlbYW9bRp6s9g3/cvyy4Cy/1
DE5bGna8hK+uCx5TDj2AfVTwz+yoJx1MffDVLqFf9Ur6Fb7qEXb806KDtNrN
z/Quehr7LrvWryerw0MHUz6+WhF8kfWr0cFXeGlR4zPv8RgHrfZxMR/NTtzl
+2Rk4/tgdRnXxs+q4C7jyDindxl318T3AN3IOD00+uXK4C7rC/5eFnqS552X
uAtfzA3unBZ6EnuPeM6W97+s2NUbXylfPToHR2n/HqG7dU7ctTLqh7usg3S3
waFrmTfoWnhI+/j+tq74U3uYX+hhvieM547BcV2Cr2YHX+G4Lo363x3t8efg
rYXVzYKn+jb+3a/jOW6odgmOWh/6Vsvzz6xe+KVLvv3NZ79Ef6psFnrW+t02
+sAPj9qnsv648+fO6P2VytPzqv0OHbBHbeW/fePeI5ZtV3nk3Kc/N/7afpU/
/eKZ+7v3/0Zl9zV7XLfVvl+qHHfpgoP+fd5XK2c+88C9naeNqXzkmHZvvXPp
sMom753Q4YorD658dsKA/zjkj8dV+r/Z+5evDf1UZZOt517Q9ajda0fO7nvE
qD4jKp94+Z4Xd540ujbqnJNvG//TobV3/9R/r6uWHfu/zlc4gb/P/IavzP/N
+Eq/ejNxlPeNl3YMfYluc0utfrXyxkXxflvmuxeCGx6vLoz+dGvcjzcOTeWw
46sRwSf4p/BGPBdeUv+3Eu9Zv/DPzlF/31O1+N3JUc8pUf+5wXuea2Diq52i
HHy4MniJ3xMP4Kjr0rqsneendXxF3E9vMR5nZt0syt8z6XWeFz/gJeMy+yvd
vz7ZzSeZ3zKPud+6vzrxhvpnDsFX7t8x8VWv5G/13ns24czdmvDV3slunt+j
yf3DE1/pJ9oz61cLkq6YdbDMn/yh2tPvjgi9y/hlpwey+96dHnrXb2Md03/2
Cn8iXav0w8Yy0so/i6Odh4auNSf8OfiBTuV+61T30M3wnvL5GScFd5k3Xk+6
lnXt9Tfq19PV0UfUr4cL/9xwY/16unpY2HFUy/rVymN0iVOCx7J9cOhjfcLu
uda+Xr+eivXooaJ70M3wFfu40K9GJf9gl8a6tKFulvWr7DfMutb8sM9KOtXO
wVfDEl/Nv65+PVH8j+bzgQ2do5W7iu4U3DUj9C72xcFdw4LHOiknvg+Xh//N
/eadIcFd+r/x2SV0I+NLv6dr6Se4fGlwjXnpwegf0xv9bmVpn2bcxc84eHj9
auUufmV6l/v5EzuF3qV8XDgl9Cftj7v4Hw+O+s+I+tGrzHvDoh78icaj+waG
DqV9li5pXGW9sb4Y3/6cGnzFX2Fc8U+26Lz3lv69JMrtFdzVO/yG1tOujfF7
c4yL34V+dVfw1cTiF+zcuP9n1Y5t9Ky//9m4f1pDzzr2vq9U5n/82sc/NLZf
8NfgCv3qgPEnbv3S5l+urT2u62O7vPWtsO/Pv9jQue5+cUzl81d1/Z99v/3p
2g6n37D39L33rB055Iib/3TodypfrF3a73vbDa09sfq974764oG16owd3z5i
zejKxgcMua77q9+sfeI3nTs/v/kz/UdO+OKmXfc66n+dr9bEumz9wld4gD/u
/njvZyRews/Zjh9wyMl0mOgXma/wUuYr+syasOMZ97/1Tv16oXrd/PrVnN/w
yd5J1zIu2DfQrxK/dYrnquxTv14s33n0KHyFo4wXvJTj3NYHL02J9Ro/uB/n
qE8uhz4wPN5Xx6Sn9Qie9H1p/cV1eKCs78Fj+EH5M1I8m/snJH+reQOfsGfO
yfyDi/RD8ypdLvPMqCZ2/t/MOdlvqz+MT/aiQ6bylYOjcFrmK89lPuyRnivr
YN6vdsNdzfiKflU4OXStEgeo/OArds976hn169miL6l/z+Af+pX3fnPwj/go
/ZB+lfkq+xmtU/jKOqn8zFfse4SutWOUY12jax3+9frVqmuxXxL1oae1+JNa
OU05Qxvr2jPVR8KON5aFPtY3dDP12WX3+vV0tVdwl/GLr+Ym7jr1X+Qr9hx/
Zd0fe2r92tA+Luwt38GtHPVa43oixveawo30qx5xv3bYuV/9auWooke9Wr8e
j37d6jecH/MsvQdv+/6cHrqW+81H7Pqz+RePGS/GT7fgLvMhLu8Suha+0s/4
Ez0X3bNr6EnaBzfjrhJXHPpgl+RnnB3tMqjB3a3cxZ9I7/K7I8KfiK/E2+Cr
ooPFOJ0e/sSpoVcZv0Pi93CP8Tst7uuU/Id0Levlovh3vjvpZfyTvj+0I77r
FbrVVqHn8qe06FV/qHZrtM8fQ3+9r9opuKlL6Fa9G/3rqiq/3pb/gK9m7nJg
pd/nlv/tyPd6h1/w8OCnIZU/rv/YXb/st3/trJU9Xnvr7m+E/ZD48xONPyet
Ob7ycN+ev9i4Z6V2b5/aF197fadaj2vv/ekbs4+s3NH7e/0+u9/wWq9b7zpr
84/sW9vsmhcP+MJ2h1Y2f+S/D5t64rdqf/3vAasu3Wh9/2tvuPaWez575P9v
+hXd6aB4v7MSJxwS3LIqOAcvPRDv9c3gnIuCf9j3Dg55IDjk0ODxvcK+MOzt
4z3unezFj9x4ny9Wr47xTe96swlfqT8/nfFLjzK+s06V7fhNPAKe75/qqZ/T
xwpvxLjDRUW3CfuC4DfzUyk/eM+6b9zxe9KvrNfei+9I3zG3pPInNWmHottE
+XSwsl4n3c/v4vPslzwzxddpzxw/ph32Tnb3n5H4Df+MTDyj/u6fnO7Pdrx0
WpP7z2xyPz+geMLsH8z1oRNmP6B4Ofpb2ZeROEo7ZO4qcX0pjqvEuwZfWZfM
z/yD/C24gl8vx5nPCj1qXnBL9g/iHH6xlUnvwjk9El95rhVxP78QnuGXFI9T
4hYa8/hfguda67k+9C485v6WZfSZUp/i9wweezjFfXWLuK8j4rnwQIn7Cn2s
rEuJrzxvM//goIi/wl3akx9QHH7mK1zELs5qVXAUe8t692S1e7ofX/Vswldz
giMKF4V+9WDStehXc5Ou5btXnLz+6bu0Z/CYedi6Qh8yXnwX9Qp+Ub7+TTfS
/r4Hugd3Ff9g9NehESdV/IOhay1NulaPxFeFu6K9+BPdLy5NHFexR/2WBHfp
h/iPLqX+OA/f6P/qQW+yLgwJPuP/w1XiR/gTO4Qf0LxCjxgY/77Eu8d74s/s
EfFauBzf8SfODd3L+21gWN/fxrwzv9r4531q1SsmX9lz5C3fqG0cfNU5+Kvu
H7xz1R61X7/92jO7zDqgttMXNp/Z842nbv3DjFM+NeRDoyvH/nDWx89r97XK
x84b870npny9MvWrk2bd9cP+lYOu+fnI/Xb+emWLnY/89soV36ocsXzGtvOf
+mrtlE0XzJo3YGjl5RGfnPTYT3rXNtt3z098enH/2hcu2e/BW4d8qfL6vHb9
Lz/hgNqT37/5z2d+7fDa4PHHbDfrri/Wnr/3dy+s/+iY/9/i29vHd8Z99JZY
r+k/F+KHxDn8d3iJHV+1zCMvVl+O7yF8le36BZ7J+lX+3fuj/OFRjjhNXN8j
7sc/U5Nuhrusp+K7+BPpA8oxfwyKftoz7JOSfV3waol/5t8PPmHn154Qup/v
vMInYac7GQc3R/2zn1F9FiXe057Zf5rbYWFqBzzGTp/UPux4L+tj2Q/ruXLc
HXvej1DilNJ+B/Xnp56U+If9gbif3jgh8ZJ6Zr76Z/oYjsr+vhHpfusIvsr3
79XEjruyvrcy/KHZr9q/iX4l/irHO3VLOpX5nx8QX5V4vOCrNYlDxL33CZ1g
ZszHNyW9C3eNTPH26tk1+Q3Zb2oSr4W7Mh+OT/sT6QNdgseyLjcjdC3rsP1i
XYKvPJd24E8cFXylHcR3Zb56LfyJ+Iqf5pQU925d7hy6VvYPLg7uol/hoqx3
sZ+S9C72xY1lslW/8t7HnFK/nig6Db4aEH7D2YmjzLOrE3fRu/L918Z8LX7e
+zV/rQy+8r6Mf/qQ+ojrXRHxUNoflw8P3Ui74Wx+Q3a6JK5RDr/h0PDXFU4L
3sU72m1UPA/uKvwf9S77FqMdxMnTu7SDOHl8ZbyL4x8YfEU3WBb/fnFwD77C
YfyJ/t58aR0t+xdjXRL3TBfjF9RvxN1Pb7zXP8e4eKDwXc/gqZZ2vD10urtL
vPvmEQ/f4l/9ZbXHXff1OPnTX6tts/CY/xw4tUOlb9zXLf6c/9PTDt70O+Mq
uz8/tNcJaydUuob94+nPg+5+YuuNhx9Se/cXd57a8ejRlQf7bTawzz3frh39
oyeXdnl441rP7tv3u/zqIZWv/fLpycuePKx26uMf+1118+G1bU4dsWKf+w6v
PXzbqicfHX3M/zpfWcd3SOv1quSPo1/tlfQo92e7+0cG/7wU48+6v2fcj69w
Gk5QzqQm9+M0etcu8R2mX9Gv8I/+OSdxlP4lvivHq2uHrC89FPYdk105OX6e
v9X3mXG9e/AJOz1nTeJb+u6tt9Wv1uf13TLh7Pr1Yvkepftl7sp+VfMf3WN1
eu/e78ykB+Kf06P/2L+pnp4381iOi1uY7u+Y7Fk3w0t7JX9u3tdQODmed0HK
71HyM4TdfoGsX2WdkG7Gn2u93ivFZZW4/bBnPyx+87vs4s2UY33J+y7bfi+3
chR/GW7BG/xWS5O+pB/imcwhOT9D8V8EX2XuWp7KN0/vnvJFWE/Xhm52UtpX
uC7snsv9/In4quQnCQ5Uf/fvmuLnlT8t+KpPip/HV2siLwTd6bqI75oT+of2
x138Tvhqt/An4i7r2cWha8nPUOK+QteiXym/U3BX5qUSD5/0qKXi4RNH0bX4
DXHptRGXNSu4SPvgLnoU+8DEXb5DzTsj0v3mHRyFV83L7Pq57/xhEa+FS40f
fKV96Ln4Sjn8zfhKfeiVma9wM74yD/eJ9yROvu1+rjWt8Vr8PqFrDQ7/nnmG
rpXjr9SvS+hH5j18RYeiG/AbLkp8xe9n/euQ/Ie4i79P+1mn8VLf8At6nk6J
r7QLvaulvDsjn8bd5bk2D3/gRxv9/rISD/8RHHXv+kfHbj+qtkviq3OH3jmg
84kDahdstPmVD1333UqPsPt3df/gnoPGV248avFdH91qt8riLX84durzB9Ym
bDJ5y32OPb72qb+s2/+WTfar/OyMYVsueG94pc+uS876r7eOrj3b/uBPPvvH
nSovjXx70X8tO6a28afv/vGC3b/xv85Xb6Z11vvqHesyPXhR2M+Mddx3DP7J
9slN7PrJ6OAuOrT+cFbcv0vihFHp/mnRH96O+vt+0o96x7qcdZjVyZ/FP53j
r6ynhyU/Wllnw063Mc/gExxifX8w8ZJ1nI50SNyvf+Z4M/d7XvYSVxacqR0G
JB7uEO2Gl/g3Oya7966cZnFxfjfv32RfkOLflON++0BxXeau4ndL7a+ee8b7
olMVv1i893z/iqSDlfpHXFnOByKfxgPJfmaK18rcdU0Te+Y08Wb0N3Em4vYn
Jb6yr7BjrCfW6xnBV/ike3xf8sfhEOs4PuFfUw4+oTvZN3pa8JX774v65Ph2
XGGfYN5vuDLpY8q/OP1u5r0SJx/tg99KXq8261QrX3lf4uTVx/owJOKvxEHP
tq8w7U/UnkvDjq8872nBV+KytOfroV/xO/WNcpaHP1G+BfyAr8Srs/Mbdgte
Yr8+9Kvlsc5r5xvCzq+FZwaHP1Ece8mPEfFaveN+Ou3S0LvkkSq6SvgZ+RNL
3HRwV7ab9+k9viOWxLqS7YNiXngwuMv76hTzwujgLnY674zgF79Lz+0WfkPz
M11rSfCV+f/SeK/izY07OiPu0g6jgnc7B3cV3Z4fNHQt8zZdiz/Rdyi/Jr+f
9ULcmLgsXITzhoQOZT0V1+X+weLiY53ESeLe1dd6yQ+oH6kHXW12+AW1Ox6c
GfkbjB86WLfwG7bEwV8f/+72lLdhTOXI+O8Px59d2vz9kRGfdUL8+c2IwxpQ
+UDcty72LYqn3+70r3ceNX9M3H9K7ZbLr9/i0g9+p/aVIRst3XP3L4d9m8rG
K79yy28/9PnKuuff/eQtn5xbuKrl749p+Z0jzy3c1PjvibMrV185+sKfH3Vl
4aqG/bJfVj468HuPnPjhVq5ae3zXxZt+aGytR9I3vMcN1ut4D2cE/1iXcdcZ
iaOUg4teSTrV3kmPWpS4LseNZz0N1/GvWcftqxC/vSjWR+POepr1gVXpfvOP
+DS6inKs7/iNP2h20nnoKlkXwgP49prgW37GzDlZH1NOicOJ3z0p2sE44E/E
ReYT5b8a5at/r2Qv+xajnt7LkiZ2969Pz4Wv1Ef8nvuzPlbyyuZ9CtFP3E8/
ZM9x++YxOtU1Sb/K+yu9X3ylP7j/uyl+PsebZU5jz+XQr/Bb5q5sz3kb6FGZ
r+zHnhBx7DjEuizeCS/hLv4+8eHiM9gPS/Hk3cLvJv+neNnuYb8k1qu5YZ+R
4rhwiDj2UVH+pVH+uuCi1VG+53I/XsIPPeJ3lV/ypkac1YNRjnyhe0T+0lFp
v+FNoVP1DF7iD7kx2a1D4rLWhH/Jc70RfNUz6VQ3yoMa67Z67hp5G2YnvpoW
ea7EU9HTTg0/4Ip/wle4VN4GupZ+3i/s7jcedw27fXV04yXBXT0Tj+ErOph+
6ztZ3i0cZX7JebfkfyhxWYmv5H/wvMaheHi6i3itoaFrqY9xMjj8cvoPvVL+
Knqg/aK4q+QTjvdEv9Ke9L6pwVfap3vUzz7EtvlSVoWuuax1v17iK+ujeuCY
klchyqVjFe4KDhuUeAw/DUwcpj2UW/gq8jh4f/hKfq2D23wniOOqlfykLXrx
H1OerInVHqFzdYv/lsehT/gVe7W5f0z1c/HnW8FVb7dva995p++MP/e2HxSO
umrN2W/Mv39C5cebHXbWOfv8oLbTH77/0S6VH1Qu/1O773xr8Y9a+OjRX7bl
q4k/jX9/fFu+ajeiNuHxO086Yr8r2vJVu59W/mPIRsdc+oXLCl997tpfv77s
qStq3ZM/jo7Er0f3wFcjEy95783sOKpZXJD1t+hdwUs7Jd2JjkE/tm72T5xj
HlideCmvg/jK/pccb4NPbot1+ZWkXykfd+GTZnm03kqcVvI1hd6yhXLid7UD
XdH3F77SzlnvKnFxfjfaWRwanYR+SNf3nZXtJc4q6WCLk73okNH+69Pvel/4
yj4I9b85c1Tcjxv1B1ytP9jfSq9bkOKyzHvN9KvpwVHmae/RfsnMS/gc/5g/
cVqOH2PXf7SzeK2Xk90+xOw/zfnqvV95seRhsC70ivj2nAd+WMRB4S7z4o1J
d5Ink36Fr3yn7o5zYl1i3yPZeyZO6xX+OHxIX8I/28T94tLFI+OcG26qX89U
H068ZP+g/Az0Inng+e+2bmKX52F50q/s7+MH5O/rEPXfNfyAeAlficuiU5lP
xL3TtXBUxxR/hbvEt9Op3D8o6VF4w/24CF/J21A4Lex0Lffr50NSnlLjmt6V
75f/AXex532L+jPu4mczTu0jwleei66Fr/Rb42pE2EveiRgn8jyY9yaH31Dc
u3Y+Mvo3vlL+VtEPcA3+ODzpWur/UPIbmh/ocUOS31A+VnFVvluHRP3wlfZX
j2xXbskHH/PkUrwV+hX/VNl/GFyFs/BpjusybtSbf7Bn8FXJVxK/19LP/xCc
eHf5vugh73uj3j+r9m2z3/D42l+ClzZtlDepKj5efq0tgr9euGznb1/93KG1
l+WVb6TZ+kFlSW2LQz+w27eCk8bUzvv0quU3PjWmMrnXdSN/tuOJtacm/7z/
NR33qb0x6EtnvT3onH/MV+3GVDJffSjqceXTu/3sgn1a+eqLYf/BgnlXTti/
la+2eP4znz1tzS8KX5X1N/FV9ruNaKJH5ftxGj0EJyh/dfKXWR/ta/tncTg5
LvrVtK6tSXylX+R9ZNYd+9dyXM1Zcb84mfL9kvQN5eT88ANinNZS/I/52XPh
BPa3ky6Er7KuVfLbp/tLPE+0M441P+yduKjkVUh2HCWOi95o3mjGVz3S/fx0
9C48n/Wr0h/iebN/cFHqDzlvZ9av+I/Wpfh59aRb5vzt9K7MS7ga/+R4e/1W
+TnfaY6zyn7AFcmuv+VzfEqcdnCX/YzO6ZiT7OU7JeK4tgwe895PD72Lf028
tzio2aELzUx61PDEXfhqZfDPrKSP9Ux81TV0J9yFl5YHX81OfHVj8BU/Hf6Z
GfFUeIzOMzz8gCOCu5T/RuTRok/0irgTOhV7zpeV81+JsxqV+EqeUvoVOz+g
vKD4YVH4AfFM5iv5QrO97DdMHKUc62XWrzJf8QOy46vR8bu+O8RxsZsHxM9n
PyO+6pW4i94lTn5Am3X98WqflNcUd41K/kHjjX4l3sx4uzj4yv0tf/1o+KVb
4947hp47PfEVv6F4KO2Ps8t+w2i3w6Jd6FfGO78h/6D7+Q3FvXtfK2K/IT3I
fIL/cFTOUyp/qHamM5W4rDY65JISx0U/8fclL0OUZ5wpF9/NCV1Lu+Orlnnp
nminnL/0V9VOjfa+ptqr0X43tfDR7RPLfkN5H+hUPUPP6hDc1eKXO622efBW
C0+NrLxwS6/PDjn/jNoHo5yf7Lb3Jnu2/0Lt5Pb7db+k44QGP93z2jG1Q/a9
7qRuT59W2Xizjf7rqA/9rPDVnA7v47V2xxW+Oih+/8nj733pnZ0uL3z1Rty/
1Teu3fLjN84rfPXgncf84bwrflhbl3QkulPPxEXseT9dyR8efFXW97QfsMQR
RTlZl/Be6TY7J/ueKT4qn4Pzalo3+fVeSfY5yR+EH+hX+Mr8cFiy051yXqai
OzXhqwdjXVYOjuL/Eo9kHjg7+2Gjni15iVvt2qGS/LnGQe/EOXijTxNOeydx
WtbHit4Y9hw/XzgnxWuZB3L8lfK937wvINv/GV8tSH7Af8ZXMxIne67xyQ9o
3puQ/IDKz3lHt0xcJG7KfJ79fdbfoel8HPP8+JQPv8QpRfmHxPe6er4d+xDV
n99Z3q2i18X4dQ4R7lLOTbEP8eDgLlwhn9Wq0Ltwi3h4/j7PS+9aFdxVygm+
Wp30qB7JXvxuoXf1Dh7TDpmv6Dz8gD1SvtAeEce+Ovx6sxN3rU7+PnlK/1W+
cr5h5ijnD2b7tWk/YOaoGcFL+AdH4Stc3TH4J/PVoKRH0VvsN+yduAtfsQ9I
nJb5Cnc5n8g4xV3ildrmF9+Qu8SXHJb8hrjrwRQPb12RR8u4w11d0z5E46dz
yucwMPq3cw+NO/lHcjy8eLtpwTt+98F4r0tCvzKP8YMuCo7y/YKvxL3jFHFZ
U1M8/PB0Lo/5R1yW/Ybux238f5mP6Fd0Eut25ivf5SV/qf2G8V3i+dnpWuVc
qOA3ce4t89Ct8Z7uCD46s/ZOnMPTMr4uC845IjhqUnBZ8NXtx9TavZ+vbv9m
7fpNLj3m0GfH1F4KLls/Zk77Dz52Rm3xkef1+tNvj2/wVe9NTq0d8uzy27/6
7uG1v/PV9k/u+vPCV8OivEOCm/DS+cFXr/55xsK+T7fqVz+K+/d/Zd3hY8b+
qPBV9Q9Xz977u+MqOa7JfMtPxE8+KMVfWZfFyzWzZ/+gds7x0kvi/Vrffa/4
3cxpyrfuKx+n53Nn6KEPJl3LupPP+9OPzk56V4lvTHkmcdTqpJ/gJfXBe8bp
d6Pd+PXwXss+jr8WPx1/+buNa0O+wl072hcQ9x8W73GnVE7Wx8yHt6X4LuPx
1uS/U89m8e0Tkp/XPJD5Ku9DzH7hZv5B5fMXs69P+R9wXc6P6j0OSXmrSr6j
xNUlP0CKb7dO5XO6zZPO3cZX1uU34lwb+8vFF72e7Pxrma/4AeXFOjGd4/lO
8BX+5Dd/K+z2u5f9oVHP7e1PjOdaH/WRj1T9R4SfcfuUp12eB37GwslJ18r6
Ff+g+ZgOxi+pPd3PXvS90LXwVT4nOsefZ/8gO//gnMRR9KteSY/qFn7AzEvO
zcn5FpyPwz+onvgKL1nPXgl/XPYPGs8rgivoe5ODW/jdtNvUiOOalfhK/Dy7
8S7uC+8ZL/Qu97PLd6odih8weGxlsuMuupz5J+taOS+E+KbSPrHeyHeq/8tH
I0+VfpJ1rZzngW7ELi/t8sRX8qANTn5D8fD8g34XR+Z8Dj2SrsVP4bxGebSK
PzHlh2dXP7pWmd/Cb2hdLPbQxYp/MO0jxFn+2/vBYXSqraLfmd/xVZ/I86Bd
/H7LfPrfxX8on+kmwSmbiscKnavwVfDN5+LPx/+8V+dff2BMbW3wmDwPnx/x
X6d/c+nE2sPBVwsffvSrj92yf22nj9816+oF5zb8g2Pu3alSmXLdO2N3nlA5
u/37OeqXtW2jHmckvto9fveATf59yabLf1P46gtx/0++/Ozgl0+7sPBV557X
3Th49eU1cTJXJ50qx6X/M76iY9A3OjfRrzole76/d9LNnAeQ85qqj/UXj+kP
IxJfyV8q3qn4H/k30/36nXwOJX9UlKP8rLNlv6e4bpyZ9/29Hbwkrgnf7rNv
/frrBvHt2a4c+zTpVPhqA79elO+51DPnHcUzxuOcxEXGW86roBycgzNLHoPQ
o/I53VmnKv7KpFvmfYJ5/2Az/QoX5bxSuCifXzAs6ZPm7Wb7BOWn2iB/QnDL
K0mnkp/KOYDOKXZ+Db3I+au7NYlvH578fb6Lnevtucr+jqiPeC3P5bxI+67s
E+RPdF6zfX8zU1w93nsz5SnFaXStkcFFP4n7cRT/oO+UbDdPi8sS34U36Fej
U34q/kF85f51yT9onRCvjhPE53cJjsIV7rdPUD727B+Uh4F+Iq97yYvFLxac
Qwdjxyd+1ziSR13cND+MeVOckrj9wjnJD0hPEz9m3pBnnn8Tn+M08VfGV+Yr
43eXpLNlvsJvC5vwVccmfIVP6Fryw7Obp4ZGO2h/43ZJxD2VPPAxbuV5MC52
SHm0cjy8PKXs3uvAFA9P11sc3KWe8uPL5+D+ZVE/du3sXEb7Bcv3Xehu5dzC
KKdbylPqvYint8557/QPHGC9s47xI4qjN8/5e9ylP2p3v39xxLn3DK7y9x8K
rtoy8mS1vO/rQtcaV+sQfNP7/fpVuwGVV7u32DsHD23e7oCZn7jrlMJXA3a8
56YnDzi5cvomT+y3399Oq53zmS0PG/DAqNoTkw9/5mM//NEGfLVNE776WPxu
nwPffPbCFa18dWzcf/nR037xs7Nb+ergO05742df+1WNXw9fdUicg3+08y1p
Pxo+sT6KS6EbWB+zH1C+SrxEf5ib1n3l46iL0u9a35Ujrzu9hT4zIOlmWU8T
J5bzxtN/cpz/Xskfh1twaclLH887N/Slkr8r+mOf0Kl8j3quFvfE+3S/pF8V
v178rrwW5ld279H7Up/vprymzsmS1+LaxEXyheIf66Z8ofTAcs5LivMv+VHD
TlfJ+/jy/r58brJ5xrmHJyfdaX3yi5X49uCfzFfil/jXzKunBW8cnOx4if6T
z2XOfrqWfD3PFi4yH+Gog4KjeiW+YndOcdeUjx1HKd95guKdRqVzCc1jvVI5
9NWVUQ6dir+MfiUvKL+JfKH40PryVvAVXav4bSN+frXzoLV/xHGNTnrUcPkf
Qo8qebSCu7JOZT+j+61f4t5XJX+fPO3WQ887I/yAuEJ7imPHD+4fEjyWz2sW
347f7IPjN2QXbyAuC+eU/Anp3OcSBx46Fa6gf/p+o8M4Z47ePTx4g07YLD/D
2vhdegydX17TOYn38CHO1B+mBI/xD+pv/Jt0Hf1TnLy88ez4qnfoPez4Sn54
+TzxFf2q6F0xf/Ebqv/UGM+r5deKdl4U46Qnf2LYfT/Y56cc+1GHJF3roWiX
ZcFXB0Y/kc+CrlXOTUh5tEpeweC/nEfLudL4hg62PH4v54EfGnwm/sr6Mijx
lXXNv7M+0aPU13rGn2g+K/pj2GdGXJbvSb+3RXBVyevQeD+3lLwNHYOvtmzj
N/xGxLdPrD4RnHTcjU+s/e4Rp9aWxX+v/eu5i35y2vG1B855c/XVu5xeezzs
iydfP32bvw7ZID/Dp+L3WuK7WvMzHBocNfqpP3a7/sjW/Ay/ifuP2X/RWTtt
2pqf4Wv7vDX9pP6H1eTtLHmZov3s5yrny9j3F+tp9uOsT/vjjFN6RT6X+Yy0
P87vTmhivzntm/Ne6C053zt9yXyj/+Ci4neLcvCPvMXs/Hfu1w50PNyl/9GR
dkr78mqRFzTnm5oVv1s4MOo5O9m1g/0FOf5NXJx2Vg6epMsZp3skXajkdUy6
k/GR48ZznD+dx/fmjORvLXnFm+TzxFfqw/8orinH3eGisYmv+OOyP3ev4B9x
Tda7M4Oj+NfMn/gEj4lvWR0cohw6zxkRH35fzMd4QJ4E/EN3wjMXJZ55M3iG
3f2r4n484/6cp/2SxEV0J+u+OHa6Ex1GHLvvdXGru0VeUL9b9tmFH7BDrDPs
OX+79XRd0rWKHhXliJ/XbtOCu+T/pDvJ0+58ueIHDO4Sl5X5qnfyA3YNvpK3
Wz6K+fKIBv9oNxyFc0q8euIr7X9q+BNz/nZ53fN+Q3ndVyYdLPsTPVc59zk4
RDvgkxmxPotL9p1c8hhEfej+1nPv69XgLlxknOIxcfI5v1Y+P1p8l7gv9kHJ
z1jigoIb7Yt0/+Cka7lf/MqaZDcPiitXT+sW7jIv4S55480b9Gi6kXlGXrnu
wTXs8pVMT/HwOU+p94svcZf+vyqdK23ek1+Vf9B8bj+kfX3uV27ebyhuHifh
qKnJP1jyk8Z64r+tR/qjctnNB9YJeeDxvvFgf2PH0Ku6Rbx7y+/cUd0v+GUb
eeCDr7YO+/rgK3Hu6/e746vnbfzDkpe0hcMuqt3y8prPLL1/XOWZ9+83nPj9
wlWbPjbmh3O+NSX2HU5JeRnOrT3XRueaXjl22K8OfGH+sBq/pPsrN//oQ68d
P6rW55qT1n6+yy9KflH9Tvvl/Nslj1PKS4Cj+Gus4+4fmThnUiq/+PWacBE7
vno58RW9K8fV5/wGuJtOhXNwVP+kR2UdL+tRZya+kgf3wdCdxkb+Y897W/AV
TsOZM4Ojcl7QM5MepX97X9kveXqTfQH5fGf6T85jYBysSByFl7LfzXzSPfxr
eMN3Mf+a+QnP9Ez1mZr8iRvkz0/79cwb8hjkPJ/it7Ouxf9FR1JPfr2TUvwS
Hazs78N7idPMLzcG59B/rNevN+GcdWGflDhKOfbx0SXoWnQh5TfLf3VacBQ/
I466OcrP9ZFfXTn8YkNCp7ooPdf4KJ+uhSvkf/htsme+8n17WvIb4jp5R+cG
d8m7ZR+iPFfeI7/hyBxXL/4quMu6Zp+g/KI45Pqw53NwxLfPSOcJ4i68pP3x
1UNJN8NjeI8euDa4C++p/9TI50BHyvnbczw8Px0OsY7xxxUei3FnPpLnE5+Y
j0aLM4/+bzysCn3M89JDxQH1jPgb64r8Cb5f5Iefy28W6zz/oPh587Z6OvfQ
PGwep7+ZN8ybOX+p73B8Zd4wb/Kr5vOmndvcKcqR30S8OT1NHGGO18LZJQ98
9AfPuTzxFT1OXivvpXvab+i9ON9QXFU5bzR0NBxT/Hjx73GPdd9/l3Olo/3p
l4uTrpX5il08IH7FbfJoaS/7G1vyGNxW4rPkdcBJfYKfPhJ89U7wzmfC/nb4
Ca/62pI33njnnJI3oYWPLq5NvGzkJ3vcdWBl4zb2CwtfDb7pwhcf33beP+ar
iTNqzya+unXUi9/545/P2YCvft/l9QHPnXRR7cU9Dj7/1j6/qFmXy/6s5O9j
t77Tr/RH/TnrVCV/+L9o9/4yX3mf7JOSvRlfid82LsVx4Rb8c3FwPZ3K+Q9F
50x8JQ4/50dVf346417cQraXfJvBXTnfRa+kR+X4rsxR9KVrk3/NuS057hqH
yKdU4lVSvLdxkP13eCzrWuYx5/7kvGE4OfeHfP4R7hV3l/3Rw5rEv9HftEM+
BzDnj5rdRGdjzzobf6U8G74v8Jh4J+3zRtgHJrt4qoWxLqkP7pKnJ+83dL/v
8VnBV/Slso8v5Vsw34m/KvFj2j/KL+djxnPtnuwln0PwqnYreVTC/yiehR6i
PvhTfeSZL1wX9XeOj3zbOES+rEuDr3ApnQp3aR86lXyq5fyR4CXxy3gDX9Eh
+JtuCDsuKudcp7xYeEMc17ywi4PqF35G6y3/L06Tv8vz8jOKwy/nD4afUTnG
NT/jYcnP6NwcPOZ++UVXNeEu+or4EP1vZopHKv6vWMe7xf6xvvJHhZ9Lfg/j
UP6ntv6pJ4reJd9Av3/CV/xsxa8X83XWr6wr9D3ts0szDkx85X7fGzOiHYxf
umozvsI7m0e/5U/FV/qVPK3i081LzhOSL8v7ynlKjVP+S9xlvPM7ylNKB6B/
DeZPjPduvc35SX2Pmn/9mfM50EPoV+YFPNfynu+K8frHWP/uq34i+KlL6Fc9
G+X/LPhofEVeqpa8pJOqM7vv+p9jr5pa+cU3Fj65+ycvqNCfZp3z1WWf+PFP
Kqct7HHd8NcPCF1qp8JXW886e+3p2/zrfLX/YaPPueB3G/LVcSPuvbjz2Itq
Y7e7crv/6PuL2k3p3D0csiCtg/gz61H0pZmJc7yHZvYFyd/nvBt2ui+OHpb4
SjmZx8RHyQ9gvdaP5PuiO+F66ziO4pc+LcWJlTyWaT8djrJfoPg3Yz7PeQxK
fqQUz698/Kb9fReIf8t5liakfW36tXhs8VEPJE7IeQb49XLepzeTvmR+488V
74AbZ6R9f/dHOXheOcZnPr+yxPWFPcfF9UjtZh5YEe+RX1s8Xs5bq/4Pxv1T
Er/1STqb+uMu+woPSTyW85rmc6W1Z86LZX6Tn62cFxDPi4usS2VfZPDVCcEn
8p/Lq4BbOtB5ws/419DxrDvdUj5SPEx/w0uFn5Pe5XvcOTUPBrdcJn4snSvt
d9VTfL7vu1PTuTw4eUns75P3UTx8v3Ten3VtScSZ4xbcODb8cUeE3Th1zqD9
icZXv9DBxIlpH+cV0i38rvN0Hkl5J/J5hXRCepf4fHqjuK/s3/S8a5Le5Xn5
o7wX8fmrxe1HfeQ7xTO4S1y6OCvjQtykvALGu3pPjzgi/MC/iLsujvW17L+L
dX9mnG8nzsq+ui2i/fk96XLGI76iU+lX5oWcp9R8LQ7N+/Kdtip4Dy/hK/5B
drpt5it8j69wsveHr4p/MN5T96Rr0RlxKR6Rh2J6cJTfFQ8vrqrES0T9hiZd
S/4I70U/FzdPd/Deza/O3XG/daP4B6N8uqnfs39N3Hs5JynW2elxLvSsdM7h
1g2umhn5yS6rbhP5SPkDO8af7SM+vvd3Oxyxb8/zWrhqvx9WXggu+kHfqxZe
uM8g5+sEN00s5w9O/en1Vz312Dl1+8R7jpnchq/Ov/BbtXcTX31z1t6vvbX2
3MpOia+mXXRT55v2mFCZ/adbRo++7fJa3veHN6xf+AfPzmnCS4UHQhcST/dW
0pHoQuLVjYNpad+fceB9Zv8RnqazWd+nJE6zLnuu8ek8nS5RH34ovIFnTov1
zvd72XcW66/6mP/9Lh4rfq6UBwNH7ZHyV2T9KucNw1fmA+XQkazL7NZr95sP
87nDxkmzvJrrmvAV/2POqy9/FB4QJ9w95Yk1nzc7Nwcnl32O8V72TO1G7xqe
9hfYH6N/4mr8LB+I/Vj4rRL9ql+0G/8v/3jOt4aj/lW+wjny7pj/b459f/Su
cm5j8BV/q/bPeavkfxZvhqP0T/5B/jv+X/5E3+XmN/FX+A3PzEznBvL/ygsq
jt3vXhz7+8Sfi7+Vb4Ef0LjbJXjm8FiHfb+MDQ6RP1v5i8L/ZR3sEfuT5JsY
FutGyzxzZ9knMyL8Oy262z2Rn+ipwmnWr1NSPNVl+CR0MLyEi+hg6i+ffOfg
MXFlZb9h8Jh9ab7/x8XvWp9xEQ7EKXStnGe+nFcob2rwEn2Aboa76GnzI76L
/6rkRY95tuRRj/dI1+qW4sDZ5XNyv7jJYo96jov1g04jvlF+LedKe17+BtyV
8zYUv2fcb53DV9rH/Ci+qdwf86PzmXEBf6h9BO5vxlf6vTxaxjudcXhwl/vl
KcVX7qfH4Sv9xPmLuIg/XT6HrqFLeY/ylLKbx5RrvS96V8yL/jSPmYfcZ97L
fEXvEhdgHcVX3WK80nlLftSIe+8u7j3yZ8nn/qHgq67BYY99ePEj0647p5xT
+GTEZ+17/qsLqn3Gtdi3mVTyj+KrMzrud+6Yh1r4arcebflqwthvb8BXH658
r/9GG523AV9tstHGV/96/wmVPZ89/pUDf3d57fTwW4nrpi9OCLt9Kvg38xJd
a6/EV86fbBaXLg7HeJ0mTjvs5byb4LfT0vplvrWvzTl0/Ph5fyL9im5T/CDi
wcLOv6O/3JLijgamdTZzyJnpd/kN30m6lt/NfNUh8ar7tQPe0G45nn9s4hB+
2KzP5PNcch6D7O/L8efZP5jPZd49+E07mx96pveb82XRJ7WPfFnZP6gd8v5Q
9+d8IPaxDkjtlv3dfjf7Bzsmjsp2/lb7Ciendij+x+gPNwTnDEh8xQ94bfCP
eQhHifvCsWeEfcfEXXsEF/F/iZtyrp84n64xr4mHt99Q/elaxoV5WFy6enov
1yf9x3uxr1/cy8z4jpUHoFusG/hhUKz78hVoZ+cvi5sy/1yX8nlqH+NHvLHv
ZPOU/fiz47uZzoOj9HN+wFlhL3HpiWfwFX1pq9AnxJVlLuJPxFf2Rc5LHJXz
dNHxlFPyXAXvXZJ0PByIo/BVV88b3CVuyvvqE/5B+ykWx3ijC+EB+jhdS330
+15ht777XhqRdCQ6FS6SD0Rcvbyj+ME6JG+D9rHe4BHl08f5B9nVR3w7rjav
seOHHVM+B/Mkf/aw4Hbtg5szX+ln3VLcu3g7dvW0r2CovA1hF5fFv6d98vnR
3ot89HQH8/ayHJcV9nJOdMynONY66U/t1rb9Fpf1unf0r7bnfJvnW/OR0iW6
NO67tnBV38hLKl/DR8IvuFn4Da/YpdMebz57bmX03B17/2n2DyubxN9/4oIO
q7/11nG1Rt6sHxxV2yn+Pb766rd7LvzISZfWHg0ew0tPB1fdmfjqtu33+k6H
o45p0cH2+0nZN7jrgb9b8MRuR1dePPrP8wcf95uSnwFf0QvXRJy2fSS4K/MV
/rwlcRTOzXFW/InWWevd0mjnvA/R+zwj8RVuacZX8qhb78z/8jHSd/UfcUrW
EfXMulbRkRJ34QTruPqUfPLRbvm8ITpMPke7WV7WrIN5LjyZ9xHkOH/+ssxF
zfSrrMNoB/Ok9snnWd8Y5eR49XyODPuCdL9yZjXxV4oTeyXZxat7j8b57KT/
0Fvkd8ItvovFEfn+Nh+OjPvpcsVfFlxU9CXfifG7JX9p0p3E2xd+a2KXF6Lw
T7zHnL89+9fEaVs35X1yDp1zV+U71Q7quTZxFz6kO9G7+A/sd3OujX4rT5nz
RLpF/Cp/kPNK5MWZHH4reZNw5q7JL1bOww1dSHy77xR+N+3QNq91a34q8zrO
UX/zg3ykzvfxnbU22hPnGBd4Rnw7PsE/9Cj26xNHZb7KcfLs8jxYx/1u9pO+
GvHzeFXe2s7Bt7iLHc/Yl4d7fafZb4gP8RUOUY5xIn6ph337iVuUv0viJePx
2uAuvEfXwsmrkn6V/YblPGi8HfVnN292T3wlnkCcWOGoGOfdk9/QvsJmfIVr
8A+O4lel3+iX7PqD8x27OWcn+sOw4FQcJb4R/4kjL/s1oh70Lu1mnbeulzxj
8d/WY+VkvqJbGa/GiXl+btKnrLPi3umA5bu10b43h7/7thiP/13dKHSr94KH
OjTaZW71yHOP6HfQh04N/+CFlY3Cb9hu3f+seGTtWS32id+rbBHcha/G77ni
mW1O+Nf56th9x797z9gN+eqE4778+Cmjjq489fl99njkmN/UcpySdp0T+9rs
O/He5Heiaw1JfkD9ulm8lnUBd9FhljThK/O2dVxeSjpY1pH0A+um/q7/0Ad8
Z7D3Svvgin6S8g/wS+IEvDE18UzOd5Hbx7rjfKKsX+HV7B/MeU31a3FuWb+a
kLjL+pjjqXAUP2DOv5H5hz5A78I51qMbYt2nX2ln8d7iw5UjzyddSH6GnLfc
+FsW/jX5aczzu4ZuI24HV4hTGhN+rq3j/ltCR3op5aeaHfdnvpKfQX34O/jd
cIj5ZX3iFs87IelO+tuqxIfee84LWs5JT3najTvx6vyGZV9J2MVTmd+UX/Jj
xDjCUc61se/6+vAfWQdxUT4Pbl7Mm5eE30T+w5Z4jDvLeOgS9/eIuOhdgqPE
NWkHehH9Sr+lF9nHJ446+/XM4+LGxb/43cXBXfJnup99WNj1h66pnLLvPOls
ZR9V4iv8IB4eL1k3Cx/Gc/ndnE/eOs7fJ3+XdVA+KxylnHyujfqIM5eHSvnm
ndnBJ70SX9GjeoSdn3t2+K+8F/OIPATF38f/GP3qXhyV8i3I/2bdGpk4it+Q
P7HkZwh+G5bitcyP6m+eUU98yJ75il08ov182t95UeLN1bPoyPHdYR7DXeLe
6aLyWdCvin9Qvix8FRzbNeonLxbuknfe+u37Al+J19GfcYFxyG6dyXyFQ0te
h1gXPB9+wmvisi5s0+6LY7/mf5d8DS1c+T/VzUJ/+lvsG+za6MdXVCufHdFp
m1fEtR9b2Sz46sCbvr/RRudcFPbDKlm/+vnvJr/7qZ9P24Cveob/767EVwu3
POprS/ed0FLe7f9R+OrEGf/5+82+Pamy/0+OHfGLY39TG5XineiF9qkV/1Tw
798iv6V8JLj4nbD7nvA+5T0wDvCSfX++h+iH+EQ8jPfZK+ldysnf++V8h1gf
y76hGEf2bV2T9Kt1sU753tIv2OkPOFxeAnY8cFPWYaKeuNE+FXY6Xjn/Jfr1
BvwTPMaPWc55iXpuoP+EvivOCs/43Xy/3x2eyj84yrfua+eSfzg41r4w84b8
TuJzrMv0Q+t7zmdFhynxafG+XkrvV7yQfAW+f8Vdi+cRT7I85Y9Sz2FRf/nV
rYP0q8xFyumY9Bz5zN2v3/IDKh8XZT3KfMIP2ynei/gxfkbrGD7nH9RvxYm9
kfJZlf10wUvOVbNudov4c/URn0afWZP203WOddm5auIqfIfYz8QfQOeyLkxp
cMb/xLz9RCnnkrSfzj4+7YNbij3qQ78S51LyjoYdz1incAudAEfxV4o7cr/9
NuKILwl/Bt6wjnUPzjRv0mdKPsXI+4SLrDPyutOvjFN5G+h1/L/90rmH1nf6
Fc4s+pU8pfx99vHFPI6HewVn8k9Yt+kOvqPEWfEz6jf2FTofpeThDH7A4b5P
nANT1mW6VnCU+Va/p5t57+wzkx6FxzJH0Uu7RTv4PuL3XJbi4b3f5fHezTPm
R+fs4D3fY8uCr/ACP32X4Cv1EZ/Hf+1+75XOZH+E/YZLE3fhTv69ntHfcKF8
6/q5/Kf8fs4RlFfL/KJ8322+x/C/92MeZ9fvzNf6p7/P+w31r+x37BL7Ci+O
83S6R5ykcwrbBSe1jzitZ7d/6MK7jzmmdmvw0Ebx95MuvuecDlt9tbJR8NJG
D2w+4Mpl55f9g3uH/dh//9LQ2/du5SU8dW/bOKuSX3Riir/y5yE3H7DklO9P
q+X8BvaD5vNTxL1dEroWLhLXxE5/9f3rHGHxM7hF/DCukMd4TdKj2FfH+m5d
Nh7fTHmEBoTduo8H/K51zfjGdeKKrVPiZvP94nLPSPEw4oTXJx7zu+zK0S/l
ieLHNK9OT/FO1ll5yEt99MPgAfktre9DU57tLeN5T0n75XHC2liXnR9nPRXn
bL7k/6IXiWfGseJ/5I30XvCSelpf8JX3q/4zE3fRCemT4rQH8WPGe/Fc5uFl
0W4vpnhvetrO8bs4CgfumNpZv9o51fPGxFH/jK+yX1I7LEi6n3lmedQ/c7L8
pfp/yf8Q/ix6iH3R1mv5gug2N0T8knxE5ruLw08nDjfnk3ww5vuiz8Q4tz6a
V+0HkDfJOktXyefC4B/73TNfXRIc5f06l9m+QvO78wTV3/e7/Azs/DX8hjjH
OC0cGNxlHvC9Z98Z/w59HE/OjLgv44e9hVP+VOZT5fjOl0dUO/Pje1/i/L33
nNfU+8JvuM79+Mo5MvRG6wGetM7ql/y5dAfjlm5DVzEv8AvPjn5Iz8EJOJxu
i2esz+wlLj3a3/jRbvJ1GG/4wjlT4+wfDO7iZxSfgfPb5iVv5WT9hM4urtx3
ivVG3Lv2995XRvyV9qdvijfP50Tbb0hfoifyG/oewVfLE1+Jy6eD4CtxYPZ3
Ge/0lXKOWtwv3sc86P0al+YvfKj9zLN4FV9NbvNeW7nMeBb30iPiCOY0nuNP
ZXw553m7iGvfMvYV3nzyksG/+tLpFflH3w1969GTD/vg+G0nVj4T9hN+edr/
VM78/gZ89fGznznjl4OmbsBX5zXhq891aKt3+XPBkgGHL3xvVk2cDz1Yf7d/
DdfLc+bcFvoSPVL+KDyGB+hg5iHvZ++UH8m6zB9nHSl6SKwvdAP7cd5KuhO/
TM77XfJ6JXvxV6Y4ZP0l85J+wZ9ifOdz6NSnnMsZ9uJ/TOXYj2J8vZF4rOS5
Snyl/ngJR/me6Bd5rfln8EPRJcR10CXC32F8mzes13QP67t9YTiKf3NE5IE0
v2rPnAdJfxBHJM+nODTtL7+69yi/gXld+fYv4DHtQP85OL0XOqTvb/OefoWv
lJM5XPvjrvxexDW9nPgKF9FRreN0MP3Bexdnzt9S8p/QaaP+/NfOi8HJ+F/8
knUWb8hXOSP8KdZN+ZTwTz7PVznqL/82PwZd17jiH5kZ86X7+Zv4c3HgI9E/
zcN0rUuDH/DbjSlOyfw+I3GUdUq8el/x57FeLAu+wi3GhfbxvNYN8aniYsxj
eJKeg2/5j7rGfDo94t/sE8h2/jLlzIrzRcRniBvvGZwsnoq/z3eo85rpH8YL
Pxpdi51eJ486zs9+scIhEYch36b1km5TzpEJOz0Ud9FPHo77netX1l06WJSj
39JF6Yf8ldYJcVP8lYOiPelaJb4r1jPnZftd61b3Jnxlv6FyjHPtg6+2wNXR
PvZX0ltXxPOal/hxcRDu4Aelg8jHYr+BuCx8jv+s03RL7UgfUc6AtG8Q9w5s
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
Fb9rfuMnLflIoz+LJ7MfjF+eH8n8wr+Mg30/zwv7sOAzeb31T7+n3dTH/kH+
Qflq8Jz1jF/D91/eP2j9N9/pn9Zb66vxxT/YNq5uUamv+6z7feI9XxLtov23
DL5qmV/mh//jlupRv+3xucVfOKryqeChDsE/d85a9Up1429WRob9oRv33/HG
v/5gA776zRGf+sOd/w/8gzt1G3byxI1m1x6OeCrj0rrzbuwHFP+If24P/6B9
GPwXeKnkgYx2rSS+0u59g8dwmvdwWzp3xv04quyPi/Fydjr3xLg+I9mVj9Os
/97jd9M5jOWc5XSei37k/ryfcVTiPf3vzJS3M+c1sj9O/8JRxqs4zJuSH8q6
I/75xBRXf0PoQvbZmWfkqZaP8aPR73G2cT895iv6mu/HHvHdJK+3OIo54Y+g
b9oftG3iq1m+j6PdSt7F4DX5OuyHWsUvGeMaP7h/MQ5J/jJ5a8WZ41j9eXnS
/bzfPSM+P+dJc06x72Z2++/4Z7X/ktCX8Kl++EY6z1d/5r/DPyWeJ/gKf+o/
LfPqMyWfp/LFxeFP/Vncnf135jn+NeutcYRD5L30u84pVh+6GQ7J+aZ2TXxl
PrdfT1yT9Tffb14t8fCx3uLDIcGH+KTkA4n6+L7wXDmvgnVheYyLEgee/IP0
BvEq44L3xJvhK/ob7vJ9jq/oV9abbDcP8MvT03AUu/s975jQx/yucuzf5nfy
XZb9g+Lb8e7A0DNmRHy+eM1lbeJ07yvfCXQU7cwPKJ95yX/CbxhcpJ3t81ya
7sfN9gWI07afQX3EsWe+0n+ca0V3Mq/So+2LFEfNz8h/jUuVg6+0fzO+0j4z
k3+Q7oZffOfa71f2z0c74y7noNBj+V/xVdkXHN/JdCm/yy8rP4N+kn8XX9mP
bn70vuw/zHxlHrK+mse8T39f4l5iffD3+EHeX3yp324ZXNXSDtdXOzc4rFY9
/qxn3n1rwXdqb8f+wecjvn2L2qren9/+1JKHffaVq7cdfeaMDfjq0Cu/f+i1
/w/i26958JJLbvlgK1+Jj/A9SNcSL8B+RHDUdfSlsDu/uOTDjHYbnbirxC+F
ToWv+GPFZRUdjH4YfsOcr/LMxEXmc3mfrPP0SPm93V/yWCa79XFW+l39KPOb
9TrrZsrht2oWJ+8cE/1zr5RHwngZmfQr94sLEl+k396SeMw6KL9BOe849N8Z
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
2ufS4ChxUNr/zJTnSjtkvtJ++KroPHTR4KscNyX+KtvpUXgMX7EXfSn625xk
t770T/Hn7qfzvJR0sJzPnD3nWyj3J/+dfrZX4ih28dglD1K087oUpz0l3ou4
d5yiHZyL7b3wV+KuRcE72l+8lrxE9DH85nvO/eLJ6eXimvCG/FflOzHm8xLf
izdi3l4Zuri8NPQr669xVnSz4CvlyA9pnpaHGXc9mPSZTvaLxXzWIcY1vYv+
ID425wHgH7wh9Ch+MfM5/5rflc+ZP07+MeNCXPojwUXl/K/gJXxV/Fxh5+8r
z5v8g/iKfzDvQ9w16lP8odFv6XiHJ76yz44edXDiKPvmtAPOeagJF81OHFXO
K0z2TolDtA8daVbqJ/YnZn9fx8RLJb9h7O9gt45MSXb61cvRP3N8FL+b+tP3
xkYcVO7P6p/zU7Grv3VHu+GrHN/Frn/aj8Aujmhh+l3vy77FWeEvK3mf5MVK
eWL5OeSzLOdoxzwyM+2b4xcXN+V7ip+RTkW/8p1T8mLF/fRKcVbKGRH90v5E
7dMjyhdX5rnEp9oPaN62HtgX4LuDXyTnZyjlyCsSv3tQ6FQz6PbxXPL9icsy
L2mHooPFeiQvRufQmYxT+wrlsyr7aOI56VL8edMSX1kX6Fn8gdZZcV30Ku0m
70vJtx7jovgF49/jBPOQ+dq6dkniK7xFzy751P5FvuIf7NSGrwbVKsFRa8M/
+O1po8/d76lTa3uG/Uu1k3596GU/LP7BS37ZYfBe/X5Vm33kHTsvHnd04atZ
s958+J37zq9s0eY8nemVM+85eM/P/p2v9kl81fus5b844E8Ta6df/tr39jn4
x7Vm/NMr8RJ7z7xPMNrx1sRF2if76ZrxUtkvH/HhOKctx77Q6ndLfsNDE0fl
/PMln0aUk/NlnZHOL252XnCpf3CO893a7gdpjVc3LnoGt9CvtJu835Ni/PlO
dL6MeEnx2/IAjEl85dxA7TAo2gFflbj9mFfFa8mTt23MD/JnlvOX43edF0Mf
w1fXRfz8/fFc+KrkhQh+8J1IL/KdapzxK9GpjDP5HB6OebrkbY51v8RRix8I
7ipx13E/Px17icsKP9cRUQ4uYt866mle5UdTH+spfW+bKL+c4xZ6kXbwvEPD
fllwkfvHBS9dlnhsYPIPWr/Em9GjPO/rUR/7q/CYeCr1L3lqnEcT/Gn+54fF
S/yAxW8bPIC7ro34qEtiHednXBLrOx67r4n9gWTPehd7jmMvebdCn/G+nJ+a
807wi41KHOV8L/61st8puEt+sHJecOg/7sdFHVN+EnZ5PrM/FJeK+8p6V46H
H5z0QOtUjre3nuE95yArh78+85W4W99BxlfxrwWf6G/0nJxX0/PYH+d8E1wk
bog/1HvFS7i3nEcevCCOfXk8D36bFfpYzv8gD9jn43sD/yjfetMr6VdF7wq7
/kyf5z8tuj3dLHgH95bzg4LH9P8cV1bigZ0nGPW3XuArfkDrHX+AvFj8nniL
38/93of4K+s7LhNXVc7BSXylvw1MfKXfWp8HJLtxkPO24yvtK26E3kmHNe91
Cq7qEH92fT9fTfxebZvgqE2Ci7a7/mOfe/n282rbh33EN78+45Szzih89fd/
ddmAh6+obT74rUHHPH5q8Q/ud2+P7x67aGalS+KrNd/6+gUHdJtX+bfEV994
cbuX7tt1QmXKVsPnf7337Bp/2UvJH2cfHN4o+WPT/jvtRBfKdvkQ6KyF31Le
A/O8+PD2ibvy/fzL8lxl3WlVioNqux9hQ7s83nSqsv89zltpdm6v7xLcTney
70w/uyk4Ku9HE2curzOecb4wXUv5+TwU/XNF4kDtPCFxY3m/ocvJB2P+lH+A
3mVcOC9Y/ih+/66xb0474Dr6SdnfF/eLU6Lrm4fFO+EuOhK+OizFTdGjRiS+
omvJd4pPpiV72dcfvIFDtkz2R1I9u6b4+ZL3Pux0IfPEuOTv895nhB71aHBX
yUsQ97Pj88GJ0/RPce85vovOpj50Bjobu/lWe5bzZVL80ry0vvM34as5aR3H
V4V7k555UbIf1sTufu2f80cVPg+Owj94Tx5yugQ9R/6XUWEv5+vF/Zk37Ksd
7X7f78Fp7i/+6KgPvsp51LN/M+ty7PyG+LDoTmFfmeKy5B8r9ZGvIHiPvayP
UX/5B+i6OMq5hPxf4jhHhr5ivhJPMCv4oXz/xu/ZH9cTX8lDHpzQN/x96oGj
rMerUhw4P+bSsNN5Cl/53bjfeUzmC35J+oh5k05V8ljGOiT+3zgt8Q/2J8Z7
8b2Nr/Q3ehc/oP65Y+I966bnVf+SFzH+fearEfF7+Kpz6FD8g8698Z2b+cp8
gq+cv1L2AwZf0SnKPsCwi+/MedvxmPY0DjJf+e4xn5qvmvFVh8Z8e1P5s3PE
XzmH+cn487nQr24cOL/3EX+bVOsefDVl3+2O+9jbU9/PV0de/dgVtT0vPen1
I19u5atTH3n4sHMWbshX49/dY69Z/4Cvzv3TTyfuc+CESrcd7n9lat/ZNXnO
8Y91/LuxLtNJ8npd8i6G/cxk1350Iefr4ZNbU1xQ2WeR4ojYc95O63WOL3L/
zU3s8kkW3oj3j68WJfv4dH5uydcdvGSfjXZw3t+A0Ik7hn142McER5l/xDvh
q3w/jsr5B5xHYd7j18Nj6mPfIn8f/mE3X/L7i5N3P33MuTaeV5zkqRPqV2t+
Ku0sHyZ9ybqPH9hxCP3HuW/iXuxTy3HpnZN+Zb6a3oSvrm+iX7HT6d2PQ7ZO
9tdT/JXxkvctei55vXL81bAUB9U2L02rTuV7FkcpH/94Xn5J5fDr0eU291yh
E7LTtfiV7IukX4kjwlcHRjvjKFxE96MjXRr3l3ykYcdL7ONSOcVvGPfjpeI3
DE7IdpxjPTf/0x9KHl16QqybzuUxf9O76Rj0DfGm9ntZ35236nwSnEMHmy0f
QqwfnivnVcBFa5JfVR6GnP+KXdy7uDL86XfVh38z62/yl4qfxMPFLxa6iryv
5mXtaTzKb0LPKfv7ot4Xp7xV8hpY3/kB6TbyEGg398v/NLfNvNean9w+M3Ht
ha+i/BXRvkuTn1H8Is7B29azmUmvs156Xu/R9ycdDz9cGOXQqbSbeZ8uVfTt
qL8496JfBb86x5l/EHcV/2DwEz8r/yD/n/gtPOV9iSPGYeW85vgdfMW+OHFX
23O3F5X5C4fn+Hb/7ftMO/p7cXZ92+iAiyJv2k3xXXtT5Av8XXV5cFWX4Cj5
RccvnTPurBU/rn0p7L94btydd9YmFb46euRLV922269qd3Qc828XPHZU8Q++
/YEfbn3sP/APjjn70m1Xnr6hf3DZZz//zMU3TqyN7Lpo5ctH/bgmHrvkXYz+
I+9ijjvKOk+OR8Jj7MrHV9ptz3TujPv3apJnO3PClGTXf3P9T0zPxf/lHDp2
fj35DdSTHiV/QvEDBv+IZyznqkTeJHnIcZT4JedQ4Sh5kw5J9ysHz+T7xUvq
j3Qw/v/SzqE70a1z3i3vPZ87TO+n/8rbUPa1RX1uDI7K+/jE+Ygn977oP/IR
ma/4y/gHtQM9yn435axNfkbjXTy2+Cjj+obEV8oXd7RV4ig8c2TK87C2CV+9
luzmz11SvFM+f5lupnzxWpmv+CVz/lV+PXyFu+QZs4/y3qinfXb2Y+LADmmf
Jr7CUfMSLy0MfYa/qXus4ycHV/SJddy6zw+1Ovnv6CqjE1+Jx+uVOCpzi/6/
MPLC4Bz8IL+/dZC/xvqIr+xrEDeAr3C+/TDypeMWOo/1Vzyz/IB0GutI1rX0
k52Du8R96VflnMekg5W4+uTvOyX5AfHJ/Gh/7Yajljh/IdqNfmVeEK++Vaxz
7PbBKZ9+JW+8+dC4zfmvxJfLN2C/Cd0Gj2lPvyfuyP1Dg1foOfSOafE+BgVf
WaeHRfuWc6XFfUX/po/hPeenOs/a85pP/b73ZZ1YJk+7fhj34yj9KvOVcuiM
8rjq//oxvU7exXKOc9jpVd0SX9G15HegU1l/lWf/oH5lvxeO0g7WDferf+ar
tnk/3pf/qglfmd+8T/lFm/FV9+Crp4Ov2gdHbRxc1OftWz+9YLtv1Q4J+/4/
urnP3ad9r/DVRsc89MFXd/hV7bPvrXvo6BMmFb56Y/cL5xy5+PzKJxJfnX3H
wv3u+jtfVRJfzR/x1smX/m5ibbdHhqx76L2Lam8mP5f4nAmh25S8i3gm1l92
68LesY7n847ld8rlbHBObthzvBP7m+kc5xLXHfx2UuIovLd9yntwZjzX9qn+
4p22SPXP+pL+syrxkvlqedjt27KOr0x29X899Cjls78ZdvoVe8/gq98m/+Np
6dzkfJ4yTtOv34r3rp3pV7eELscfiq9ej3MD+fXEieEo52CoD87hBxmQ7OIv
St6ktD+xmb5Etyzn7MT93ov49jnJPi7ZcdcpyV7O5wqeyX5D+pX6mA9wGq4r
+QqiHOuM+UU5OX9UznOFP9WfjsdPkXU889IuKV8Bjsp5BtRf3FTef0cvEh9F
p8JROW8AP5o4KPpP2deQeGBMlNMr8Qa7ckr+xvDf8SOZn/EPzinxRcFR/D50
D9+H+RxAulbJ1x3lHxI6GP1qyzbry+OlnJIvNOqZ+cp51tqtxL0Hd1lX3d8v
nWOoPuL5czzVrnF/9ldqfzpVic8PntQ+/Ibma3mo5Akv3BW8o3zfpfyGxp14
CHyU81bhN/O85xyUOMo+Pfvb6E7qNyXii6zH7qeD0aPwpXxc2pn/GLeIpxbf
hnPkozBfzEx5JMQB5P2Mvp9xFL3d/krxU+7nDxbPP6nN+ri6+P3EoXtefIhD
s34lDgtf4S3cRI+iX6kPv005rzfFX7FbF6xX5e/Dbj5j1098b2X9K/OV+zeX
9yr4qtf78zN0mFbrGxy1Q3DRf2w6q/+Rs6aW/Awv/mGXF7f/zg8q7/MPtmt3
+yW1xWf822tHjj29+Ac7Hbfzs2/3vbzSI/HVT9eduXrstZdvwFcLPvvB/pv9
dGLlUy8uOfWCw2fUhgQ/bB79wvemeCHcbT6fkc4R1l7j0/oufm963M/u+1fe
bOPPeKcjWd/9Lr0FF/Fr4LEdEi/xc+2Y+ApH+f7Qz/n1/ivqU+JtgmdOSnoR
PSrnRcdLxlPR/VI5/OZLo5xSftzvPD72C6O/3hh27al9+oXehbvYu8Tv5nam
j2ln66Z8794ve6fQncwr9onjGfvy3L9bOoel6DZh5wc0XoaIr05x48rfKnGO
fOP0HOW7nw52fypfHFfxT8X9s9P9+KpXKj/7B9lzXiz9am3isex/zDxZ9kVG
PdnF/w8PXirx8OHXG5E4Svy5fJgl30LoG+J8lEM/WZHiq53DMjPdPy74Z2jy
W9GX5Cso5+TG+k4/0D6Zl3CCOKheiaMyzygn76/3u/xZuIudbq6cfH/Wwez3
4L/yu/yJK9P94rtWJfur6XlLPsbgLuu/8vFt5rF+iaO0zxJ5J6J8upzzCnGE
+UG7zUrtw98gH5Q4og6JP4t+SCcMu/5m/uXfy3nj5R/GD86FEn9Fv+IHxBPd
Ip4KlywN7pL/HN9cHDxBt+RH6xq8Ic5T/oWhwSXOH8ed4sS6hw7mHB12fk96
sbye+rPzcfgHy/76eN6VSd/zXWp/Zdt8m2s24Ct+3JLfPZ7PuYZl/yCuiv8W
F5e5anD4Cc3P+Clz16RkX9imPywq5bKbz9rmdW2Nw8rxW+LpvD/32zco/qpH
8NVT+1z++5P+dl7lhtCxPh1cNGqfUydc3+/MymbBVy37DH9UmfXouN473nVl
rQ1ntRtTafnz8sJZ+0Y5m3718X0v/sFVJe/oh4Ov1p+y2f3Pv92al/Qjl370
Mzu/ML72eornMa7pNnQPz717rMsnJ97YNez0FvM8HjOerI85Drx9slvflS++
yL485csf9ddkd79yzBunJw6cEeMXR/007OJMsr5kXb44/GX0K/4X8UhrUl6j
lvH+lw321ztfz/jzvEPifvGPbc/9/MsG/sENzsGJ/ros+M3z+t7Eh9rHd/34
qL/3QrcVN+W52Ok2OKTE6zpvN+YP49F5beYV5fBn4QrfM3Qq/JO5y+8ad+LY
cYv2dz+9CP/zG/Kvub8ZF+GrrdLzir/iBzSf8HuKv6K/4at5ia9wYK/En+NS
XnHt+UrEOa9IdvkxZqT8APxu9mMZ7/bHLU/ruHXf/cZXyY8U9pK/Ovxi7OqT
z2cp+lXwiXWMDjAu7MOTrlLOBQh72/M2Hov8Ja2cQJ91HkrhupgvrNuFA+N+
9mY6mH5bzoEKu/vHpufiD3LuxYyoZ9kXEFya9SUcxZ9W8iClfKHlHNLQtbql
9zUova+ic6Zz98xv2pM/CqcNCh3PvoDC89EO5dzDNutkK8eqv/NlcB19RHwq
PtIOR4gzCL+h/YP4TByX9bhXcJQ4JP1KueKQ6FRlX16UI6+C/Mh0n57BV3Sz
DlGOPJij4n3T38SD0Yvl79JPfO+tjPJwCX85Pirf6fE+cvyV51rmfJvgTfFb
OFO+K1yFS/M5zbjIe/R+5Kc27ugEHZvwlfqVvApRnn+nH2a+4n/R3t6Hcuwf
7Jj4qlPw0x3BVy260aTqyzvcffnvhu9e+cAhs8/a9cTjgp+OrW3y4VG7976j
la9+3/59/PXyZYWXdg6OOuDX0z9y/L+38pV4rllLp7Zf8GYrX+3U55nz5k8e
WRFXg5c834JYr3GXft4jOGTHtI7vFnw1IO63Ps5KfGVdY7eOG6erQl/CUdl/
x26c0tnoUYVngg89V4eoz7rES/waFydukZdpaOIifNJybsRfyrkH+tvyyOtI
32B/I/xr4pO1A7+bOGfz/+AmfJX1K/a16bmKnyv5JdUnt4Ny8KF2K3ySzvtT
/pAUf+694yV8lc8fmZv0InkUcZd2cG6vuCDrER3M707CvcFXyhePRO+Sbxzf
Ol9P3h314ZccneLAxY/R2egA/KTZb4ivRqc4dhzoe7dwnfP7Ur4p+/HlATIe
xyY9quT/THnys+5ED9EP6Uv4p+SvSPvjtKf4omFJD3E+Fr+Y3z056Tz6A93D
Pixx49Zf9nxOMX9I4asY//QJ/dD8Ik5GfRbG/dYr7Z/Pjyt5U+N31WcDPyOd
J+2zy/rPwOAT5Zc87dHOvZL+1jn0K37SHP+f9SvxWjm+a1zytyrH+WTZr4ob
S34n+VfD3ivazfyJ0wpHJV2RHmhc5HOTrbPac2Vqf/GI4qbEq/Mry6vJTgfM
/kHPiU/KuTPRb8QtySfsfCA8RteiK9GPegcHZLv6eB56l/qIt7s46VT2K/IP
yovVOerpedmnxr/HdfIrLI7nLOfeOOeGbpX2C9KjxFOJu7pfvJQ8rTHeM0fl
vO14zX3maXyV47zML8rjBzZ+9KvOzh1svJ8F1c6NfnRrddvgnVXBSX9r38JX
p3507QN/2O8LlaXdTvrIUV87utYxeOmLV+2+/7znrih89ZGwr2mbr712eNjv
36za+3dzf1b46ifxe8cs+/pHtvrxTwpfPXLd6mHjPvqDStZDzKvs+AqX2r9W
zt2IdqFf8Ytpx+w3zPvs6GPG3c3JL2nc4Sh5efnr6U74wXpEt6Eb+P6l26hn
Wa9DR6JH9Wkzvv5S9pcoZ21w0ejERcsSX5nnX098Zd5zjknmK7qWds761SHp
vSxLz3VIagd28za+0v7a2fPm/JbZn+W94yjfZ74znD9ymDgr/SQ4yv4179F+
qMOSn0t+APnAzYf2u8l7yb9vf5y8657r+pxvXDxYlJP9X/bficN3P71LOyif
PkZ/Uw7eo795jyV+LMov+pu49KRHOXePf02/Emcurkn7HBrr9YykF3VIcdfq
+UBwUdeU/0fcOH1DO/DT0WHwiTgl9yvf+QrWN88lngcv8QfxW/OnsJd4nvje
97zGv/VQP/Rd5Pw449d3BR5T/6uT36rEn0R91NPv4sBeSe/CjfiqnBvIzxjl
2Lfo/NfeyW8o/+fcFM/Pbzg78ZW4rByvNS10yHlxv3nDOWfZvykf4qrEgbiI
rmX+ZKc35ri4lYmvcl4p8wy/ZO4POT4c75k3ZwRfzIp6ij9w/o568lt3j7gk
863vCvm47O/AwXhG/IP+NDjpXThJ/il8kHUzugy+x4HWTXbxVLhDvlT+vf+P
vfsO17Oq1kYfFaVISSOFkoQiioUuFl5NRN2KCKSS0EERkE1vIroxKigWQkI6
JUFERVSaCmpeEBVFkRpa6Ngo0qQp27bP/rLGby7WHddh7+86nnN959r8sy4m
D/N9nlnGuOc97jFmq6NS3yP+Byfh++ArOKrlERa+cv9s6tXlDdKtNFxU/566
LPhhfOArz413Xql+1Im3n/yO/6/h5ZpXfmRw3Y+j/lUP7vz+2G1PumL6Jvt9
onNj4aM1ir/a7U0//fTGx5+4nLe6avbYzlaFl44f+9DR33y0F1/9aq1/jK/e
Ws9vt806p/56YS++2qjw1Z9PGn3wV0/uxVdnn/mH6btf+vFu4iv+4rLgr9gf
+m3+t93nFXlwiaNmhB/PuKR996aIP7Ln+DHv2fJYi+eBZ/DY4lziNezq/MAn
9hd8lfG1xBva4StxPbw6fLVn4CX1CjK/TJ0o8SbPD63fvS/ihtvWe/IncEjy
bNar9uSv3lT9NB6yxlNem/dv8Uo8T/BOdNHOywtqH9Drsp/4fOfr9eL+ODwM
3UHz41GPkb/ur86kOo3rBY56Ou6Ve3+1qyPU7qer9merfVroi451v1v1bxwa
7xT689vivh7vqV3dePsFLvWe7C2+QtwHvmq6pqjLBP/MLTxzVvhBcSv+gj/1
fLv3pNrVk/ZdcIL2xv8Ub5Pt8k/wP8bzyci34k/hfvny2q1XuhvnIOtVXSM6
ZHyie0XwLfgQftK+SH2y/tU98Z5Nt1+8VvIt8JV8w3bPdY2nPDt8OF1W6uTp
4VMnb38lvkq9VtPD1zpp9cmNf/1u6tbg7dSPifNmfFB7xgfde5U4Cr6Cu9hD
dQzhC98l39P6sf7xjeohwFH8ivXD/rvvYXitH/7avlVHCl8tr7DpqfjByGc0
j/CPOJz4Y+Ir9xnR94s/4m+dKxpP1cffLatz7W0Nj/xX8VXjtYK3UpdhQvBK
cBOebGbipdC39+Uhe/FY+2uf1f/vd9in0+L/E+9NfNUzD5eMXQ2PVXHCdX+8
97jTTv9kT/zvqvnFR80c+/hZh0z52/7HLW9f9NdPd913M+37f/709/8b+Oor
8x85985/gK8O/tGuf3/fjF58NfKR3+2z9qKPd/lf63FQ6IUyPnVc4RZ2yD6l
/xlf/Uyo9Ykvcl7EV3yk+oFPnKfgH/1r9z6ex1fAReJ07BIc4l4S8zq8cEvT
QQXvtEa0w0X4q12inR6JXXKPSas/6X0Kt7R7W6pdvaN7o13/8JX9NazeH16C
T+A939XOrXE/nff5U+i0/S4cRRfEnjytHkI9b/2LQ7HD4qr0J+IydKfO0ey/
/vmLFteodZLtnneu197qaEVe/xrxfNMP17iJv8jDgh/gmTsingLX4cGc4+ij
xBPZKfyYOKD1n/Uk4Sv8Az4qdVDzg8fAP7gnLvXetwaPBP/QKRkHuu6h5deM
Ax343OITPA9XzIn7UPBO2s2LcxE8w55ar/CPvIktAkexq+4Bwlfwm+rR5z0p
6qDhFax/8ySPzPP2J90LXoI9cg8ve5+4y/vQfWWckR6JHsw4mMcV4nT0bPBJ
tdt31kN/7fY1fkw/DY9V/7sHn+l396x2dtjzi/yueGX1f2+tW3ZpaeG09UIP
Ly55dujl4H/xRL9r3OBYOMr6xEPitfCNrR5C4RnnajjF/PIfcJB9RDcg7mc9
w4XwC1xEryX+BkdZx/DVOhFnVIfK+3seLmIHvDfcJV7nvka69qZHr38fVL+r
3T0bcJV2vBEcNShw1axo7w9fzeoHXw2s9TiwH3wFL+pP/qD9ad2uVfhqjeKx
1igeq6d++8k9+Gr6rMJRM8fu+svbDnzg4RM74/f43qtWeuAdnScLR232/mv2
3uCx/3p8cKvPHnH0o2esGB/c4I2bH/mdF+Crz83c52/ve/unOkOCnzGPQ/tp
3yZ4D/toYuEfdtE4J6+CN8QLJT9zWz/xMnE0fFTqmthd+5QOCr7y/OWFWzzv
/H5s6YvUO9kx2uG6naIdbvli/S6d0tnxPsdFO93L5KgzaRzgIvW6jTP8dm+0
y18Th7Je5e/TS+P55ZGxq/JxxOMyLibfX34cPtk5N+/nEg+iaxAHcc4VV2Kv
nGfnRfxFfIHeuPEJ5Y/mhT/SPjX0xn7Xe+IbZ5edZ7czv14/5l1+ljqNrX6C
OpnFR8FdGfekb4ff6Fi108ngK+CupRGnc665vvxO45fqPdUZabio2uVvwAPa
1XE7vfyDdei8Qd9hPdsn2v2u+0fUCzK/8pPhE/04h9xaul/28/7AOfgr/Km6
PvCM8wB85X3wEvCV/unz5sV3OW9kvSZ2yntaJ+yg77JuxRn5d+sW7nLu4Jet
c/ui1QcLnVvWr5gSvBYcnnxm4ivfle36HxRx5JZPGnmdM6Idf2X93Bw8mPeU
17Aw9i98JX+h3TekjnrtU/6Wzk08F56B/6fCURVnEmfEU6mLhS/NuDO8vSzm
na5R/A5/JW4K//SNm/Tqzz2PFxta+Md6oLsSZ9RuP9DtwzHeQ3urmxd1GJz7
9AtnJV6Cs+Tx+Xf/P3uVPFfDTYGTWvyw5r/hrYgPOlf7HXHU9t9rvQ0sfLVW
4avVX4ivrip8ddVJ3edLf/Vvo1efsdJ1H+385YO/fMXUa/fuPFb46ntPnPfj
xY+c3/DV76u9G/hqh8JXj1562UsO+OX5DV+dXvjqB1edesWYl81r+Grji29+
7pHB/9bBe+BhWn2eiH+x5/CPdjzVLdV+T/j9W1+kPXEC3CJe5vwCt8gX857J
F7Hn8Iz6RezAtqFD5l/olkdGe8bLsh3fDKe1OpmBr6b2004XnflocNc+1T+8
6v2zzuS3o07UCrio4mjsElzR8mOW//15ywuj9/Ce7r3Vj/ySLSr/2nlLHHDL
at81zolPRXxhYJ/zUW/cJM+zI0PvQSecOhA6W/oW9Ubko3ker8XOZ9zK+8B1
5t37Z1yDX8ODtXN6P+10UHfEOR3OvD3wHt3v3PgueR3O7+yQ8zhcQR8KZ7d7
cmtetDsHs/94HrriVp+n2sUlEs/AOcZzWrQbN3gJH2Uc1PVYRt9b46A+l/vm
5OWJ18rrNw70NvxP85vFJ+KvvCd/uiBwFzviPeEf+xlO0z++fmrwdfYLfNW3
fmNvPfnmR2qdZD3VCaGva/kOgc/9btZnyHt/5C02/VU83/jPqC9hX9DpLQsc
JT4IR5lH+wuOajq62r/Wf6vHFe2eh7vOcC6rdU4Xd2fhJbgLr6WdXbKPRkZ+
BL/Fvvle/PXtsT7Fg28vPZVx7g9f0YHJ4xtd9lmdUPjH/h1c7ZPda1PzYt3T
z0/Ea9Xv0Ymxt/L9htRf9ar8d/gm6ymok+gvfJQ8Vd97s3t5Kvgq44N9zx83
xz2M17a6GOa3hwc8b+zqy+fl/Lpf4MKe+gxXfrb4qxndkcVfXXPY6867+Xsn
Vd7gUd31Ci9ds/b5n/ntg7346tf94CvxwR3uGva611zXi682LHy11m+/ucPX
B/Tiq3fcs/62W9zw8e7cwif4kwU17+71yPiReFbWXUweJu9Ty3tAjg4+p+UL
F37Ak6QuiP1reWf9tD8b9RvZHzxP0ydXu+f9ruf7q8u9TeAr/RgHvJk4prrc
vjf7ybroeU+f8aEzb3U1ax0fE3Wc7BN6b+NgXzmf4j2cj9ixtUP/gJ/H59h3
+A18gnzkm8peiQeJp7Q624U3+u6/F9QFEp8q/JM6EO1Tg7dRnyd1yPxX0yGL
x1W7PCl+pOmOyg/y4/Tb+mf3Wv2Bsq+e5x/5Hfb54sjT9z7idLuG/zWe8sLl
N+FV6LoX1fuIRy4t++9+Cfq2QepmV7s4q3wj96HQn2nHI4lr6sc6UeedH2j6
lupHu3ud4B/3mJhH/cNFxmHXeB/z6/1nR7wm88vozOExdSPtxz0CB8J77AV9
l+91ntHe1lvEocx7xg3hJTzM5FrPfe99+3XDP1kHY9fARXAUfGUc4LGpga8O
CzzmPXcOvVbqr1bIA633XBA4KnGXfi7K9e99+qnLYd8lr+V++jyPyJuwjxLf
Dgu9Fr6RHkq78z9+Uv9wvnOH/r3fhMI5zrPOmXRZdMLwPT4JvrJe4Stxc+tb
PNF4zu0HXw2t+KC8SLwTP6DOFb+sToM6DPgx+ZDqXDlf08frbyY9V/2+/nwH
Pzmp/rv+jF/LM6zf79HV/aLVv8A3rrEcX80Zu/Ly+Tin7gH4asUHj+i8tHDP
ywtf9fBZ0zt/2G+vI2d95JTOgMJLX75y1t82+fKchq+WFb4aObAvvvpNtd+0
5n7vu/Xtx6vv3nm4cNih87/+w9UO6K37PnHJkF9//6x5XTiHfzfvcA79gvX2
dOCQpoepdjgn63LfG+36uSv6GRS4wvPqC/ld62HtaNfPbYVDnJubnrx4HjiE
/YRb8t467fDVjfH8NLix1rn6SLtHe9arbPWpon/4Sv4+ey9OJO+MXhrOyTre
1q18NPgKD42HwZ/oJ+8t1Z73Yji/tDpidT5rdefq/Cgel/lo/KFz0lpwSOEu
+yzrJhkHcUlxDfOI78p6R4cFf3VDPA9feX/4anLZZ3Y+ea3+cFSrTxXnff5x
p/rd1I2n/dfPGyIOxW+qn6NOszp8dLlwC14R3oBznAfFewaVPV5Qz9PB0M3i
u0bE8+zG3f08ry7QrNKTjCg7qR/5UPyIeaUfWVzt7d7eqO9t3fA/DQfG8/yX
fIahgQ+TBxsf7Z73u/Q56n4bf+crcUb2U50+8axWL6L2nf3CXtFlwT/sD106
XivjfXARXiDra7X688WvJn8Fj02L558Ju6H95sBX9sslgaPwNpf2E9+ny8p6
+859GfeHV+kK+uqfe3nCvrqdXtyl3X1mdO9tPZc/sL/oHNQRcx+iOBZ+eWat
c3jAvqW/cg5yLoVTrFv1I+AS4wC3LQ18Jf8QX8V+wlV0XM7pfk8/pwWO8rvO
6fgv/51OXr0w/67f1HPBj/AV/Od3fHfq4ucv34c/K3v4i1pf17a6VkOXz8NZ
Ff88r+qGbtFVR1R9huXN407qrHbiue9b73PHdp4ovHTsm+94aMwhi1fAVw8G
f/VgtR/09mP/du2RBzb+6r567pAPv+fXR+/+gYavPrjyvoe8457ZXfzJ4rIH
bR8Fb2MexaEWRR7Zd6I979VdHPnp+sk620/H7/LLcAveLPmcxFfy6MUxboz3
nBbt+sl7h78d+fjsnnuH8Uj2tbx+z9sXT0d+WTu/xD281t9lUffJe84tvISH
MD70POytc0fmg+PTnio7Lz4IhzjHycfR/6zCUXepqxd6ZnxOu8+ufnd48FFZ
98Y6gaPYLXF/+XHa4T31B5aF/hzOGRY6E/6Ifebv/O60sNviJurQtPtYy0/p
v+nMS1fMn1uH/BQcof0NwRNqdw/B2oGv4NisMyBuTQeFJxS/cP8afe8ZwTvB
M/jEVr+x2vlXOEf//PGsen7dwFfq8ODZjPtNgbvcp+KcDQ/AwXAaPDMs2uFM
8zck+hFvc65vz9f7p05GHPeW4OtGBg8Gl8Kxnhdvcp4Un31/7K+G52s9yzto
66rWf6ufIL7ch3/ojTtbP3BUxqNT95514zNuiAezbtkxOAq+so8uDn1+8k7y
AVveZbWbT/bw8IjXa18z7FiLe9Z+mRQ8szggvOO7jH/uL/tI/U/rnx7CecQ+
Eu90vphfvD39lrqj8t/gthvd71PrpNVXD/2VexnhH+NpncFpTa9b6xIOYv/l
JWZ7u4cQHuqTT3RLw1Ez43k4CS/lef8+PnAZnCQOeVrgKzyAcfU9De8t/+fH
9b1X1zz8bOwGVU/9Gfhp+e+dW/jqqM6wx979r8Nv/ELhosJX04/pTD7k9Kkv
+4+J3d8WXtrhgJE3rXpYL766ufBS4qsRhdeueMNb/nXgfr34asFlY79z8fnj
OtvseOX3fvPGXnx13ubnfPqWLQ7v4kOSn9mq2vFIzlnuk8Wr0IHPLr4Ff4VP
0M7eNF1KteOL6L1vLpyzW8QT4Z89o73VaYz44Ap1Juv99eMehnaPvHhf8F1D
gh/z/vDVsognfrtwkd+Fl9xX4rwr3iofH15q8crCY3Qo4tHy+t2H0ld32KsP
957sv3NGj527ttUZ5DfP6nMPQa9faPdBVXyK37OfxOn0h49yPmW3rQfveVfw
PPwFvbfv5Re0w4f05C2PD34uPXnWbTi96jzsWf2wt+pg5z1uEyqPjz+CP7Xj
0+A670P3Sl+Q98ppN27Dgk+bVbzf2qEDkYfe9GziucVr0V3z71mvAB5Qv5XO
quGZGsfmR+CoGq92TsdfwcHVLu+Jbk/8jl/gj5y/vX+7V67wEpyGD3WvnH7E
23ap9ez96Zz4NbhxRI2j87v2Bfm74qSB384uuy8+7f314zxjfPj9s2vf0i+z
b+bFuYYdk4eIV+HX8DMLY1/Lz23xOPHuwvNnqttQ/c8OnqrpyQP/G8+M62nv
L19VPZAVeDa4MeqD4Ye1s5+pP9SOvzJvzrMTanyG1jzjaW8qe9Xaa77oqZxT
xPedY8WFrU/zvjTWv/oJ8JV2+3Mt+Kreh67LenY/qXXODrOHu9a5qN2rWOvK
vddwTd96fbc3HCW+5lwBH7E/cJe8Qvjc/39z9J+8lnMB3kp8MOtgNZ191BFt
Ovlqx//hE73PiKob6n7BHn/0o+Klpo99tv4OKx4LLurhqz7W+XPhq2eqvfPm
J36475MzOqMqPvjRQeNOPuLek/rej3PQrOV/jz/ygKanWt7+5rO6q3RO3O4l
L/lMiw8ubx8zo/uKl6x00QXbt7hh94wf77Lj5qec2RVXuidwwlZxf+6L4auj
4/4ROOHouA+u1RMOvZB8rkuKL6IzTx4s732bE/jtxfDVNhH3bPHr0qGlzgru
Sv0YfOX9tcu/a3lk4lBlx9hvddP4X+fvUbXO4CtxQHm4ia/wwOoM4CfgH+OO
P/a77Z772hcjin/F4/NH9FR4STpeOMe5u923W+/pPHtH4KgW7wjdl/OyftgT
uAVOdF5u67DmRbxSfYlWR73G51K4t/wePmGb0P/b//L+4It2j0/hMfii7Zfi
D8XfWl6teY+6nVmHqtUTK/2VuEart1Dn9BGBuzJPTfxFvIP9th+Ni3P6wOpn
QY1L04cHvhJ3oxP2/drhkDMi7gaHJC8kPoLXglv4O7greSrjAhfx++pgDhRn
rHGge6Z78f7WX+Kr5k/7wVf8qefhK/FB42+9Gk/zpS6/++M8j7/2vDhU09ep
I1H24fCoS4Dfc66BZ63Pdp9R8LryEOGrhuf70VnBUYmv1PXyPPyjblXiK/HQ
xFfw2O2hT9MPfNXip7X+59Q6h3Oyrqx2/sB5BJ63PtlJfAqdHJwDB9BpwSd5
bw783/BVjZf5hU/Mk3a4ut0v+F/EV3SK7DbdOF7L+od/4Cs4Cp6Bw3xX4it/
4Sd+xl/233+Ho/BX1h19F7zGL9nn7Z67yg8ctnzffbf4gR+MHVH4aFj9XWk5
n7Wg3Y8DX/1leA/PNbraR7z8258YcuaMDlw2+9TvfPN3vwp8NaIHX50y40N9
8dUqZ3X3X/jWZ/787Ml98dUDp3bnnHb5kMvf1Iuvxk24cI8N/xNfwVHiWe2+
12pv9RLto7if1345KvBV4qjEVxMCpzXdTvBa9lfyY8b/xfBV6tXhq3Zvb70/
XTp8xZ/Sw8vva3WQ4n49OF19P3wFfIXfhk/EkeEKfoA9n1dxQHwX/va5wl3y
veRvwgnarXf2Bw+Np1In2n5ZUPmD7Jp9d2bpCp2HhwXfJd9Zvr/1oE5O6nLx
UewNvgWOUm9KO32+Ouf4AXhYHTDnMnmjdPft3qzQs3nPvPfZe9KtGc92r2LV
raJvbfrkfupxiaeIU7U4ReAo7TvXeVx8Fk6gJ+FPm364xt/zLf+x4onsvfe8
J/TwcJfvd37nZ/GndLzO9eqi0ofzU3gb/gJvgGfkB/BjeEntrc5VrTc4renk
az1pb3rjWk90VtZJuw+u/At8gj/lZ8RxrHNxRngMP5vxwd3q/enc+EHfJc4j
39PztwcfAvdnPBcebvfC1Pu3OH7No/fEDzs/9ZevmnWu+Pk8B2W9fXoDuNg6
yXttrIe2ngNfqZ/A3sBp7oPGw2vP/D79wJ+zow4GPzGp8FWre1brVt6r98S7
OS/ARXC1uLn+m97C+qnnfT/9FRwOb4vjOxezg/Cz85f8WOtWnN26ZLeNP1w4
KXFUxA35BfcRwmnq2vl3f9kx/BS+qu85ccX6DKmjEldkz+js4asRFVdp+vX6
rldVXqB6V4OqDsOahZfuL17qFQN7eKpXVPu0i4d/a6/Ohzvn1H9/bbUvXrLD
a8845sTKLzytO3rhvz37kTFn98VX0xfU3/l98dW4ud3t99zjpM9feVKLDx78
l3e+8gufP7X74WnXzR1y5Gnt+dU/+8T9N242t4uHga8yPphxNO3iDNatfuAx
PN+kwFHtHod4Xv9HFh5bGHhMflzqoJIfy3tJkpd7NvRd5hs/Bh/y776X/8k6
4c6jcHrDS+o21zqkR9o1eOmmI6X/dR6p++bkgVmn4o/GTfxOHUt8l/X9tPOg
ui50zjV/zt3qw9B5sCfsA79gv65X+4BdZc+dy1q8rPwqPZVx059zd+r2rYfE
veZX/TT4Sn6xOrTqWfpdeax0x+xG5i+0djxhxIvFE+Er9l8dBvxV07fUeT/z
sG6MOpN+V71E/sX38jviR9YhfGV+9aOeD9zrXJDnevjf94sLe0/7IetKaeen
+J3Gl8Jj4pU1jrcETss6CS0PsfAGXfHN9Z74MXgG/4ZHgq/kP8JF2p1fxOP5
JXwRHhPOGV3vmfgQ3rsz8h8bLo38R+34wGERh02dD7zEzjZcWjjQ+s469vhk
eKnVe6x12PThtR6yvd3fXTiNHqDxDrXf8Tre/8nQ7Xt/+kzP4+uWWreR9ze+
eNdmr+Dk4qnFgZver9YPPgr/If80cRR+TTwOrnYvgrol9pdzBH06PQacCo+Z
XzgSj2p8rAd1dJ2Xm24w8iySp9IPHkpczbjRL8or9J7ig5Pi/6ODbzquspOp
v+p7TuyN5yW+4v/yfkJxhYav6jsm9uH3byme/efFS/yy4ckRpasaWvr1YYW3
BhZvha+ix/qPF8YHx8zq3NDnnucjxj57WudDP7xkbtVp+Gh30uUzHv/1BoGv
9j3nH+OrAV/uLtn98X+95pe9+KqnfWH3h0OfG//7w3rx1fW7v/XenX5xZnfL
wEvGUzs/nLwTeynOknFD+7E//urIwEvt3B28E/vfX/zxmGjXz2URT7Rf6N6d
C+lXxeOMg3M33MIPtHVTPJX8dXo9fpZe2HrHe98R/m5wnCvhATqf4WXXnQvw
J1Pjnj5+n50YUeuTzoG9GlY4yvmX/2Uf1E1y7mv3WZTduyP8OJ25/Hv7Wj1z
caeGr2qc5eWzh/JVs27G5LjfB57ULq/OOnE/dd6neWTgq5n9rBPf5R5q/CQc
Zd7hQzwnPTx85XlxwHUiniI+0ngD58dqXxD+UXxQfCTvy1PP0/4SH4SjWl3N
+n7naP7OfoOjnDvwvPyCfqyTW8qvwRvqj0wO3Zf9eXrEv/BjeDB+hF+D01pd
x9oP+mn1vvrR7du3+LQWv6v3WaHeQs03XKeOBB4ZPvS93lM7uwd/y5s379b9
Hf3U9Wr8Vb2/89stEbein/Ce4q34ZHFkdi/vebR+nii7BEexb3invP8Rj5Tn
tQtrHfrdUTW/F4ae3363PqdE/76Lzg6+XVbzqC6Z711MXxq6KfFL4wnnew9x
N/oH9rrdp1zjY97tI/pt8VS6LPYHXmpxZDihxlc7fTu82PSBNZ5Dg6eCVz03
KOJteK2l/eArPC09OXzV7s2Bk+r74KHG22edBXmI1e596E364vqlrV6X9YJH
0F8P3v1pnZt/XvlM140dU7hpaNVjGEjHXnhJfQT//scX4qsBxxf++XxXnarH
dvn7w0cP+GJHnuHKvzri02d+6PS++GpM4asBJ/fFV1d9uXvQrufv+Nilu/bF
V//53zvf/+zLnzl49/b8SmMeHXjY2Yuavt0+bnG0amf/xtOrVDu/4/yIp9ot
8NWx/fBOU+r5acFryb/DY7CfyY/p/7LAS/zvpMCBnv+ue37r/VveX+jPW/2r
ivvwp62+X5zvPN/qEoROdXS9X7OTta93wpOXvbJPb6i4UsvfKnwl34f+ZbC8
ubjnxbzw+85t7Jg6fvRW6kLgVdo5r3631QksnkA7HAhfsc/WyZ01j+y5Ohvt
nmg4s9rNi/VA/yYezS+rKwsXOO+4V8h5N/NhrZ9cV8lPPlU8m3gCPGb8jYP3
hJ/5L/wJHkme/nplN5rfKVzEj2T+PjvEb4oDWs9ZxzLrit8WOhP8lfeBo8QN
74g61fDYbdGuHvHt0e6+BzxYxmtanTS6rFof9CZnBr5aIM4ovhbt4nHwiX58
l/PessBp8PTCek/4hy6BH3fugA/nB79n3Wh3vhPPhn9a3fvCV4nHUrdm3DyP
32g6/NoP8KfzlLr6eC12CU7O+4DMV8bRUm+f+cXqlth3TQfo3upqt/61w7d0
q9aJuCee0He5Vwu/h4+Cn8Xjcx06n1gPcJd9xd+3++3qeTxn1m0zbvACPpoO
Xb4bPm5y9GM+nLf9rvp06ovyC/Js4Rx4m65L3apWJ7+e10+7x6ZwF/6KLkse
Y6ubUO+/VtTFct6kl4fPnJfzfmc4y7pr908XTyY+b5764rUfFe69uvISflF1
qz7XGVx81cDSWW1TeOmOwlPPue9m4Avw1VUf72746kdmjNr69KonesTYwU/8
eNRvnj65O+99jz98z44ze3DTzHP64qtxn6u/pwV/Nb5z75e3v2LR5V/uq7+6
anbn5yvNPenpn3+8PX/t64c8effw87vt3t6yB/zdlGjnX94YfBc/vk20N11T
P3HD/trpi+gR7FN1DJxH8Qb5Pn6Xbv9e/r3a3du7V9lpcQf3kogzWB/qGLS8
3eIv2Vs8Ln04v+scMafqd/g98YgF1c915TfpaqxH/lc80T7if+ku4ISLQzdu
fOCB1F3TY8BjjScpPEaHgldZq597Y+nQ+AHjDP+w6+J3l8X9RHg/ccBWZ7X2
rfxN471W9O9561P9fPiq5XVGvY5WP7/WD30xXYR7q++t78Ln0w+rU+p9zIt7
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
LZ47Oc599KlwKf22c0vWJTD+8IBxsG/pzYyDdvyn+J17zfFg3h+ONC/w5/DA
LXgOuAhPA//gbQfH81NC1+T9h0U/rf/aV3iqeeXv4Xu4oQfn/qKdk+Vpen/3
4+BX4YtltQ+b7qvssHoN4ozwVdZjt7+0w2P4H+cBeKXFX+q5rOMpPnhT4C54
Ds5qOi769Pqb99rQZ8Ft/IP/7jvYA3bKewyu+go9fvNnLY+1h4+aWXr3OQ1v
fWDNTZ7Y9NTtCy9t012z8MyFt2600ye7U7sDC8esVfjrq7fv89j6107oXjf7
vLtHPL5/99nCSccdfPSlrzlqUvfHX/r7cdtef1R34/cMWW3Epw7qblL//6r3
7Peqx489rHvsXlcfd9Ke23VW7YOjvtq9/HdHXvLsqC93pge+OqT+/YDPv2q3
hzuLGr56e7UftM6PLz/5vi+0/MEHn3/tNQvecVLn0sina/ny5XfUZYETZoXf
gbuervtAG09f8ysP657AUfy+fH9+0z258uL9rviL/bduzRd+yb6eU/o5dT6d
M5JncF7J+Itzvf27d50f2e1R1a6u07w8D5bdc14Tn3I/ovd0Dr2p/Bp7k/Ej
+mR+ZLB7dsqesXvfqXlkX+nN5EveETyPOhV4P7hO3E0/mWc3LZ6/udrxiuph
uh9Zu/HXnvVa1fN0LjfvqUtPfNXiifU8fJX1JfB78NXsWrfyDubHfZF/eBE/
KP8761/hN+Ax+ER96XVjPfBT8pLE3W6Sj1bt4n3iOPQ5Gb/zPByl/gO/Scdl
X/hefGzWjcebiWPio1rdKn689qN5tc7lYeEHs74uXMvv4yWsG7gIXoKv+B/x
PvFE/tM4q9+R9QeMDzvAXuGX1N+wbmeW3RP3t/7x4fCg8cy8BngMr2Vd5f2S
+Ku8pzvxlfq8cAR8Je5+W+ArONM4tzrwNW5TAvfSWaUOrd3XU+/jHGdf0XEZ
Z7yW95E/ZZ+oN6C+hHVG3y0vkq6JXt1+UU+n3YNc78+OZ74k3Ix/8bsZl4SL
tNP/wz/OLX7XOWVB2f3Mo3NOwD/xg1l33b4bGvyV36UTn9VP3BAuynttxAnZ
Q/wXnKa/Wf3gq1b3pf7/lmcZ+IpOf1jdw9zjt66s3/nJ2E0LjwwsnLRG4a2n
t3nXap87+U0dOqk/FV669LYv/b372F5NP7XpcSfPWvWxad13zLpv6zHbHd69
9Kpvnn728wd0H/zkztvdv/Ke3QWnf+PKq182tfvjk994561f2K/7ih999T2D
/2WnVl/04K99YNRVn/9Q96a3Xjp58bkTuqsFvlrtc8MuuPrej3UTX6358T9N
f8u5H+5ct8XuO5351l589f2jv77zSn86oPOJHaY+utnjvfjqZXP/dOOVB07q
un+W/nZxrYcjS6+rborzFHzl3Cm+Jv4Fp4nT0Qu1+na1Hk4P3ozf5B/pAvQj
PwvPc7a6BHW+wwer87kVHBW8PT0Mnjt1Mnh+7amXaLqXsm/4YM+r0+Ic1Opd
49Hq/OH9zwj+od2vUX5huO8q+5n3yrFX7Dz7b3/RvYurtPsT4z5i/DOex/mV
rnV84WF8oHPQ5GpveefV/6Roxy/hJ+Ef7fA2O41X/E7hsWWBi1KfD48NLb06
f269yWto+p1qV89qXtnRhrdrPQwt/8uO4KnUYWA/874h4y/ulvfOWLdDyg+I
R7T7ast+83dwGrxt/fhdvFbTWZW/nhY48LDQGcIDzi94aevEecR53blAfhn/
fnbhHLhLu3i0+W55gvX++PG5gaPoEflr4+k8lnhMfoV+tBt//If91fjnuM8R
v8Qe8l/qmbS8lVqHue8SX+W9xslftbpnNc5Tc74KB2beqDoGQ4P/vCvwFRwr
X6jhz7In6+U8Vj8Da71l3TP2EH/L7zsXWIf88B7Bj8G9cEuLAxZeElfQDi9Z
r+3+03p/Oij2lj007rPjnMvuN5xf68384angZ/i46f3Yk/qelodY/cP9eCTr
eXbgKzhKXQVxTPiGn0gcBdfQH/M7cJT5cO5u9wFGfBBf5a//z7oWP4UT/X6r
g6UeqnrbNU/eSz2rnnV/ca3Ty8cu/fktX3z9vQd3RhZ+GVV/O8+MGjdhpX07
w+rfJ02+aOHnr3tn54Fn/jJvo+6ujb/6lwc3uWLil8d1vjFg2UrTP39E9/Tf
3XXoHy/YsTPgPX/927oTj+hO3f3r+9z5gQndvQ+/8oePrX1o57bPDDr3A1cd
1PRYpx9+9d/O+uGBnd8fscG4Kd2xncRXz248fOTZD62Ir57+9Cqf+NleB3eW
vubCA175tl589eHTN7zyj7cc2Hnuuo0+NPqpXnx15MzTNvnKpyZ1xafsa3Gx
piso/8JOnhbxEec7962It7MDm0UenHONvK3kGQZVu/iOc+VapYfBM7S4SfEJ
9hm76v3hCuv2KfZTvnKf9fbr9nyrt0Z3Ud/Fj7Pb7I/1yb7JI/b+znE31f7i
X/JejIbHit/A1+GF5PXQw/Br/D79j/Ns8jP2R4vbFg5RB8X9enARHplOCU42
X/gx42Ze5EveGXE3OMd3e/7bGfesdnjp9ugHLzotfhfOl+/e+NjCUdYnHhJv
wy8Yz6yTr27hoaE/56ey7oF51G5e8r5mfgPObPe+uces1g/ebGTgfzyt51sd
qlq37btqX8BX9ju/3NZ/1E+DM9kBfm2N8r+5Dt1L2PZFfZf7XNRtw8PsGflr
cJT1L/4Dz+Nt6JF8Lz4QjqVLPzzGn39JvZN+1Bk2zt7HPZ7qJehny6jfoh/8
p7pTcDX9XsadrcPMr6ELNf76d4+mdcif3htxT3gSXmr1jUMfmPdE49XppDJf
0rmDHaATmxZ4DO51/m33MuPTol0eona8H3uNX+JfrNd2L3bgJedf748XwBsb
Z3hMP96/3U+gPkPtF/qzlkdX9lz8Ei+E98Nz7ULfXusHTsk6n/isxFET+8FX
cBi8ZD1knfWmL6VT7qOb6a1/pT+/1/cc1vt+s+s+m7Wr3gKc/MripYYs9yNn
FQ/5zdKlT+4MKv5Kvt/gheu9ecwv9+usW7imR0d1YOeeYd9c8uAft2r80/Jy
nu96S2fU5I0+smTypM7Qv190/1/+9OHluqvHPv/B7j2f32jUAb8e33nzH+77
2SUHHtlduMtFOw/+zH5dOG7z1R85bc6r/7W79UGvuuWWa3dcIT545oiVHhp6
5NEr4Kv/1f/A/Xbprv+tO77y7PaL+tQXvfB7H+m8aehrtp74WC++2uZPw7/x
1Bt37zrH2afwlbg/+7k4zsvOU3QdF5ZdSnzlHj1x7FaPrPzggohLZt4W3izP
g+2+eHXUa7/TS2j3vHXLjtln/Bf7iWdaK9qdW1s9tPJf7KHzyD0Z96n3bHWq
6xwzvNbhPeEX2D15901HLc7lXjl1kvnN8CPz61wxsXg/+QXsBty1MPAS3KW9
3eNZeIZfsE/houT94Jz011vX7+Z5f0KsB/Oin12Df9sq+mnxf3Gcep/F4dfa
PWh4v1q3zgv84BbBJ8BLlwRf5Pkcf+dWfirvDZSXmrqdp8svm6+Wx1r40Lyk
318Y/FvWyxVPgd+8P3uYdXT1Q5eV9xrAV/y1Ol3y7/j3gfjewgOZt4iXmxbx
O/d2i+f4XnZpavhxuFd8ST0lONZ3NX1jtWd9DOMmX00/8JJ15T3NS+JbvCj+
gx04Mtqtky37OZ+alynBa+U65E/hSd/lPa1Dz5tHOBw/CT+zn/o5K9a5eB38
AF+Z91YXtPCwdvNIv6eOqHbnIno89s3+affahI4LTnGuhAuHBu9kP7c4YNk3
/B3eCE4Tv4M3xFvhpYav6j3pwFbAV8VzeX6taM+654mv2DH6dfGelsda/85e
N3xV393uF6Tr6AdH4QPgrtZe79V0P/W+PfO1pM6rV1b9+J+MHVL4ZLXCUesW
zurBVwe3eqE9+Oq4zgE/v2DLHz1S99UM+ED93bg7cKt7Lt5y8ONL1GdYXvbq
3Pd333fH0I2WnjCxs94v9jvrrl2mLG9/ze/Hdwfsts4VV2+7W3fcw388dNdD
1uhc9ub7L9/2gomlf9+1+71Fpzx58+Nv6x7y50MOuG7VzSr/8KRWv33QvRst
m3Fg1XWffkznhfjq+F3Gd/84Z6edZ/711D74auI1H+l8/NCDvz1kx8UNX+37
00/+dMq2u3fxvfSr/IU4hfXv/HtRnKf4Bedf+8N84tX3CF7oD6XX8rz1IP6I
n4ej2vkOrii8x56w2/jwc5yjI+8vz4P8At07HMhft3pTdGjyEMsv84/wv/HM
e9/kvw8NHp4fYSfY4W9F/ML4OG+qZ7ig+nEeZ5/FE9UjvSP4H3o5/lodm5nu
j5aPUPOofXic6+Ec7wk/iDsnz2l+4dKse5Bx28HFW6qD6nn9J67wveIMrf5q
xLXpH/zugsDPOb/sM750WIxDux9HPCj4T9+b+Mrz5pefha9uiPnCK3r/b9f+
Ghk4s+mx4cBa/5vVe8Ih2n0Xf7pLrDfPs7OJc5yDrHPrudnlwlF5T3TLz437
heGH1OFr913mHX6AbxMnJ741XyPDjpn3daMOHnyV82VdiXe1+kW1brMusXVr
PbAP7Eyrb1zvD1/BRZmXuiDwvPGEq/0u3sk5lJ1Je8guqROi3prxhJNzvuAo
82t8mk7PvNe+oD+4NXgk+1a+XavnUN8JR7Hn/n84hd2Dl8TfvOcd9bz2vvWH
e/VOiZfE+/QP56nbCY+5nybjg/qFr4w/PdXgwGO+M/FY5gOaX/9OZwU3smc3
hg6Lf/aexq9vvZneeuzqrdMBw+2Di5fq0fteUvv+e7Xfjxi7Uv1ds/Tsex42
7cGvvnvPwk97Fu751851vzvlmBP/tVPt7+9UfLC72Ufue/SGr0yo58Z1Tv/+
Dhe969kPd2//8eWfOmH8vp3Dh+z05OyP7dMZcNTKKy27/wPd25bueP7Ft+/T
ufD53z3ykoc+2Nll4A13j95uv8JLR3X2XDripF+vvldn/I47/PG8abtVvyc3
fHXrBQNHjnnwYyvgq/+lv/rStR/ufOHsc677wCozGr6af+i97xj0qwM7o2Yd
ss633tuLr75279T3vf6QSd3Mb7LO1dNz7kh7y5+y8+x5q4NS88Pfpe59Ztil
hvOrne6r5bOzP9Vuvztvsg/4H/Wl7Wt47ND4XvvUOY5/0f/NhbvoV+F+OlXv
L17tvE+fA09m/Mg63izwlXGAb8VB4Ch1ctzDIK+c/cRrDav2xs/Ue9KjOkfD
k3CUfDq4awbdY+AueSet3he9Q/Wjf37EOeqpiJuIiz0Z/ku7ep7uU9Xud5OH
fCpwe+Mn5Z8WPqEb1D/82VePsGJ+PVw0LPysOJ1xbvxS+XG8mef1c0fgTPkL
9GB4RXzI8MCH/H7LP631MzPPI7V+dor90vLmQpfFD1rP/LL3pLuGZ7Tjr6ZE
fFA8Pf0vPCCeyF/w+3CC8Vdvyne1OrG1fxMPNDwc9amMj/2uH+tz9+Cjkr/y
fPJXia+sz1bHOM4XxsH5znvyp7439e3313jCt6fWe9Jl7RZ8IF1B5rHCRfpp
+i71V8vOwAnySeCaVhe92sUBjcPw2m9Z15Q9FWczztYZ/ANf4cvwS3AmHAWP
wKt4K/gFbqSPargBTot66eJ9eCp8lH2UddStN/iKfhzvlPhq/cBXeCLj5l4+
uKnV9yt7DDet1cdvLm39s+e3BH4Sn2RH2Tv/3wTnBnGLau/hE3/a6q/32L9r
x64uD7D4qZ68gvNb/fNV6m8P3qp7bQbAV/sXvhnfufqjR79+1Y2m1L+Pqf9+
WHfS9wfcOfcXB1T7uzrHnbvozHfff0z3lIOOv/1L/zq2M/BD+1y36cb7ddb4
4bQPDDh+3+4666x63OOnje9ctv6szR+csW/nrWNf98pNNx/X09/0YzvTjp3x
7IxXvbXz4KbP/Hmz1XfrJL7a7Gs/2ujEWwtfDTi280L91d5vPLgz/9T3/sf2
a/Tiq/d8cddLnpl0UGfZ0olTv/K+Xnz1u7+O+eHXdp7UzTrP1j/+Z+3YL4ur
Pe+JgB9SB970JGHHnNfSLg0pu7R7xIPEj/jHdg9v9ZP1HuEuPI/1jPdmn9WJ
cv51Tmr1Qstu80dNDxbt/B2cM6nGgX+H9/CEvos/Eh80PiNLL5r1guSLLY12
/o5fg9PwFXitvnXlev3+zuHH4QTnHTgEHsMP8xd00fIRmi6o5h2v0u5/CT/S
n753i4gL+y44yvv0zUf+dasHYr6OCD+Ib4HbG56pdr+7W6xPflY/rb5r+ces
/2YcEv/AA/BJ499q3cLJM8O/w2MZ7zaeLU4UdU3bfYJRNz71P77X+RfOwfMY
B3G9XdMvl32YGvjq/uC14E88if1oX8B1ftd72r8tzoWfjPXW+KKal4x74tvl
CWofFO3wWNZb0O557fCP9ZPxxHbfaIy/750ffB1cig9n3+TxpW7NuUidJ7pr
86puQ+rM5Q9ab9Yr3bjn4ZxdCl/Qn8O17f7EskvmQ5zN+rdeB0V740PFAenS
qx3uavdUlt3EJ1kPawe+ajhNPYTCGfSTcJd27+974CN+ZE7o0tkl+Yrtvr9q
l1cHj1kn2d7uMYw4oLgn+4q/aPfTsLuRJ5j5gHiAgX3sTa/eHR5s+7B+Z93i
pcQDe773qrHuTR5Y9RR6cNU5haOOKPwyYMCIPnVBj+rAVZ575yN3H/TpLafU
fcnHNH7rF1f+buoqX3lH4aOjGy57cvDqXx/26Ac718155i3bDfpwBy47680H
T/jszyZ1Jr/3ZRuOfvbAzkufuGHRRke8t/777p1V/n72v5/9rWM6X7l42SPv
fny7FeKD4656ywfXfP5dK+Crwnfd/e+65KHzX8Bf9bTv293/4PWf+vcJvfjq
nNWu/Pm//GWf7oVlPxuvIk5b9jNxl/uqWt3jWodNd137VN1WuAuuUAcv+Xb2
f2LgqL56ut779awT/hSvoi6Be3Xl0bMzbyg/jl+yL/L+XDwPvuuWen+62dcX
Lp0YuAgfJf/LuVK78yC7Cl/Ju2/3RJSfks+ifXG0t7oQhccGx/P3Bm/ADmun
rzMOF8V68PzOwQPAt1vWeGpPnZjvZcfkGd1c68e99ng54ybOy2/CyeweXKe+
cou7FY7aNXCReyT5DXaSn+V/5R/ph19q9ayq/czyS9rht4XRnn6WvW18V/A/
4kGZtwUved68OEfMDr8MR7U6ErUvPD9H3Lbmq91vCIfQKdU8Ok/hAfYonD8h
9APiR4Pr+bzHEG7Uv3MNP9zyXAp/ajcOyUc1vB38EnsFP8P/+sl7puwjPJK4
NlyR5xF5Z7kv+uPVTwsc5RznPY3n/LAP6tOJa2Wd9rUjL8a6yfud1f3kz/E2
zs/iYOzG3Hy+5le9J3zJ/Nqn8kKdu+iU9A/n6Ic/gFPwYHTA8FLDdTUuEwN3
OX8mjjIuWadJXqXv0k4Xi+ehK1YnQf0DuGhu4Cvz4v0aX1TteK2WjwffBK9l
/cBJ8pF8r3+Hl/ry5704yf6y7vx352jr13Nw1DxxwJo/+G3N4qdeubz/c0tP
9c36jiPG0lO5P7DwTqunPqzw1at3uf6je31uQPeC1//t92te/O/bjTni1Qs7
J76zs9rRQ27d8q2PLrl24xmf2uh3a3W++Lc3ffoDr3tbZ9Fm804/dte/Lbnv
xI3HTtt6WOdTr1n2pT9PeUdn1Ohzbj935JDuDceteceXDnhsu8mLP77pFocN
6jx8ym0/nf39V3QfvPCIba/feu3OudddeMNvfvLa7hp/fuSgDef8dbvXXr3y
c3fvsHbnDdvuc9lq17y+4ap//Hdef387/fxd4fnkn+Er7ewhnAMnzA073+ok
sMM1L5mf0vL7yo87l5nPSwsX8af96T+bTr7s5Mg4J2bcRD/w1ZQ4d7N79je7
Rx+F9/Zd9L14b3aAH6EHs/43C55QO380JHhC8UH4zXc9EHjM/nCPGDvqeXUu
ZpX9yPydWWUn2GH3m8h/zPlq59fap08FH2X/jo+4D7zhe/F17PPAGk/xULiL
X+O/4J/ko1K/xC+rv9104/Ig6JHow/lN+J/eqXC7+yG27OdeyF0iL6Ph9urn
rMBd7ivkx+0jeC/9srzdbE8c1bc+c28c0/49LOKb7LFzlnNH6szhc+do/JX9
C19Z//hb6zn7b99bOAqf03BR4RPjox1P2OJ04r/mPeoqJL5teXmRH22dwFfD
w55sHnFe7fjq5J2MQ/J4e0WdBM/TI/H/7BK8vnbcy4y/a/WdAs/gW9R3Uo+P
f6eLgB/4d3hjYsTRFgW+yvpH9OLwjPMLvSncgR9hB8XlWr33Wk94KnjGOVA/
6wW+GhLxweSvjFvyV/RE8v5OD9yFd9Pe917dXhzVH77qe//sLW3c+tbB7sVX
xqG/fMDxwUNZz+wuvsv6b36y/rvnmi4vcFnPfvxRq1fVwy/+dOygwk/PD+/B
SYMLR4078/Ez71zz/iXXL8cTw7o97z+z6a/W7PN3+tjR/7bH0nu+tFLn3Psv
2Gb9icM7r33wqc9Nf8+rOqN+MnPZjgOGdr/w6JrPTV57YPfPh//whPOfG9a5
+7Mv3XXhm1frPjH76knjjv33JSevsc81U59+Veeb2//ox1+f/PB2Dzx80Cf3
v3No56jJV5z42UNX7s64bOZ3P3LDBt1zRjz1xnueu367J67daOpHfrFJd8zx
p1760Zc8u907J3/7lGsOH9M5Z/jRf+nMftU/HV85JyZecq7kT9kH/Dx/x77R
k4wIe67eNXsFv03o5xxKr+J94HbviVexL9T5sS/ZDf4l7/9y3mTnrU/5enCX
uNL7y07y+/aXeBxeS//GBz68IfrXbv1vFv7LfrwncFTiK7yQ/SJegFfUrg5U
1iWmT3LOVT+Z7oIuAp7JekHi//xOi7NEfqU4FB7v8NAd+a7UV+MJ1T1rOj3n
reAtW54jXVytn+RL1+FPyx8NrHi0OGO7Z6f0ZupLyCPLerzsuboWxhuOUmdM
XupZgdPo5/1u6vbb+SVwQvKKWWfgyYij5Tq/LdrhgdQta3fuyLx+OApu1z+7
YRzUu4BDnJ9bXkDEi4/q595P5y/6PePAzmTeRN7/qH/18VoeZdgZ69P4tPsf
qx/t9l3WNbVuxJfwseY1cZH3hgdancz6PfenaDeOeB55384z+Cg4QT4zHsW6
dZ+QOuGNn4n6Tu0+PnXR630yTgdfeH5+8E6eTxx1djyvPXEanRU8n/hq/fgu
7eYFfjUOZweehLvgSeNIx4SHT/1V07FXO35MvDV1Vmv12e+9enXvyX+yp+0c
V3adH2WX8GTWpXbzzM7aL+sGP+W/9+QBXlh1Dy8tfPXdsS8tnHRd1f1crXBU
X/yEvzql/fszNyxe+Orzt+zCV0Pmvftb29/x0u7uix7/3alb/X7JS4+ff/RB
O7++M+6ek044+HNrdy/rvmbZ8dus1Lll7fPGfX2lDTqjhv/+oBO2emrJDyce
MOlju6zZee/vNr5/lQ9s0fniw/NuHn3Hb5Ys+tpbVtnjoVd0jn/by5/b8ayV
O5eMe8X5v7p2RHfsyr+bfOrSDTrTvrzjM5dfMKq7dP7pux111wady+7e+Pod
T3hVZ4Ozrj3jgmnr/dPxFTsMt7B7+Ct2te/92b3nMvN+ROg64BP6BP7Reumv
Pe+heH+tJ3y7OH/m08E/eInUt3h/7ey/degcCudk3k3LTxT3Cb2QdYtv4Tdv
6HOeeMG9KjU+mT/Y7rsPfGWc96o4Ar7LvlhYuEjdO/hNPSn8vefhA+dXeTHq
OrJPmS9gPOEZeEn8Be6aFbi6xafkMxaeoQ9IPR48j580ntYVPVjWN9sy4oCZ
Fw8Hsp/ueVQv3DzeEvW7zIv6bO5bZL/cB8Tf+l73aLtXqN1H1k//WwU/1vLd
gp/xvHWFv+qv3ukusZ6dL1r8MepYas9+tMNF6iAlnoFDjM/h/bTPqHWyQv2B
qPeScVLfyw5k/Xz+PfGeuA++enLwq3QRxsF+mVa809KwD3QMeB14xn4Q/+LP
8Ozwg/UJz+FFjIN1rN38pg7ceMKL8u+cQ9mXxCHspnMWHo8dhKPYAXHiVi8d
7op2zw/L52t8tMOfnp8X+Apfmjp25yY4sOFSOvbAVw2nBa/V8jfj/uWzAl/B
QcbTuIiHmkf83eCIA/p3cVXPs5et3gL9Q9kzcbu++bY39erwqp+z+/jnm9r6
bHmH1R+7Paf06j3z+fN2D6N7a0YXPzWo7q9Rl2pw4aTV++Cr6f3gq+kr4K/P
v/fqL1z5s5U7D1/zjQnPnjCs85J3vevgRc9s3Fl1jZdtOPHkDbrrvfZjr1l0
4sDuh569992j//zazgETTr9m9p3/vt2Ep0a/afOTBnamrDP6+Ve8YePO9Hte
e/K1Mx/bbuX9B+xw8UMrdWasfd673rPbY9s9P/6xLde6alD3preet/Mah5+3
5Ny3nfelP3xheGfyE19e7yP/+TtvnbFg1LNT1uucMHP7H/3ybxt0/t/ir/jN
PMdNifPpHxKPwf+Ff+x762F22c8zyk7QNaVuJ/UV8wKHtHpBoRu5vuwke9h0
UHEuxp+Ij6SuGw/GPvtddjtxHd5gfsQL+Dv9w2/4LuOGr74rdFDG84yKo8FX
7D/90i0RX4Cv5ga+cu+gdt+1TvgF8+4eGvbJ+9At003kfbXwj3MYPQy9t/2t
3nW2t3oO8jHFGQtfiWc5D2Z8UD1SOArPw+7Ij5A34fktop689ZD151v+YNW3
N37Of/CVfPRWp6vup1b/THveh9gfvmJvnwx9O/3Mk8EnO1/TDdrX/EjeZ5f1
5K1PdrmdXyLvQx4inJP37tkXfhfuzbpPLR4a9RASXxk356zk65z77gg86VzA
n8Nd6nNmfcv1Cx/DHeal3a9Z+67ptIs/bXXIqx91SMWjPI+/anHA2o/WPf05
+2bd68f3+v7boo4B+4VfwdOaP3jD+mHf8Vfwg/aGr6qdHUy8ZJ1p9z74tIa7
gmdr/B4+quwLXi51YvALPUniK/33x1/1h68Ghc7qfxdf+f/hKLjOv+OlfFfT
n4s3VP/y+6wP+6Xvvryp+QW/zz7yC+qZ9d0P/4nLqp76iNKrD1s+nleMfVfh
oA0LH61TOOtN1b5ZtQ/+38RXf3n7jctmDRzW2fdv919wyZKVOiP33vGrb/nb
mM6Fwz+67aufX7/7l3V/8uUNVxrQPfqk7a+9+r2bdM7e8c0fmTRvtc7XRr/x
pNe9fnhnw7eOOG/Bput0fn3iO349+rerdk7b9pwTv/7Wl3fe8J6DHpn6++eX
nLPJ4DPf8Ml1u5dt9vK1V3ngue1mPjz4vh3vWrdzzNvH3H3bnE06l/9k4BNj
r3xFZ8L75n5m7yPX/qfjq2+XHWP3ss6PfWze4Cvt7Aa8lHV+Wp1P+plaD+rY
NDtf6znvybX+4av+9K6J6/h95+LUZckXw7NmXtjpffB+7/g4HzwZ5+XG44Ue
3nmQXgXvxJ60vHX3zdXz8Ezeo7pv8Vd0VsZ5jzpfTyy70u5nKf8t3gcfut/R
vQ32Lz+iH+3uI8Pft7rZ9f70uuJ3eBLtjW8MHZH3b/WxI26Y9yLhIbW3+8TZ
Q/HEeh4vl3XdzZf7Lt2zw565JxH+waMurXsP4bFWB6buSXQPXuKrswv/sq/u
43bvj/pj4ob8tjipeiD2nTgRHlX+HXxlv9CVtTp14l/1fObV8qvsvP7VF9UO
/7R7H/iX4Butk8zHbHG3fuKAiZea3qyfeuzWIRzFX+0Weqfml2r+rH92CW7G
91on8vIm1L7QLq4MF/F35i/1556Hr6wf+Rh3VHu7z67GZdfiV1o+XY07XZZ5
x9PhfxZUXBJuvjXwifGCr+Ax4wun2V/Wh/7P7AdHeV78o9XtpIMqO9Lwnv7r
PJntqW83znSc8Jh1vkJ9hnqezqq/+GCLn9Z4wn+T5Bv2w1Oxk/Rqzpn2BX6q
731CN7Z16q91Mh7/VOvbX/yrdczO+w52Vvuw4qeGFD+1troKy3/nnLF/HtSj
V19p+Xh9tXTpHy9d+hnd59fqwUk9/z658u1O7/6q4oT06/Tsawx8YfuAAVtf
PX3hfvuMbDr3H6zx55c/fuFzS95yyZ8OPP/RZ7f7zF8u/crH3rFB9+ljd/vN
xN3+Y8lZB7z9kLEb/X27N991+KW/uHlY99VH3Pz3KzZduXvx5cOGHLf4l9u9
cfpPv37+GzbqvvvBW/99xPGv7Mx79nvfmfnrl3cuHvbSz635gxHdh7Z9fuM9
jhva3X6tsfc/cO16nen/cvYTh82+bMkp078zd+m963TGz/jGzS/70rDO3dde
dMq4dUb80+ODzoP2Mf+Y97mLy+T9HepssJNnBG7J+jmN/6lzpfMKu511q7Tj
f+wzvPGM8uMjax/DY+ICrc5VrX91O6fE+R3vdGecf9t31fgYh9S3ND1MfBc7
3PLZ6dKr/d6IA7Kreb7Wrm4G3IWXcx/inMJdbd+VX8/44LqBr9o5qPxCa699
Sz80OfzLOnXex2vxd/sUDjT+Gc/VDi/x4+y6/sWR8VFZJw0f0OpKRd4fXTq+
S3yGDk2cMevZqgM2MnDOM6WnomNv9UOC78p29+axr/RdcF3TK8Z3pb6dX836
k3BXq8NZ+Af/0epv1PN4oVYnIfrpr+5B8y+F9zLfBB+Fj2n5DmFnrEN8Gp28
uK178ZxHtO8W+cv80bTiB+ms7d+pNb703drhJf7W++MNZwfvJJ49M84j5mlu
8Ffzo50/9Tw+yng6J0yp94FPEkexe84nTfdeeJs9ggvou+CuVv+8+rEPxQfh
du1NNx68U8Yl1w4c5XvZwWwfFnxUw2mBr5oeLPCVebEO4Cjza/7gIr+rjigd
lO/CX8FX1pv8H+36cc+Zflp8Tr2p4qu8f1996M1jF1d7qzfZ51zay0/ZP/Qz
3tf399UB3hD5WjeNXX+5PeoWnr6i/ntvXYV9CyeNKd6pb12Fc7oP9MFRp1ad
hFMLLx3RPfSyww/Y7uNbdErf3uoxqJeQeYR/ftMWg0569V+W/GXMQ9v/8LzV
O5fN3vbKd3/ztd33fufUzifX/O2Se7ec/N57t/3jkvU/fP0de9y2aXflY777
zvPf/bLuXc/NGLXzgX/fbuMjjlr5xxtt0X3pSp98+zF3P7TkX97+h3Ve882/
b/fZL+6/46avG9H989Af/OSM976s++RmPzj70FFDuztduNNez85fr/PXBz7x
2w8+Oazz+IAvrbfLGiM6nXn7rvOhhaP/6fwVHJJ54nARPrjvOui1k9YNPYa6
x+LK8obUsekbH14xHtHu5QmdrXMrPsQ6pJdIfRR8Ao/BD3Da0H78vt/1veIs
3pNfgJcmBy6ij4J/vA9/AS/lPYOet0+z3fvL70tei+4H79TqPPSDr5zftXt+
ROCr9CNzwl+0+7yrH++/Z/m7pfFd6kjI68+6Fu47znq2+My+577eegLWA337
vPDvmXfmeXq/dn8KPrb4lpERt1IXFx5r+CTwm/HUnvUqvY/zC9yIX7LO+V/6
KHwAf2R8sj6Dc0fWuW26o6jb0OqTRH2GjHdn+5CI79vX6jN4fzxtq78h7lzr
GX/Lr1k/6r1ol/cqrm1dWYfqGPFfeDQ6KOf/3UIfxQ+aJ/gELyB+SdfEz5k/
7fSfcO2QwEV0Wd7TOOgH3lM/nJ0dEjpJONjzeS+M572POAHcot05NvmrucGD
NT15rSc4xX6ZEvyVeXHuanr46ifxknWS/JV+2NlWv73aE1+1Ooplj+Aiz7vX
OeOD+Ct4z3owr6nzvznwVdPrFq6Cr9gxegfxQP6ur66kt55C3/z7Xl27dv6p
3e9TPFUPD/yLsuO/rHpZ55Z9/mq7d/kPhZuu+of46pTCQzO7f+iDr45ruKrv
3y0CV41r9agGxD9f2G7YXg9esXp37oc/s+qrd1i58+zRZ3/64C+N6H5mk+f/
evqTa3YP2vF1R2233qqdi5/faPayiwd233/w7hedtvqQ7kk3rvqVIUte0bnw
J+us+tJLRnVnbf3LzjeOfUn37yN22/Q1f1yjc+npSzZafPSjS06/c9Vj3/L0
mO4JP33kGzteObjz+bfcMuOnAzftrPaezU98z8LHl0x/zd4nf/s3v1ny7gGP
LHvPKlv80/HVhZF3D/+w29r7zv8DY+dUu3WT97xPgLsLh8Az+odPJkb+svY5
8bstH7z2N78Jb8BR/BQdRbvfp9blfYVbtPOD4m7DQjeOLxIX40+1swd0ZfdE
//rxnvr3nnAR3MUOuA/3tsAnd1Wcjl0ZXfYBjsKLwyHqhc2J8zieRfvAar+t
zunstt/lL7J+IDxxc+hp6b/z3lXvmfyDe36nBO6CS+Fn74P3mxw4XFyyxa9r
/agvsWvgCutffC3rWOb9tlkHkv1s+ZX1Pmf1sYO97ewzvNTqmdR4wpn5ve53
m+q+p8DhnmePd4/xhCfzeXZa3YxWL7TGRztc1/qPek2J8/FIcIj48rziV+EK
OB/P43nxNbpu8Sz3lM8L/O9ckHoncTc8Dz8IL2b+Gj5uTsS58Ev0TnieZYGv
3DcEx/vd9V4EX9lHyXfJFxoS/bS8wmrPvEL1mc6s+KD5S/2S+YZb5CEODZwG
D/SHr/rjr24NfHVW4Cv6plafPHCX32UfM28x61+ZX+tPPJT9gct9b9PtRx0G
eM/6kA/oe+GrrMOgbgJ81fe+9V58xe8kD5W6df8ubtK3PspNzW8OXb5+flB8
5RX136+qc84prX76qNJTDRjYF1+9pZ6bdOY2I7bebP/OWR96Xee7j36xu209
99trN9/36HXf2/3hKze5d8jun+/+YYdfDTr8R3utgJ/+T/vnn42v2n03YVfh
pXZvReGZzaOeAHy1R+AT9hzeyHZ+U52BmwKf2H/WXfplvJD6e2sHPtE+PPgi
eIMddh6kS876xngwfqSd3wvvtfo2xfsah3Z/vXNH4MCmgwp8xW7Qq2tvfFG1
+94x1S4OKD7IntBV573w4lLwlXi/e2jYVTwAP6XdONOTJH67K+KJ7B7+YX69
ZxuH0i2po6h/47PA+Ff/eA9+w7oyznALvLR34Y3JgU/wafr3nqP6ab8v1rP3
kXcwtR98ODzm9344x/eW34HDlwWuNo/qcutfPgKdr++l69JufPJ5uNF+mRP9
0JnRC8HVwwqfw+ENb9S8N96m/Lh9Nyniy3vUOqRTMp7JLyUvxO/B8/hV79Pq
gVc/qQ9fFnyRdvhnaKzzkcFH+d11oj1xlHgf/o3uveUb4t/UuYpxgNM8zw6o
T2HftXv6CjfOr3a4HR/a+KJ6z9Sr4/fUn50T43ZbP/iKHYffmn6pH3w1O/CV
75oYPJX1PyTwlXMKe5F1qNidjOvh5bO+KBw/MfTt4qmez7qgnrdflvaJ8/fW
p6JXFx/sew9dbxxw5z68RC+u8v/hqUaUjuqMqquzZuX59di988uvXTh26PJ+
po99XeGn9So/8DsXbr/wtus73ddecMf73/3ghO7wem72br95w/cfmdJZ/bDF
X37j2W/tqh+6/49Hzf/1BzbuLvvUhV///uLxnd/e9YXhtx985P/gqxfBV/h8
54yBwRfl/QviX/yU552L4Z88L2c7/zg0cNfdwc/YL+z2QOe1OpfRETn30SE4
v98R34UnmRrnen4z6yTjqfQDX6n/yb87l/Cn8wMfnlPfizeYEd+b+IpOmr9j
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
Z+jMA//Ajb5392hv9wgEXmq6yuDHWj2HiDPiM88MPSE+YWG0G2fjn/dmOq+Z
l1Y/JPI+Wn2qGB/9TAscZb1p9/ziaE99+4J+8NXCwEX274iok+D+enFDv8t+
0sPje8xj1q9rfF31A19ZJ/ixSYFn8ML91a3K+5etJ/UMzK9xz3Y6sxX6qfdO
POa8oR/jOSTwlX2tX/faiDskT+W78h7Adk9N4SPnW+eIdq9X/YWvevb51fX7
V1e925+OHbH8fWe2+lNj1E+IfxrOWv7P9BfRlcNR/u5Zfw+pv/vX310LH725
/n1a96Xn/+XUGS89tjPuwcMefuAn61Y90SO6e576+IbnPbZ3Z/vR057cbdlR
3f0PWXuNt532P/HBF9W3By4S33f/HX9nXanPo176gnpe/UD8hvjXfaEfhgfE
F0a4L6b6x6vALTPDL+OptIvL8I/07RkfnFPvyS+7p5Wu+44aBzzGqvX+d1b7
yOp/cO27+cUXuS9jWPXD/9LbsM/8Nf8u3oHfGFj25pVwV/m7G+kc+JHymzPV
Fa72RfKwyg4NrfdZHPHZ08s+q1cwOL5rnYjz7hh8jvqfp8b4e36Hen5Ytd8a
/YyM8Xc/I5wDPze9d+Af62RhtVu3xi3b4ahpwdd5H/Fr9RDafXORR7CK9Vx+
eUq031rz5R4TdT/avYzlj+bV+oSv5OWZL/7O8wOr3b3I8p7m1DliduCuc9yH
op6SOtvxPvBeu4+4cAU8wM86HzU9S807Hmx+xO/UbRgW+EE//OG5NY/31nje
UOP/Hn6/2u2v0+v54ZFXO896qHm8ufpZuX5XPYpdqh/75c7gtebUvoADzTs7
AJfOqt/9XH2v/ALvCbcMrfG3H+l/6OKyTvvkiMdtXPM1odonRHvT19XvGs/J
ta7kB40Xl6z3mVXv4/7NidW/ddLqhkU9Uu95euQJ8heDal85F/jener9Zsa9
M2vVuLd6ntWP90vctWat19Z/9WO89GO+8GvifewJXfstga+aXqr+zqvfXS1w
1Mx6/tTgqehS3DuNT/S9q5QOfUDVTxizvP3CsePwUoWfxhTe6vH+57Q6n/W3
83/fvsK/v0j7f7v//5/+/e/+c07nH/9t49X+0lE7j59X6wI/AxfZR+7X2632
n3Z1tNxTZl8PLD4H76E9/bhz7peCJ1E35CZ4yTmv1rd7D8+s9tVrPzxV9SHP
rPcZWvt9v9BF21/iCHeWfbZP+Z0Rtb9nlP/KfPYF5e9GlX1eGPW11g39ycB6
n7OK32h1J2o83VPD7uknn6dLh6OyngBcJ5+OP3og4oDtvpuIA5qXMdV+S7TD
S3dH3DP7Me/wLf0VfLV74B/2WXwT/uFH5F163u9mnSjnd/zG1Gj/Vc275+GK
PQs/4AdWq/YNg28xnnvS25S9Z5/Fg+aZx4qP3xM684bPa97T/y6qfu6I+pZw
Gh3ymOofXzG/2u1r/cNX8n/FxdRNMg7wxvDyh6njcl/eBDi5+rHO8Srwv/oM
nne+SD2AezOzXhaedkHwbPfFORF+lqcpjul99qrf9T6t/ljch67/+wsfuvdT
/5knaD+qC7GgxmFD57KyU1MCh2vHV7Or6uOnvp0uy/Pwg7qgybPJE2z6o/ou
9U3uCLyE/51ScbNzav0MrPEVjzu/nodrE1/Bo9pbvfSIA9rXvue2eJ+b6r0n
1/ucW+9jX7kHZ1j1P7n6HRJxwGn13O2Fr1o9q8JHs8uv6Gepugr13/mFObUP
+Ce88WvqPpox9Xf1+jtd3l7hKXzVOH+r3b//Y7/eHx7I9v7ww4vhihdrv/hF
+vs/9W9///T3fH/4asV/zi08I/61ca0r+XRwlHY4B45iT7S7v48/1Q8/+5rq
B+4Sj7Pft4h8vUnVT4897uXNPC8et7BwAnvleX4czwZf+V04QTzCeRwfwj8u
qH08uPwX/r/dU798H13XdA5zw5/iE9gZPJvnB4r71PP3l/+dHfjqPnY+/OAG
hTfgKOdo8bI7A//AS7cFXvrvtvfX/54R78N77NVPPBHPiT8073RNu4feCZ5M
3bj4FB5pQ7hFHlnUe1y/2s8IPOD5ZeWn8FQbBt7g9+HeM4Ov2Ltw1+6Bl86p
5/lfcau9A6cNDVwN/8Dh8t3gnPPwOfX8VLxHvQ9cB3eNqf69j9/VD1wEl/I3
I2Ic4CXjNiLy4BJfzaa7o+8K/dU9wRO+GL5aFOcLzyfuYq/Wr36mVf8tL7XW
j+8yj3v1EzeEr4y/cYZv8XXwlTql5tHz6mnkPCaO0s7Omi/9s2uJn/H42u2v
3cu+s1fsxhm1D6fiUWs87U92b6h5qfHdNfCS+dBu/O1bei3rx/fjY30v3djt
ZT/1P7Seo6eyr+cV/pOnZxyG1XPihvD8rfXX/bvOTbcWP/V/NXfHuk0FQRRA
mxQpbCmOBBRp+AAi8QfuqRwgEiWfkp4CZEUhSeXSZQQtBU3SUCQ2SRoafoB/
QDL3LGLwQyZFZDcrj9frffvWO/fNvbP7MrwhvvA4/N4v3ctF1o/z4Wv8Xsqn
8vVKnIr/Pfjjfbef/jceuG98NV0TXLT++KoXfEKv3uL54fvkf4hzPqEnj78T
V/+ReBH9I7/pPOX3Ra/lfDR6cn5zt+ArOM25gfgp/eyn/3T14lR4zFn8/qF1
id4p9eGoB1lvnZf3Jv28if8St8ajeT59W3AXvSg7Ps65M6OsE9qhz4GXGh+R
dX6QdR7fSlc8il8Q/3lV8v7Yv3Vcr/jSvOCiavecTt8+K/V3Sn38oLw859Dh
jyo/+Cz16ernBb/Jm6i6Kfo0vAx/h/eZZZ1uOqiMG93aOPaTYoev8F/aEb+C
K9idH82uneZH0h98Tc2P83zf9mtKf1yX8emqv1/mif/F1zJv7SN6nXno3Fp8
xm3q46GMw1HpD//7sIyD+3JY5rP/o/aNj7jxo7SDHxc3qPxgv/xPxwVf0RsY
H3yiPGj8lfulnecFX7ku4ykOab+vy/RfP+u+o/y4vEK607bflPOkyjyRPzgo
uPRF8JX7qL79E8S14ED6KOcVu4/tnMHcd8+n+D58tHkuTtX2Bc3vsm8Vu3Fn
Py32Udq3jol30TlYH4yL31X/KnbttHy9vBdPs37K08PfiQ9vR6e+l8+t83RX
9g39ku95rm26+ZS9RTsfhpsLnPZxuJESjvqefLzPKR8vxVfvPi3HXX/xcyuW
vjdd0f6/pdektHvX9talPOso63VOyjjUl/H9Xf4EAhCehg==
    "], {{0, 92}, {100, 0}}, {0., 1.},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Real", ColorSpace -> Automatic, Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{100, 92},
  PlotRange->{{0, 100}, {0, 92}}]], "Output",
 CellChangeTimes->{
  3.565708230514493*^9, {3.565708270576099*^9, 3.565708290114992*^9}, {
   3.5657083459227657`*^9, 3.565708391027817*^9}, 3.565708432216803*^9, 
   3.565708500833742*^9, 3.565709687623191*^9, {3.5657098004643717`*^9, 
   3.565709819420348*^9}, 3.5657108533139887`*^9, {3.5657108918302*^9, 
   3.565710905602777*^9}, 3.565710973252076*^9, {3.565711015047737*^9, 
   3.565711027905808*^9}, 3.565711521952923*^9, 3.565711701874901*^9, 
   3.565760928027238*^9, 3.566059357425747*^9, 3.5672660048809566`*^9, {
   3.567266064569358*^9, 3.567266092511043*^9}, 3.5672663249867783`*^9, 
   3.5672664415368443`*^9, 3.56726652969457*^9, 3.567665325552618*^9, 
   3.5676667168841977`*^9, 3.5676671244105067`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}], ",", "3", 
     ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", "%", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.565710296919347*^9, 3.565710355290296*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5657103003802834`*^9, {3.565710345034482*^9, 3.565710360861717*^9}, {
   3.5672660648618717`*^9, 3.5672660927994137`*^9}, 3.567266325299961*^9, 
   3.5672664418715887`*^9, 3.567266529991048*^9, 3.567665325804632*^9, 
   3.567667124426508*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"2", "3", "4"},
     {"3", "4", "5"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.5657103003802834`*^9, {3.565710345034482*^9, 3.565710360861717*^9}, {
   3.5672660648618717`*^9, 3.5672660927994137`*^9}, 3.567266325299961*^9, 
   3.5672664418715887`*^9, 3.567266529991048*^9, 3.567665325804632*^9, 
   3.567667124428508*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"a", " ", "=", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
        "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", 
        ",", "15"}], "}"}], ",", "4", ",", " ", "4", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"-", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "@", "a"}], "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "@", "a"}], "\[IndentingNewLine]", 
   RowBox[{"a", " ", "=", " ", 
    RowBox[{"Partition", "[", 
     RowBox[{"%", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}], ",", "2", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "@", "a"}], "\[IndentingNewLine]", 
   RowBox[{"Dimensions", "@", "a"}]}]}]], "Input",
 CellChangeTimes->{{3.565709592491046*^9, 3.565709636913052*^9}, {
  3.565710036394318*^9, 3.565710250914442*^9}, {3.565710387560452*^9, 
  3.565710388361184*^9}, {3.565710544788591*^9, 3.565710661035656*^9}, {
  3.565710698984766*^9, 3.565710746045239*^9}, {3.565711357413382*^9, 
  3.565711358702577*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10", ",", "11", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "14", ",", "15", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.565709611608337*^9, 3.565709638400659*^9}, {
   3.565710050861555*^9, 3.565710084244233*^9}, {3.565710122887478*^9, 
   3.565710149955011*^9}, {3.565710185805277*^9, 3.565710252686264*^9}, 
   3.565710390786736*^9, {3.56571054736029*^9, 3.565710579390197*^9}, {
   3.56571061981498*^9, 3.565710664786255*^9}, {3.5657107064844*^9, 
   3.565710723316885*^9}, 3.565710755211253*^9, {3.5672660649183683`*^9, 
   3.567266092839097*^9}, 3.5672663253367434`*^9, 3.567266441913024*^9, 
   3.567266530026211*^9, 3.5676653258236337`*^9, 3.5676671244445086`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.565709611608337*^9, 3.565709638400659*^9}, {
   3.565710050861555*^9, 3.565710084244233*^9}, {3.565710122887478*^9, 
   3.565710149955011*^9}, {3.565710185805277*^9, 3.565710252686264*^9}, 
   3.565710390786736*^9, {3.56571054736029*^9, 3.565710579390197*^9}, {
   3.56571061981498*^9, 3.565710664786255*^9}, {3.5657107064844*^9, 
   3.565710723316885*^9}, 3.565710755211253*^9, {3.5672660649183683`*^9, 
   3.567266092839097*^9}, 3.5672663253367434`*^9, 3.567266441913024*^9, 
   3.567266530026211*^9, 3.5676653258236337`*^9, 3.567667124446509*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3", "4"},
     {"5", "6", "7", "8"},
     {"9", "10", "11", "12"},
     {"13", "14", "15", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.565709611608337*^9, 3.565709638400659*^9}, {
   3.565710050861555*^9, 3.565710084244233*^9}, {3.565710122887478*^9, 
   3.565710149955011*^9}, {3.565710185805277*^9, 3.565710252686264*^9}, 
   3.565710390786736*^9, {3.56571054736029*^9, 3.565710579390197*^9}, {
   3.56571061981498*^9, 3.565710664786255*^9}, {3.5657107064844*^9, 
   3.565710723316885*^9}, 3.565710755211253*^9, {3.5672660649183683`*^9, 
   3.567266092839097*^9}, 3.5672663253367434`*^9, 3.567266441913024*^9, 
   3.567266530026211*^9, 3.5676653258236337`*^9, 3.567667124447509*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7", ",", "8"}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"9", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"13", ",", "14"}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"11", ",", "12"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"15", ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.565709611608337*^9, 3.565709638400659*^9}, {
   3.565710050861555*^9, 3.565710084244233*^9}, {3.565710122887478*^9, 
   3.565710149955011*^9}, {3.565710185805277*^9, 3.565710252686264*^9}, 
   3.565710390786736*^9, {3.56571054736029*^9, 3.565710579390197*^9}, {
   3.56571061981498*^9, 3.565710664786255*^9}, {3.5657107064844*^9, 
   3.565710723316885*^9}, 3.565710755211253*^9, {3.5672660649183683`*^9, 
   3.567266092839097*^9}, 3.5672663253367434`*^9, 3.567266441913024*^9, 
   3.567266530026211*^9, 3.5676653258236337`*^9, 3.5676671244495087`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "2"},
         {"5", "6"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"3", "4"},
         {"7", "8"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"9", "10"},
         {"13", "14"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"11", "12"},
         {"15", 
          RowBox[{"-", "1"}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.565709611608337*^9, 3.565709638400659*^9}, {
   3.565710050861555*^9, 3.565710084244233*^9}, {3.565710122887478*^9, 
   3.565710149955011*^9}, {3.565710185805277*^9, 3.565710252686264*^9}, 
   3.565710390786736*^9, {3.56571054736029*^9, 3.565710579390197*^9}, {
   3.56571061981498*^9, 3.565710664786255*^9}, {3.5657107064844*^9, 
   3.565710723316885*^9}, 3.565710755211253*^9, {3.5672660649183683`*^9, 
   3.567266092839097*^9}, 3.5672663253367434`*^9, 3.567266441913024*^9, 
   3.567266530026211*^9, 3.5676653258236337`*^9, 3.567667124450509*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{{3.565709611608337*^9, 3.565709638400659*^9}, {
   3.565710050861555*^9, 3.565710084244233*^9}, {3.565710122887478*^9, 
   3.565710149955011*^9}, {3.565710185805277*^9, 3.565710252686264*^9}, 
   3.565710390786736*^9, {3.56571054736029*^9, 3.565710579390197*^9}, {
   3.56571061981498*^9, 3.565710664786255*^9}, {3.5657107064844*^9, 
   3.565710723316885*^9}, 3.565710755211253*^9, {3.5672660649183683`*^9, 
   3.567266092839097*^9}, 3.5672663253367434`*^9, 3.567266441913024*^9, 
   3.567266530026211*^9, 3.5676653258236337`*^9, 3.567667124452509*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Flatten", "[", 
  RowBox[{"a", ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.5657104230649157`*^9, 3.5657105150538387`*^9}, {
  3.565710565266315*^9, 3.565710568505754*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10", ",", "11", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "14", ",", "15", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.565710428294133*^9, {3.565710510654825*^9, 3.56571051554669*^9}, {
   3.565710570035976*^9, 3.565710582240741*^9}, {3.567266064967339*^9, 
   3.5672660929047203`*^9}, 3.567266325417659*^9, 3.567266441961886*^9, 
   3.567266530077093*^9, 3.567665325847635*^9, 3.56766712446751*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3", "4"},
     {"5", "6", "7", "8"},
     {"9", "10", "11", "12"},
     {"13", "14", "15", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.565710428294133*^9, {3.565710510654825*^9, 3.56571051554669*^9}, {
   3.565710570035976*^9, 3.565710582240741*^9}, {3.567266064967339*^9, 
   3.5672660929047203`*^9}, 3.567266325417659*^9, 3.567266441961886*^9, 
   3.567266530077093*^9, 3.567665325847635*^9, 3.56766712446951*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.56571015952216*^9, 3.5657101697994757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "=", " ", 
  RowBox[{"Partition", "[", 
   RowBox[{"imageData", ",", " ", 
    RowBox[{"{", 
     RowBox[{"8", ",", "8"}], "}"}], ",", "8", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"-", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.565708952403728*^9, 3.565708968554253*^9}, {
  3.565709063622123*^9, 3.565709069932033*^9}, {3.565709149134392*^9, 
  3.565709179867014*^9}, {3.565709339321299*^9, 3.565709348454504*^9}, {
  3.565709844456726*^9, 3.5657098645268793`*^9}, {3.565710814359292*^9, 
  3.5657108195344563`*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{299., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}], ",", 
           RowBox[{"\[LeftSkeleton]", "10", "\[RightSkeleton]"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}], 
          "}"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{54., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 777, 23381088568723048840, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{60., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 777, 23381088568723048840, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{92., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 777, 23381088568723048840, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{78., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[777]]], "Output",
 CellChangeTimes->{
  3.565709071106738*^9, {3.565709153228978*^9, 3.565709173510145*^9}, 
   3.565709351230838*^9, {3.565709854711629*^9, 3.56570986643601*^9}, 
   3.565710821323471*^9, {3.567266065239818*^9, 3.567266093182537*^9}, 
   3.56726632570691*^9, 3.567266442284111*^9, 3.567266530359352*^9, 
   3.5676653260706477`*^9, 3.567667124683522*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"MatrixForm", "@", 
   RowBox[{"Last", "@", 
    RowBox[{"Last", "[", "a", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.565709874255072*^9, 3.565709929533505*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.565709883892684*^9, 3.565709930884308*^9}, {
   3.567266065321666*^9, 3.5672660932626123`*^9}, 3.567266325788028*^9, 
   3.567266442554023*^9, 3.5672665304289207`*^9, 3.5676653260896487`*^9, 
   3.5676671247025237`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", " ", "=", " ", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", 
      "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", ",", "14", 
      ",", "15", ",", "16"}], "}"}], ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.565711322618681*^9, 3.565711396450172*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "10", ",", "11", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "14", ",", "15", ",", "16"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.565711378729163*^9, 3.5657114019767723`*^9}, {
   3.5672660653633413`*^9, 3.5672660933010883`*^9}, 3.5672663258350983`*^9, 
   3.567266442736187*^9, 3.5672665304815407`*^9, 3.56766532610765*^9, 
   3.5676671247205243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", "%"}]], "Input",
 CellChangeTimes->{{3.565711384539645*^9, 3.565711387891794*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3", "4"},
     {"5", "6", "7", "8"},
     {"9", "10", "11", "12"},
     {"13", "14", "15", "16"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.56571138886754*^9, {3.567266065418221*^9, 3.5672660933493223`*^9}, 
   3.567266325886488*^9, 3.567266442863443*^9, 3.567266530527865*^9, 
   3.5676653261236506`*^9, 3.5676671247365255`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "@", 
  RowBox[{"Partition", "[", 
   RowBox[{"list", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"appliedList", " ", "=", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"x", " ", "*", " ", "2"}]}], "]"}], "/@", 
   "list"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "@", "appliedList"}]}], "Input",
 CellChangeTimes->{{3.565711405830805*^9, 3.565711419815853*^9}, {
  3.565762782659289*^9, 3.565762843130185*^9}, {3.5657629353238697`*^9, 
  3.565763013959425*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "2"},
         {"5", "6"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"3", "4"},
         {"7", "8"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"9", "10"},
         {"13", "14"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"11", "12"},
         {"15", "16"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.565711420744857*^9, {3.565762785442131*^9, 3.5657628443975782`*^9}, {
   3.56576296173775*^9, 3.5657630144211407`*^9}, {3.5672660654671097`*^9, 
   3.567266093416119*^9}, 3.567266325935391*^9, 3.567266442930089*^9, 
   3.56726653058287*^9, 3.5676653261406517`*^9, 3.5676671247535267`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "4", ",", "6", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "12", ",", "14", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "20", ",", "22", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"26", ",", "28", ",", "30", ",", "32"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.565711420744857*^9, {3.565762785442131*^9, 3.5657628443975782`*^9}, {
   3.56576296173775*^9, 3.5657630144211407`*^9}, {3.5672660654671097`*^9, 
   3.567266093416119*^9}, 3.567266325935391*^9, 3.567266442930089*^9, 
   3.56726653058287*^9, 3.5676653261406517`*^9, 3.5676671247555265`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "4", "6", "8"},
     {"10", "12", "14", "16"},
     {"18", "20", "22", "24"},
     {"26", "28", "30", "32"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.565711420744857*^9, {3.565762785442131*^9, 3.5657628443975782`*^9}, {
   3.56576296173775*^9, 3.5657630144211407`*^9}, {3.5672660654671097`*^9, 
   3.567266093416119*^9}, 3.567266325935391*^9, 3.567266442930089*^9, 
   3.56726653058287*^9, 3.5676653261406517`*^9, 3.5676671247575264`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{791, 851},
WindowMargins->{{Automatic, -1075}, {Automatic, 34}},
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (November 7, 2010)",
StyleDefinitions->"Default.nb",
PrivateNotebookOptions -> {
 "VersionedStylesheet" -> {"Default.nb"[8.] -> False}}
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[676, 25, 102, 1, 83, "Title"],
Cell[CellGroupData[{
Cell[803, 30, 116, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[944, 35, 28541, 473, 109, "Input"],
Cell[29488, 510, 5907, 159, 156, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35444, 675, 110, 1, 71, "Section"],
Cell[CellGroupData[{
Cell[35579, 680, 1595, 27, 31, "Input"],
Cell[37177, 709, 4601, 127, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41815, 841, 447, 8, 72, "Input"],
Cell[42265, 851, 425, 8, 30, "Output"],
Cell[42693, 861, 393, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43123, 873, 190, 5, 52, "Input"],
Cell[43316, 880, 282, 5, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43647, 891, 149, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[43821, 897, 1596, 31, 132, "Input"],
Cell[45420, 930, 7570, 195, 194, "Output"],
Cell[52993, 1127, 335, 7, 30, "Output"],
Cell[53331, 1136, 4332, 123, 112, "Output"],
Cell[57666, 1261, 4334, 123, 112, "Output"],
Cell[62003, 1386, 7263, 189, 194, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69315, 1581, 213, 3, 71, "Section"],
Cell[CellGroupData[{
Cell[69553, 1588, 2306, 49, 212, "Input"],
Cell[71862, 1639, 4510, 125, 112, "Output"],
Cell[76375, 1766, 511, 9, 30, "Output"],
Cell[76889, 1777, 507, 7, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77445, 1790, 255, 3, 71, "Section"],
Cell[CellGroupData[{
Cell[77725, 1797, 3259, 80, 232, "Input"],
Cell[80987, 1879, 983, 16, 30, "Output"]
}, Open  ]],
Cell[81985, 1898, 91, 1, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82113, 1904, 151, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[82289, 1910, 1480, 31, 92, "Input"],
Cell[83772, 1943, 6357, 165, 156, "Output"],
Cell[90132, 2110, 6241, 162, 186, "Output"],
Cell[96376, 2274, 806, 13, 30, "Output"],
Cell[97185, 2289, 79980, 1314, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177202, 3608, 485, 13, 72, "Input"],
Cell[177690, 3623, 527, 13, 30, "Output"],
Cell[178220, 3638, 884, 23, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179141, 3666, 1337, 30, 152, "Input"],
Cell[180481, 3698, 970, 19, 30, "Output"],
Cell[181454, 3719, 645, 10, 30, "Output"],
Cell[182102, 3731, 1259, 28, 86, "Output"],
Cell[183364, 3761, 1444, 39, 30, "Output"],
Cell[184811, 3802, 3393, 82, 88, "Output"],
Cell[188207, 3886, 665, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188909, 3901, 428, 11, 52, "Input"],
Cell[189340, 3914, 701, 16, 30, "Output"],
Cell[190044, 3932, 992, 25, 86, "Output"]
}, Open  ]],
Cell[191051, 3960, 93, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[191169, 3965, 627, 14, 31, "Input"],
Cell[191799, 3981, 4712, 131, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196548, 4117, 220, 5, 52, "Input"],
Cell[196771, 4124, 3361, 107, 146, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200169, 4236, 406, 9, 31, "Input"],
Cell[200578, 4247, 621, 14, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201236, 4266, 124, 2, 31, "Input"],
Cell[201363, 4270, 880, 23, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202280, 4298, 607, 15, 72, "Input"],
Cell[202890, 4315, 3109, 78, 88, "Output"],
Cell[206002, 4395, 694, 15, 30, "Output"],
Cell[206699, 4412, 984, 24, 86, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
